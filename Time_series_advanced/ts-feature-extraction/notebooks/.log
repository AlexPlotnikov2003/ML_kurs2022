2022-09-05 19:51:59,859 [7228] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2022-09-05 19:51:59,859 [7228] DEBUG    root:93: [JupyterRequire] Initializing comms.
2022-09-05 19:51:59,859 [7228] INFO     root:247: [JupyterRequire] Initializing comms.
2022-09-05 19:51:59,862 [7228] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2022-09-05 19:51:59,862 [7228] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2022-09-05 19:51:59,863 [7228] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2022-09-05 19:52:00,710 [7228] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2022-09-05 19:52:00,712 [7228] DEBUG    root:93: [JupyterRequire] Initializing comms.
2022-09-05 19:52:00,713 [7228] INFO     root:247: [JupyterRequire] Initializing comms.
2022-09-05 19:52:00,718 [7228] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2022-09-05 19:52:00,719 [7228] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2022-09-05 19:52:00,719 [7228] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2022-09-05 19:52:18,302 [7228] WARNING  py.warnings:109: [JupyterRequire] C:\Users\sasha\anaconda3\lib\site-packages\numpy\_distributor_init.py:30: UserWarning: loaded more than 1 DLL from .libs:
C:\Users\sasha\anaconda3\lib\site-packages\numpy\.libs\libopenblas.EL2C6PLE4ZYW3ECEVIV3OXXGRN2NRFM2.gfortran-win_amd64.dll
C:\Users\sasha\anaconda3\lib\site-packages\numpy\.libs\libopenblas.QVLO2T66WEPI7JZ63PS3HMOHFEY472BC.gfortran-win_amd64.dll
  warnings.warn("loaded more than 1 DLL from .libs:"

2022-09-05 19:52:19,135 [7228] DEBUG    matplotlib:241: [JupyterRequire] (private) matplotlib data path: C:\Users\sasha\anaconda3\lib\site-packages\matplotlib\mpl-data
2022-09-05 19:52:19,135 [7228] DEBUG    matplotlib:241: [JupyterRequire] matplotlib data path: C:\Users\sasha\anaconda3\lib\site-packages\matplotlib\mpl-data
2022-09-05 19:52:19,139 [7228] DEBUG    matplotlib:241: [JupyterRequire] CONFIGDIR=C:\Users\sasha\.matplotlib
2022-09-05 19:52:19,143 [7228] DEBUG    matplotlib:1471: [JupyterRequire] matplotlib version 3.3.2
2022-09-05 19:52:19,143 [7228] DEBUG    matplotlib:1472: [JupyterRequire] interactive is False
2022-09-05 19:52:19,143 [7228] DEBUG    matplotlib:1473: [JupyterRequire] platform is win32
2022-09-05 19:52:19,143 [7228] DEBUG    matplotlib:1474: [JupyterRequire] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_warnings', '_frozen_importlib_external', '_io', 'marshal', 'nt', '_thread', '_weakref', 'winreg', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1251', '_signal', '__main__', 'encodings.latin_1', '_abc', 'abc', 'io', '_stat', 'stat', '_collections_abc', 'genericpath', 'ntpath', 'os.path', 'os', '_sitebuiltins', '_locale', '_bootlocale', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', 'importlib.abc', '_operator', 'operator', 'keyword', '_heapq', 'heapq', 'itertools', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'google', 'mpl_toolkits', 'sphinxcontrib', 'zope', 'site', '_weakrefset', 'weakref', 'pkgutil', 'runpy', 'ipykernel._version', '__future__', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'signal', 'threading', 'msvcrt', '_winapi', 'subprocess', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'atexit', 'copy', 'posixpath', 'fnmatch', 'glob', 'token', 'tokenize', 'linecache', 'traceback', 'collections.abc', '_string', 'string', 'logging', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_opcode', 'opcode', 'dis', 'inspect', 'typing.io', 'typing.re', 'typing', '_ast', 'ast', 'traitlets.utils', 'traitlets.utils.bunch', 'traitlets.utils.descriptions', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'traitlets.utils.sentinel', 'traitlets.traitlets', 'traitlets._version', 'traitlets.utils.decorators', 'traitlets', 'pprint', '_socket', 'math', 'select', 'selectors', 'socket', '_struct', 'struct', '_compat_pickle', '_pickle', 'pickle', '_queue', 'queue', 'logging.handlers', 'socketserver', 'logging.config', 'textwrap', 'traitlets.utils.text', 'locale', 'gettext', 'argparse', 'traitlets.config.loader', 'traitlets.config.configurable', 'traitlets.utils.nested_update', 'traitlets.config.application', 'traitlets.config', 'platform', 'sysconfig', 'urllib', 'urllib.parse', 'pydoc', 'bdb', 'IPython.utils', 'IPython.utils.ipstruct', 'IPython.utils.coloransi', 'pygments', 'IPython.utils.colorable', 'IPython.utils.PyColorize', 'IPython.utils.encoding', 'IPython.utils.py3compat', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'cmd', 'codeop', 'code', 'pdb', 'IPython.core.debugger', 'IPython.core.display_trap', '_bisect', 'bisect', '_sha512', '_random', 'random', '_ctypes', 'ctypes._endian', 'ctypes', 'ctypes.wintypes', 'shlex', 'IPython.utils._process_common', 'IPython.utils._process_win32', 'IPython.utils.process', 'IPython.utils.decorators', 'IPython.utils.path', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.core.ultratb', 'IPython.utils._sysinfo', 'IPython.utils.sysinfo', 'IPython.core.crashhandler', 'tempfile', 'IPython.utils.importstring', 'IPython.paths', 'IPython.core.profiledir', 'IPython.core.application', 'IPython.terminal', '_hashlib', '_blake2', '_sha3', 'hashlib', 'IPython.core.compilerop', 'IPython.core.error', 'pathlib', 'IPython.utils.text', 'IPython.core.magic_arguments', 'getopt', 'binascii', 'mimetypes', 'IPython.core.display', 'IPython.core.page', 'getpass', 'IPython.lib.security', 'IPython.lib', '_datetime', 'datetime', 'IPython.lib.pretty', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers', 'pygments.filter', 'pygments.token', 'pygments.filters', 'pygments.regexopt', 'pygments.lexer', 'pygments.unistring', 'pygments.lexers.python', 'pygments.formatters._mapping', 'pygments.formatters', 'pygments.styles', 'pygments.formatter', 'pygments.formatters.html', 'IPython.core.oinspect', 'IPython.core.inputtransformer2', 'decorator', 'IPython.core.magic', 'pickleshare', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.prefilter', 'IPython.core.alias', 'IPython.core.builtin_trap', 'backcall.backcall', 'backcall', 'IPython.core.events', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.utils.sentinel', 'IPython.core.formatters', '_sqlite3', 'sqlite3.dbapi2', 'sqlite3', 'IPython.core.history', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'html.entities', 'html', 'IPython.lib.display', 'IPython.display', 'IPython.utils.capture', 'IPython.utils.io', 'IPython.core.hooks', 'IPython.utils.strdispatch', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.core.interactiveshell', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_ssl', 'base64', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop.utils', 'prompt_toolkit.eventloop.async_generator', 'wcwidth.table_wide', 'wcwidth.table_zero', 'wcwidth.unicode_versions', 'wcwidth.wcwidth', 'wcwidth', 'prompt_toolkit.utils', 'prompt_toolkit.eventloop.inputhook', 'prompt_toolkit.eventloop', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.clipboard', 'prompt_toolkit.cache', 'prompt_toolkit.enums', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.app', 'prompt_toolkit.filters.cli', 'prompt_toolkit.filters.utils', 'prompt_toolkit.filters', 'prompt_toolkit.document', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.data_structures', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.pygments', 'colorsys', 'prompt_toolkit.styles.style_transformation', 'prompt_toolkit.styles', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.base', 'prompt_toolkit.patch_stdout', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output', 'array', 'prompt_toolkit.output.vt100', 'prompt_toolkit.mouse_events', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.formatted_text.ansi', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', 'prompt_toolkit.formatted_text.html', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.formatted_text', 'prompt_toolkit.completion.base', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.completion.nested', 'prompt_toolkit.completion', 'prompt_toolkit.history', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.search', 'prompt_toolkit.validation', 'prompt_toolkit.buffer', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.lexers', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.controls', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.layout.screen', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.layout', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.renderer', 'prompt_toolkit.application.application', 'prompt_toolkit.application.dummy', 'prompt_toolkit.application', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.widgets', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.shortcuts', 'prompt_toolkit', 'pygments.style', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'parso._compatibility', 'parso.utils', 'parso.tree', 'parso.python', 'parso.python.token', 'parso.python.tokenize', 'parso.pgen2.grammar_parser', 'parso.pgen2.generator', 'parso.pgen2', 'parso.parser', 'difflib', 'parso.python.prefix', 'parso.python.tree', 'parso.python.parser', 'parso.python.diff', 'gc', 'parso.cache', 'parso.normalizer', 'parso.python.errors', 'parso.python.pep8', 'parso.file_io', 'parso.grammar', 'parso', 'jedi.file_io', 'jedi._compatibility', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.inference.cache', 'jedi.inference.helpers', 'jedi.inference.utils', 'jedi.inference.base_value', 'jedi.common', 'jedi.inference.sys_path', 'jedi.inference.recursion', 'jedi.inference.flow_analysis', 'jedi.inference.lazy_value', 'jedi.inference.docstrings', 'jedi.plugins', 'jedi.inference.names', 'jedi.inference.filters', 'jedi.inference.compiled.getattr_static', 'jedi.inference.compiled.access', 'jedi.inference.signature', 'jedi.inference.context', 'jedi.inference.compiled.value', 'jedi.inference.compiled', 'jedi.inference.analysis', 'jedi.inference.gradual', 'jedi.inference.value.module', 'jedi.inference.value.dynamic_arrays', 'jedi.inference.value.iterable', 'jedi.inference.arguments', 'jedi.inference.parser_cache', 'jedi.inference.gradual.generics', 'jedi.inference.value.function', 'jedi.inference.value.klass', 'jedi.inference.value.instance', 'jedi.inference.value', 'jedi.inference.gradual.base', 'jedi.inference.gradual.type_var', 'jedi.inference.gradual.typing', 'jedi.inference.gradual.stub_value', 'jedi.inference.gradual.typeshed', 'jedi.inference.imports', 'jedi.inference.param', 'jedi.inference.gradual.annotation', 'jedi.inference.value.decorator', 'jedi.inference.syntax_tree', 'jedi.inference', 'jedi.inference.gradual.conversion', 'jedi.inference.compiled.mixed', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.keywords', 'jedi.api.completion_cache', 'jedi.api.helpers', 'jedi.api.classes', 'jedi.api.interpreter', 'jedi.api.strings', 'jedi.api.file_name', 'jedi.api.completion', 'filecmp', 'jedi.inference.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.inference.compiled.subprocess', 'jedi.api.environment', 'jedi.inference.references', 'jedi.api.project', 'jedi.api.errors', 'jedi.api.refactoring', 'jedi.api.refactoring.extract', 'jedi.inference.gradual.utils', 'jedi.api', 'jedi.plugins.stdlib', 'jedi.plugins.flask', 'jedi.plugins.pytest', 'jedi.plugins.django', 'jedi.plugins.registry', 'jedi', 'IPython.core.completer', 'IPython.terminal.ptutils', 'IPython.lib.clipboard', 'IPython.terminal.shortcuts', 'IPython.terminal.debugger', 'IPython.terminal.magics', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.interactiveshell', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'email', 'http', 'email.errors', 'email.quoprimime', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', 'http.client', 'urllib.response', 'urllib.error', 'nturl2path', 'urllib.request', 'IPython.core.magics.code', 'IPython.core.magics.config', 'IPython.core.magics.display', 'timeit', '_lsprof', 'profile', 'cProfile', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.execution', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.pylabtools', 'IPython.core.magics.pylab', 'IPython.lib.backgroundjobs', 'IPython.core.magics.script', 'IPython.core.magics', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.terminal.ipapp', 'IPython.terminal.embed', 'IPython.utils.frame', 'IPython', 'ipython_genutils._version', 'ipython_genutils', 'ipython_genutils.encoding', 'ipython_genutils.py3compat', 'ipython_genutils.path', 'jupyter_client._version', 'zmq.backend.select', 'cython_runtime', 'zmq.backend.cython.constants', '_cython_0_29_21', 'zmq.backend.cython.error', 'zmq.error', 'zmq.backend.cython.message', 'zmq.backend.cython.context', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.backend.cython', 'zmq.backend', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.constants', 'zmq.sugar.attrsettr', 'zmq.sugar.poll', 'zmq.utils.strtypes', 'zmq.utils.jsonapi', 'zmq.sugar.socket', 'zmq.sugar.context', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'zmq.sugar', 'zmq', 'jupyter_client.localinterfaces', 'jupyter_core.version', 'jupyter_core', 'distutils', 'distutils.errors', 'distutils.dep_util', 'distutils.debug', 'distutils.log', 'distutils.spawn', 'distutils.util', 'jupyter_core.paths', 'jupyter_client.connect', 'traitlets.log', 'jupyter_client.launcher', 'jupyter_client.channelsabc', 'jupyter_client.channels', 'jupyter_client.clientabc', 'jupyter_client.client', 'ipython_genutils.importstring', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.manager', 'jupyter_client.blocking.channels', 'jupyter_client.blocking.client', 'jupyter_client.blocking', 'zmq._future', 'zmq.asyncio', 'jupyter_client.asynchronous.channels', 'jupyter_client.asynchronous.client', 'jupyter_client.asynchronous', 'uuid', 'jupyter_client.multikernelmanager', 'jupyter_client', 'ipykernel.connect', 'ipykernel', 'tornado', 'numbers', 'tornado.speedups', 'tornado.util', 'tornado.escape', 'colorama.ansi', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'tornado.log', 'tornado.concurrent', 'tornado.ioloop', 'tornado.platform', 'tornado.gen', 'tornado.platform.asyncio', 'zmq.eventloop.ioloop', 'zmq.eventloop', 'zmq.eventloop.zmqstream', 'imp', 'hmac', 'dateutil._version', 'dateutil', 'six', '_decimal', 'decimal', 'dateutil._common', 'dateutil.relativedelta', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', '_strptime', 'jupyter_client.jsonutil', 'jupyter_client.adapter', 'jupyter_client.session', 'ipykernel.iostream', 'ipykernel.heartbeat', 'IPython.utils.tokenutil', 'tornado.locks', 'tornado.queues', 'ipykernel.jsonutil', 'ipykernel.kernelbase', 'ipykernel.comm.comm', 'ipykernel.comm.manager', 'ipykernel.comm', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.zmqshell', 'distutils.version', 'ipykernel.eventloops', 'ipykernel.ipkernel', 'ipykernel.parentpoller', 'ipykernel.kernelapp', 'win32api', 'win32security', 'ntsecuritycon', 'faulthandler', 'ipykernel.codeutil', 'ipykernel.pickleutil', 'ipykernel.serialize', 'ipykernel.datapub', 'IPython.core.completerlib', 'storemagic', 'configparser', 'isort.stdlibs.py27', 'isort.stdlibs.py2', 'isort.stdlibs.py35', 'isort.stdlibs.py36', 'isort.stdlibs.py37', 'isort.stdlibs.py38', 'isort.stdlibs.py39', 'isort.stdlibs.py3', 'isort.stdlibs.all', 'isort.stdlibs', 'dataclasses', 'isort._future', 'isort._vendored', 'isort._vendored.toml.tz', 'isort._vendored.toml.decoder', 'isort._vendored.toml.encoder', 'isort._vendored.toml', 'isort.profiles', 'isort.exceptions', 'isort.sections', 'isort.comments', 'isort.wrap_modes', 'isort.settings', 'isort._version', 'isort.literal', 'isort.format', 'isort.utils', 'isort.place', 'isort.deprecated', 'isort.deprecated.finders', 'isort.parse', 'isort.sorting', 'isort.wrap', 'isort.output', 'isort.core', 'isort.io', 'isort.api', 'isort', 'toml.tz', 'toml.decoder', 'toml.encoder', 'toml', 'optparse', 'pycodestyle', 'autopep8', 'pythonjsonlogger', 'pythonjsonlogger.jsonlogger', 'daiquiri.formatter', 'daiquiri.handlers', 'daiquiri.output', 'daiquiri', 'jupyter_require.__about__', 'csscompressor', 'jupyter_require.core', 'jupyter_require.notebook', 'jupyter_nbutils.__about__', 'jupyter_nbutils.config', 'jupyter_nbutils.utils', 'jupyter_nbutils', 'jupyter_require.magic', 'jupyter_require', 'matplotlib', 'gzip', 'numpy._globals', 'numpy.__config__', 'numpy._distributor_init', 'numpy._version', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core._machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', '_cython_0_29_24', 'numpy.random._common', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'matplotlib.cbook.deprecation', 'matplotlib.cbook', 'matplotlib._animation_data', 'matplotlib.animation', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib.docstring', 'matplotlib._color_data', 'matplotlib.colors', 'cycler', 'matplotlib.rcsetup', 'matplotlib._version', 'matplotlib.ft2font', 'kiwisolver']
2022-09-05 19:52:19,491 [7228] DEBUG    matplotlib:241: [JupyterRequire] CACHEDIR=C:\Users\sasha\.matplotlib
2022-09-05 19:52:19,646 [7228] DEBUG    matplotlib.font_manager:1436: [JupyterRequire] Using fontManager instance from C:\Users\sasha\.matplotlib\fontlist-v330.json
2022-09-05 19:52:20,117 [7228] DEBUG    matplotlib.pyplot:289: [JupyterRequire] Loaded backend nbAgg version unknown.
2022-09-05 19:52:20,119 [7228] DEBUG    matplotlib.pyplot:289: [JupyterRequire] Loaded backend nbAgg version unknown.
2022-09-05 19:52:46,845 [7228] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2022-09-05 19:52:46,846 [7228] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2022-09-05 19:52:46,846 [7228] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2022-09-05 19:52:46,846 [7228] DEBUG    parso.python.diff:378: [JupyterRequire] copy old[1:1] new[1:1]
2022-09-05 19:52:46,847 [7228] DEBUG    parso.python.diff:421: [JupyterRequire] parse_part from 2 to 3 (to 2 in part parser)
2022-09-05 19:52:46,847 [7228] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[replace] old[3:3] new[3:3]
2022-09-05 19:52:46,847 [7228] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2022-09-05 19:52:51,234 [7228] INFO     numexpr.utils:141: [JupyterRequire] NumExpr defaulting to 8 threads.
2022-09-05 19:52:58,239 [7228] DEBUG    matplotlib.font_manager:1334: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=16.0.
2022-09-05 19:52:58,239 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,240 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,240 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,240 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,240 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,240 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,240 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,241 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,241 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-09-05 19:52:58,241 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,241 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,241 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,241 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,242 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-09-05 19:52:58,242 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-09-05 19:52:58,242 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,242 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,242 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,242 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,243 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,243 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,243 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,243 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-09-05 19:52:58,243 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,243 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,243 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,244 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,244 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,244 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,244 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-09-05 19:52:58,244 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-09-05 19:52:58,244 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,244 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,245 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,245 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-09-05 19:52:58,245 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-09-05 19:52:58,245 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,245 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-09-05 19:52:58,245 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,246 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,246 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
2022-09-05 19:52:58,246 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2022-09-05 19:52:58,246 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 19:52:58,246 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,246 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,247 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
2022-09-05 19:52:58,247 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
2022-09-05 19:52:58,247 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,247 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2022-09-05 19:52:58,247 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,247 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,247 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,248 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,248 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Book Basic' (GenBkBasB.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,248 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2022-09-05 19:52:58,248 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,248 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
2022-09-05 19:52:58,248 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,249 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,249 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,249 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,249 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,249 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,249 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 19:52:58,249 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Bold.ttf) normal normal 700 condensed>) = 10.535
2022-09-05 19:52:58,250 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,250 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
2022-09-05 19:52:58,250 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,250 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 19:52:58,250 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,250 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,250 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
2022-09-05 19:52:58,251 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,251 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,251 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,251 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,251 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,251 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,252 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,252 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-09-05 19:52:58,252 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,252 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Book Basic' (GenBkBasR.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,252 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,252 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,252 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,253 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,253 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,253 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,253 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,253 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,253 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,254 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,254 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,254 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
2022-09-05 19:52:58,254 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Basic' (GenBasI.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,254 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,254 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,254 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,255 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,255 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,255 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Basic' (GenBasI.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,255 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,255 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,255 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Bold.ttf) normal normal 700 condensed>) = 10.535
2022-09-05 19:52:58,255 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,256 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-BoldOblique.ttf) oblique normal 700 condensed>) = 1.535
2022-09-05 19:52:58,256 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,256 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,256 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,256 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,256 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-09-05 19:52:58,257 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,257 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
2022-09-05 19:52:58,257 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,257 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
2022-09-05 19:52:58,257 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,257 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-ExtraLight.ttf) normal normal 200 normal>) = 0.24
2022-09-05 19:52:58,257 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Basic' (GenBasBI.ttf) italic normal 700 normal>) = 11.335
2022-09-05 19:52:58,258 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Basic' (GenBasB.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,258 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,258 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,258 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
2022-09-05 19:52:58,258 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,258 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,258 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2022-09-05 19:52:58,259 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,259 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,259 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,259 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2022-09-05 19:52:58,259 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 19:52:58,259 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,260 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
2022-09-05 19:52:58,260 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
2022-09-05 19:52:58,260 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,260 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-09-05 19:52:58,260 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,260 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,260 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,261 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,261 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
2022-09-05 19:52:58,261 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,261 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2022-09-05 19:52:58,261 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,261 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Oblique.ttf) oblique normal 400 condensed>) = 1.25
2022-09-05 19:52:58,262 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,262 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,262 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,262 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,262 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Bold.ttf) normal normal 700 condensed>) = 0.5349999999999999
2022-09-05 19:52:58,262 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arimo' (Arimo-Italic.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,262 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,263 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,263 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
2022-09-05 19:52:58,263 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2022-09-05 19:52:58,263 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,263 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,263 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,264 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,264 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,264 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,264 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,264 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
2022-09-05 19:52:58,264 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,264 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,265 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,265 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2022-09-05 19:52:58,265 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 19:52:58,265 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2022-09-05 19:52:58,265 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,265 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,265 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2022-09-05 19:52:58,266 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arimo' (Arimo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,266 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Bold.ttf) normal normal 700 condensed>) = 0.5349999999999999
2022-09-05 19:52:58,266 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
2022-09-05 19:52:58,266 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeamViewer15' (teamviewer15.otf) normal normal 500 normal>) = 10.145
2022-09-05 19:52:58,266 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,266 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,267 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,267 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arimo' (Arimo-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-09-05 19:52:58,267 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,267 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,267 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
2022-09-05 19:52:58,267 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed.ttf) normal normal 400 condensed>) = 0.25
2022-09-05 19:52:58,267 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 19:52:58,268 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,268 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,268 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,268 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
2022-09-05 19:52:58,268 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-09-05 19:52:58,268 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2022-09-05 19:52:58,268 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,269 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,269 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,269 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,269 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Book Basic' (GenBkBasBI.ttf) italic normal 700 normal>) = 11.335
2022-09-05 19:52:58,269 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,269 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 19:52:58,270 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,270 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-09-05 19:52:58,270 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,270 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
2022-09-05 19:52:58,270 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,270 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,270 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,271 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,271 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,271 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-09-05 19:52:58,271 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,271 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,271 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2022-09-05 19:52:58,271 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
2022-09-05 19:52:58,272 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,272 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2022-09-05 19:52:58,272 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
2022-09-05 19:52:58,272 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
2022-09-05 19:52:58,272 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,272 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,273 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,273 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 19:52:58,273 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,273 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,273 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
2022-09-05 19:52:58,273 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 19:52:58,273 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Oblique.ttf) oblique normal 400 condensed>) = 1.25
2022-09-05 19:52:58,274 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,274 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2022-09-05 19:52:58,274 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 19:52:58,274 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,274 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,274 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
2022-09-05 19:52:58,274 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2022-09-05 19:52:58,275 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,275 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-09-05 19:52:58,275 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,275 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
2022-09-05 19:52:58,275 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,275 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,276 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Book Basic' (GenBkBasI.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,276 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeamViewer15' (teamviewer15.otf) normal normal 500 normal>) = 10.145
2022-09-05 19:52:58,276 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2022-09-05 19:52:58,276 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed.ttf) normal normal 400 condensed>) = 10.25
2022-09-05 19:52:58,276 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
2022-09-05 19:52:58,276 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2022-09-05 19:52:58,276 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,277 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,277 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,277 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,277 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2022-09-05 19:52:58,277 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,277 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,277 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,278 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,278 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,278 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,278 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,278 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,278 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Basic' (GenBasB.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,279 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
2022-09-05 19:52:58,279 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-BoldOblique.ttf) oblique normal 700 condensed>) = 1.535
2022-09-05 19:52:58,279 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,279 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,279 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-09-05 19:52:58,279 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 19:52:58,279 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2022-09-05 19:52:58,280 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,280 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,280 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Italic.ttf) italic normal 400 condensed>) = 11.25
2022-09-05 19:52:58,280 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,280 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,280 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,280 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,281 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2022-09-05 19:52:58,281 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,281 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,281 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2022-09-05 19:52:58,281 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,281 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,282 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,282 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,282 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arimo' (Arimo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,282 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,282 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,282 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,282 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,283 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
2022-09-05 19:52:58,283 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,283 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,283 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 19:52:58,283 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,283 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 19:52:58,283 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,284 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,284 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,284 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,284 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,284 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
2022-09-05 19:52:58,284 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-09-05 19:52:58,284 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,285 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,285 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,285 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Book Basic' (GenBkBasB.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,285 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-09-05 19:52:58,285 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2022-09-05 19:52:58,285 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,286 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,286 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,286 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,286 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-09-05 19:52:58,286 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,286 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,286 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,287 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed.ttf) normal normal 400 condensed>) = 10.25
2022-09-05 19:52:58,287 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,287 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2022-09-05 19:52:58,287 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2022-09-05 19:52:58,287 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 19:52:58,287 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2022-09-05 19:52:58,287 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2022-09-05 19:52:58,288 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,288 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2022-09-05 19:52:58,288 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,288 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,288 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arimo' (Arimo-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-09-05 19:52:58,288 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,288 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2022-09-05 19:52:58,289 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-09-05 19:52:58,289 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Book Basic' (GenBkBasI.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,289 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,289 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,289 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,289 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
2022-09-05 19:52:58,289 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
2022-09-05 19:52:58,290 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Basic' (GenBasBI.ttf) italic normal 700 normal>) = 11.335
2022-09-05 19:52:58,290 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,290 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,290 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,290 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arimo' (Arimo-Bold.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,290 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,291 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,291 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,291 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-ExtraLight.ttf) normal normal 200 normal>) = 0.24
2022-09-05 19:52:58,291 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,291 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,291 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Book Basic' (GenBkBasBI.ttf) italic normal 700 normal>) = 11.335
2022-09-05 19:52:58,291 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
2022-09-05 19:52:58,292 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arimo' (Arimo-Italic.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,292 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 19:52:58,292 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2022-09-05 19:52:58,292 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,292 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2022-09-05 19:52:58,292 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,292 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,293 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
2022-09-05 19:52:58,293 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Italic.ttf) italic normal 400 condensed>) = 11.25
2022-09-05 19:52:58,293 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,293 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,293 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 19:52:58,293 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,293 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2022-09-05 19:52:58,294 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,294 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,294 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,294 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-09-05 19:52:58,294 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,294 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,295 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 19:52:58,295 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Basic' (GenBasR.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,295 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 19:52:58,295 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
2022-09-05 19:52:58,295 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,295 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,295 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,296 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,296 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2022-09-05 19:52:58,296 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,296 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,296 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,296 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,296 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,297 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
2022-09-05 19:52:58,297 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-09-05 19:52:58,297 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,297 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,297 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Basic' (GenBasR.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,297 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,298 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Book Basic' (GenBkBasR.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,298 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,298 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,298 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,298 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arimo' (Arimo-Bold.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,298 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,298 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed.ttf) normal normal 400 condensed>) = 0.25
2022-09-05 19:52:58,299 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2022-09-05 19:52:58,299 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,299 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2022-09-05 19:52:58,299 [7228] DEBUG    matplotlib.font_manager:1366: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=16.0 to DejaVu Sans ('C:\\Users\\sasha\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2022-09-05 19:52:58,338 [7228] DEBUG    matplotlib.font_manager:1334: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2022-09-05 19:52:58,338 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,338 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,338 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,338 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,338 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,338 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,338 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,338 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,338 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-09-05 19:52:58,338 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,338 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,339 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,339 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,339 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-09-05 19:52:58,339 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-09-05 19:52:58,339 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,339 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,340 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,340 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,340 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,340 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,340 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,340 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-09-05 19:52:58,340 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,341 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,341 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,341 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,341 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,341 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,341 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-09-05 19:52:58,342 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-09-05 19:52:58,342 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,342 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,342 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,342 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-09-05 19:52:58,342 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-09-05 19:52:58,342 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,344 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-09-05 19:52:58,344 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,344 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,344 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
2022-09-05 19:52:58,344 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2022-09-05 19:52:58,344 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 19:52:58,344 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,344 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,344 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
2022-09-05 19:52:58,344 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
2022-09-05 19:52:58,344 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,344 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2022-09-05 19:52:58,344 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,345 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,345 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,345 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,345 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Book Basic' (GenBkBasB.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,345 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2022-09-05 19:52:58,345 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,346 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
2022-09-05 19:52:58,346 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,346 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,346 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,346 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,346 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,346 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,347 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 19:52:58,347 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Bold.ttf) normal normal 700 condensed>) = 10.535
2022-09-05 19:52:58,347 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,347 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
2022-09-05 19:52:58,347 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,347 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 19:52:58,347 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,348 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,348 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
2022-09-05 19:52:58,348 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,348 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,348 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,348 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,348 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,349 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,349 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,349 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-09-05 19:52:58,349 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,349 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Book Basic' (GenBkBasR.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,350 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,350 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,350 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,350 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,350 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,350 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,350 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,351 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,351 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,351 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,351 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,351 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
2022-09-05 19:52:58,351 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Basic' (GenBasI.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,351 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,352 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,352 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,352 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,352 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,352 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Basic' (GenBasI.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,352 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,352 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,353 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Bold.ttf) normal normal 700 condensed>) = 10.535
2022-09-05 19:52:58,353 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,353 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-BoldOblique.ttf) oblique normal 700 condensed>) = 1.535
2022-09-05 19:52:58,353 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,353 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,353 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,354 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,354 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-09-05 19:52:58,354 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,354 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
2022-09-05 19:52:58,354 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,354 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
2022-09-05 19:52:58,354 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,355 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-ExtraLight.ttf) normal normal 200 normal>) = 0.24
2022-09-05 19:52:58,355 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Basic' (GenBasBI.ttf) italic normal 700 normal>) = 11.335
2022-09-05 19:52:58,355 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Basic' (GenBasB.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,355 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,355 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,355 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
2022-09-05 19:52:58,355 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,356 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,356 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2022-09-05 19:52:58,356 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,356 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,356 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,356 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2022-09-05 19:52:58,356 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 19:52:58,357 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,357 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
2022-09-05 19:52:58,357 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
2022-09-05 19:52:58,357 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,357 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-09-05 19:52:58,357 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,358 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,358 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,358 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,358 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
2022-09-05 19:52:58,358 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,358 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2022-09-05 19:52:58,358 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,359 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Oblique.ttf) oblique normal 400 condensed>) = 1.25
2022-09-05 19:52:58,359 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,359 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,359 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,359 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,359 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Bold.ttf) normal normal 700 condensed>) = 0.5349999999999999
2022-09-05 19:52:58,359 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arimo' (Arimo-Italic.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,360 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,360 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,360 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
2022-09-05 19:52:58,360 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2022-09-05 19:52:58,360 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,360 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,360 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,361 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,361 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,361 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,361 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,361 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
2022-09-05 19:52:58,361 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,361 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,362 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,362 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2022-09-05 19:52:58,362 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 19:52:58,362 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2022-09-05 19:52:58,362 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,362 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,363 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2022-09-05 19:52:58,363 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arimo' (Arimo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,363 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Bold.ttf) normal normal 700 condensed>) = 0.5349999999999999
2022-09-05 19:52:58,363 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
2022-09-05 19:52:58,363 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeamViewer15' (teamviewer15.otf) normal normal 500 normal>) = 10.145
2022-09-05 19:52:58,363 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,363 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,364 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,364 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arimo' (Arimo-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-09-05 19:52:58,364 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,364 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,364 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
2022-09-05 19:52:58,364 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed.ttf) normal normal 400 condensed>) = 0.25
2022-09-05 19:52:58,365 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 19:52:58,365 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,365 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,365 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,365 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
2022-09-05 19:52:58,365 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-09-05 19:52:58,365 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2022-09-05 19:52:58,366 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,366 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,366 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,366 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,366 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Book Basic' (GenBkBasBI.ttf) italic normal 700 normal>) = 11.335
2022-09-05 19:52:58,366 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,367 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 19:52:58,367 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,367 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-09-05 19:52:58,367 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,367 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
2022-09-05 19:52:58,368 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,368 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,368 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,368 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,368 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,369 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-09-05 19:52:58,369 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,369 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,370 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2022-09-05 19:52:58,370 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
2022-09-05 19:52:58,370 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,370 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2022-09-05 19:52:58,370 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
2022-09-05 19:52:58,371 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
2022-09-05 19:52:58,371 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,371 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,371 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,372 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 19:52:58,372 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,372 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,372 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
2022-09-05 19:52:58,373 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 19:52:58,373 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Oblique.ttf) oblique normal 400 condensed>) = 1.25
2022-09-05 19:52:58,373 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,375 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2022-09-05 19:52:58,375 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 19:52:58,375 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,375 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,375 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
2022-09-05 19:52:58,375 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2022-09-05 19:52:58,375 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,376 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-09-05 19:52:58,376 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,376 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
2022-09-05 19:52:58,377 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,377 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,377 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Book Basic' (GenBkBasI.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,377 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeamViewer15' (teamviewer15.otf) normal normal 500 normal>) = 10.145
2022-09-05 19:52:58,378 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2022-09-05 19:52:58,378 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed.ttf) normal normal 400 condensed>) = 10.25
2022-09-05 19:52:58,378 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
2022-09-05 19:52:58,380 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2022-09-05 19:52:58,380 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,380 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,380 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,380 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,380 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2022-09-05 19:52:58,380 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,380 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,380 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,381 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,381 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,381 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,381 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,382 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,382 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Basic' (GenBasB.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,382 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
2022-09-05 19:52:58,382 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-BoldOblique.ttf) oblique normal 700 condensed>) = 1.535
2022-09-05 19:52:58,382 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,382 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,383 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-09-05 19:52:58,383 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 19:52:58,383 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2022-09-05 19:52:58,383 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,384 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,384 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Italic.ttf) italic normal 400 condensed>) = 11.25
2022-09-05 19:52:58,384 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,384 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,385 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,385 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,385 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2022-09-05 19:52:58,385 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,385 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,386 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2022-09-05 19:52:58,386 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,386 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,386 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,386 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,387 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arimo' (Arimo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,387 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,387 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,387 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,387 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,388 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
2022-09-05 19:52:58,388 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,388 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,388 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 19:52:58,388 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,389 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 19:52:58,389 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,389 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,389 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,389 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,390 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,390 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
2022-09-05 19:52:58,390 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-09-05 19:52:58,390 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,390 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,391 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,391 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Book Basic' (GenBkBasB.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,391 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-09-05 19:52:58,391 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2022-09-05 19:52:58,391 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,392 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,392 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,392 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,392 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-09-05 19:52:58,392 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,393 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,393 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,393 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed.ttf) normal normal 400 condensed>) = 10.25
2022-09-05 19:52:58,393 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,393 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2022-09-05 19:52:58,393 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2022-09-05 19:52:58,394 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 19:52:58,394 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2022-09-05 19:52:58,394 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2022-09-05 19:52:58,394 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,394 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2022-09-05 19:52:58,394 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,395 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,395 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arimo' (Arimo-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-09-05 19:52:58,395 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,395 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2022-09-05 19:52:58,395 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-09-05 19:52:58,395 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Book Basic' (GenBkBasI.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,395 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,396 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,396 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,396 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
2022-09-05 19:52:58,396 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
2022-09-05 19:52:58,396 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Basic' (GenBasBI.ttf) italic normal 700 normal>) = 11.335
2022-09-05 19:52:58,396 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,397 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,397 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,397 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arimo' (Arimo-Bold.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,397 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,397 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,397 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,398 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-ExtraLight.ttf) normal normal 200 normal>) = 0.24
2022-09-05 19:52:58,398 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,398 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,398 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Book Basic' (GenBkBasBI.ttf) italic normal 700 normal>) = 11.335
2022-09-05 19:52:58,398 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
2022-09-05 19:52:58,398 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arimo' (Arimo-Italic.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,398 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 19:52:58,399 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2022-09-05 19:52:58,399 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,399 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2022-09-05 19:52:58,399 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,399 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,399 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
2022-09-05 19:52:58,399 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Italic.ttf) italic normal 400 condensed>) = 11.25
2022-09-05 19:52:58,400 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,400 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,400 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 19:52:58,400 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,400 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2022-09-05 19:52:58,400 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,400 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,401 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,401 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-09-05 19:52:58,401 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,401 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,401 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 19:52:58,401 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Basic' (GenBasR.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,402 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 19:52:58,402 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
2022-09-05 19:52:58,402 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,402 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,402 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,402 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,402 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2022-09-05 19:52:58,403 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,403 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,403 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,403 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,403 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,403 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
2022-09-05 19:52:58,403 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-09-05 19:52:58,404 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,404 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,404 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Basic' (GenBasR.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,404 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,404 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Book Basic' (GenBkBasR.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,404 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2022-09-05 19:52:58,404 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,405 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,405 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arimo' (Arimo-Bold.ttf) normal normal 700 normal>) = 10.335
2022-09-05 19:52:58,405 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,405 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed.ttf) normal normal 400 condensed>) = 0.25
2022-09-05 19:52:58,405 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2022-09-05 19:52:58,405 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2022-09-05 19:52:58,406 [7228] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2022-09-05 19:52:58,406 [7228] DEBUG    matplotlib.font_manager:1366: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\sasha\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2022-09-05 19:57:14,927 [20684] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2022-09-05 19:57:14,928 [20684] DEBUG    root:93: [JupyterRequire] Initializing comms.
2022-09-05 19:57:14,928 [20684] INFO     root:247: [JupyterRequire] Initializing comms.
2022-09-05 19:57:14,930 [20684] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2022-09-05 19:57:14,930 [20684] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2022-09-05 19:57:14,931 [20684] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2022-09-05 19:57:15,829 [20684] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2022-09-05 19:57:15,829 [20684] DEBUG    root:93: [JupyterRequire] Initializing comms.
2022-09-05 19:57:15,830 [20684] INFO     root:247: [JupyterRequire] Initializing comms.
2022-09-05 19:57:15,833 [20684] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2022-09-05 19:57:15,833 [20684] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2022-09-05 19:57:15,834 [20684] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2022-09-05 19:57:29,747 [5660] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2022-09-05 19:57:29,747 [5660] DEBUG    root:93: [JupyterRequire] Initializing comms.
2022-09-05 19:57:29,747 [5660] INFO     root:247: [JupyterRequire] Initializing comms.
2022-09-05 19:57:29,749 [5660] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2022-09-05 19:57:29,749 [5660] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2022-09-05 19:57:29,750 [5660] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2022-09-05 19:57:30,600 [5660] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2022-09-05 19:57:30,600 [5660] DEBUG    root:93: [JupyterRequire] Initializing comms.
2022-09-05 19:57:30,600 [5660] INFO     root:247: [JupyterRequire] Initializing comms.
2022-09-05 19:57:30,602 [5660] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2022-09-05 19:57:30,603 [5660] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2022-09-05 19:57:30,603 [5660] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2022-09-05 19:57:39,821 [5660] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2022-09-05 19:57:39,822 [5660] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2022-09-05 19:57:39,822 [5660] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2022-09-05 19:57:39,823 [5660] DEBUG    parso.python.diff:378: [JupyterRequire] copy old[1:1] new[1:1]
2022-09-05 19:57:39,823 [5660] DEBUG    parso.python.diff:421: [JupyterRequire] parse_part from 2 to 3 (to 2 in part parser)
2022-09-05 19:57:39,823 [5660] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[replace] old[3:3] new[3:3]
2022-09-05 19:57:39,824 [5660] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2022-09-05 19:57:51,516 [23744] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2022-09-05 19:57:51,516 [23744] DEBUG    root:93: [JupyterRequire] Initializing comms.
2022-09-05 19:57:51,516 [23744] INFO     root:247: [JupyterRequire] Initializing comms.
2022-09-05 19:57:51,518 [23744] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2022-09-05 19:57:51,518 [23744] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2022-09-05 19:57:51,518 [23744] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2022-09-05 19:57:52,377 [23744] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2022-09-05 19:57:52,377 [23744] DEBUG    root:93: [JupyterRequire] Initializing comms.
2022-09-05 19:57:52,377 [23744] INFO     root:247: [JupyterRequire] Initializing comms.
2022-09-05 19:57:52,379 [23744] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2022-09-05 19:57:52,380 [23744] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2022-09-05 19:57:52,380 [23744] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2022-09-05 19:58:01,753 [23744] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2022-09-05 19:58:01,754 [23744] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2022-09-05 19:58:01,754 [23744] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2022-09-05 19:58:01,754 [23744] DEBUG    parso.python.diff:378: [JupyterRequire] copy old[1:1] new[1:1]
2022-09-05 19:58:01,755 [23744] DEBUG    parso.python.diff:421: [JupyterRequire] parse_part from 2 to 3 (to 2 in part parser)
2022-09-05 19:58:01,755 [23744] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[replace] old[3:3] new[3:3]
2022-09-05 19:58:01,755 [23744] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2022-09-05 19:58:17,172 [27184] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2022-09-05 19:58:17,172 [27184] DEBUG    root:93: [JupyterRequire] Initializing comms.
2022-09-05 19:58:17,172 [27184] INFO     root:247: [JupyterRequire] Initializing comms.
2022-09-05 19:58:17,174 [27184] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2022-09-05 19:58:17,174 [27184] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2022-09-05 19:58:17,175 [27184] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2022-09-05 19:58:21,712 [2084] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2022-09-05 19:58:21,713 [2084] DEBUG    root:93: [JupyterRequire] Initializing comms.
2022-09-05 19:58:21,713 [2084] INFO     root:247: [JupyterRequire] Initializing comms.
2022-09-05 19:58:21,717 [2084] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2022-09-05 19:58:21,718 [2084] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2022-09-05 19:58:21,718 [2084] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2022-09-05 19:58:23,527 [2084] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2022-09-05 19:58:23,528 [2084] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2022-09-05 19:58:23,528 [2084] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2022-09-05 19:58:23,529 [2084] DEBUG    parso.python.diff:378: [JupyterRequire] copy old[1:1] new[1:1]
2022-09-05 19:58:23,529 [2084] DEBUG    parso.python.diff:421: [JupyterRequire] parse_part from 2 to 3 (to 2 in part parser)
2022-09-05 19:58:23,530 [2084] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[replace] old[3:3] new[3:3]
2022-09-05 19:58:23,530 [2084] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2022-09-05 19:58:28,604 [2084] INFO     numexpr.utils:141: [JupyterRequire] NumExpr defaulting to 8 threads.
2022-09-05 19:58:29,161 [2084] DEBUG    matplotlib:241: [JupyterRequire] (private) matplotlib data path: C:\Users\sasha\anaconda3\lib\site-packages\matplotlib\mpl-data
2022-09-05 19:58:29,162 [2084] DEBUG    matplotlib:241: [JupyterRequire] matplotlib data path: C:\Users\sasha\anaconda3\lib\site-packages\matplotlib\mpl-data
2022-09-05 19:58:29,166 [2084] DEBUG    matplotlib:241: [JupyterRequire] CONFIGDIR=C:\Users\sasha\.matplotlib
2022-09-05 19:58:29,169 [2084] DEBUG    matplotlib:1471: [JupyterRequire] matplotlib version 3.3.2
2022-09-05 19:58:29,169 [2084] DEBUG    matplotlib:1472: [JupyterRequire] interactive is False
2022-09-05 19:58:29,169 [2084] DEBUG    matplotlib:1473: [JupyterRequire] platform is win32
2022-09-05 19:58:29,169 [2084] DEBUG    matplotlib:1474: [JupyterRequire] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_warnings', '_frozen_importlib_external', '_io', 'marshal', 'nt', '_thread', '_weakref', 'winreg', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1251', '_signal', '__main__', 'encodings.latin_1', '_abc', 'abc', 'io', '_stat', 'stat', '_collections_abc', 'genericpath', 'ntpath', 'os.path', 'os', '_sitebuiltins', '_locale', '_bootlocale', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', 'importlib.abc', '_operator', 'operator', 'keyword', '_heapq', 'heapq', 'itertools', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'google', 'mpl_toolkits', 'sphinxcontrib', 'zope', 'site', '_weakrefset', 'weakref', 'pkgutil', 'runpy', 'ipykernel._version', '__future__', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'signal', 'threading', 'msvcrt', '_winapi', 'subprocess', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'atexit', 'copy', 'posixpath', 'fnmatch', 'glob', 'token', 'tokenize', 'linecache', 'traceback', 'collections.abc', '_string', 'string', 'logging', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_opcode', 'opcode', 'dis', 'inspect', 'typing.io', 'typing.re', 'typing', '_ast', 'ast', 'traitlets.utils', 'traitlets.utils.bunch', 'traitlets.utils.descriptions', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'traitlets.utils.sentinel', 'traitlets.traitlets', 'traitlets._version', 'traitlets.utils.decorators', 'traitlets', 'pprint', '_socket', 'math', 'select', 'selectors', 'socket', '_struct', 'struct', '_compat_pickle', '_pickle', 'pickle', '_queue', 'queue', 'logging.handlers', 'socketserver', 'logging.config', 'textwrap', 'traitlets.utils.text', 'locale', 'gettext', 'argparse', 'traitlets.config.loader', 'traitlets.config.configurable', 'traitlets.utils.nested_update', 'traitlets.config.application', 'traitlets.config', 'platform', 'sysconfig', 'urllib', 'urllib.parse', 'pydoc', 'bdb', 'IPython.utils', 'IPython.utils.ipstruct', 'IPython.utils.coloransi', 'pygments', 'IPython.utils.colorable', 'IPython.utils.PyColorize', 'IPython.utils.encoding', 'IPython.utils.py3compat', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'cmd', 'codeop', 'code', 'pdb', 'IPython.core.debugger', 'IPython.core.display_trap', '_bisect', 'bisect', '_sha512', '_random', 'random', '_ctypes', 'ctypes._endian', 'ctypes', 'ctypes.wintypes', 'shlex', 'IPython.utils._process_common', 'IPython.utils._process_win32', 'IPython.utils.process', 'IPython.utils.decorators', 'IPython.utils.path', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.core.ultratb', 'IPython.utils._sysinfo', 'IPython.utils.sysinfo', 'IPython.core.crashhandler', 'tempfile', 'IPython.utils.importstring', 'IPython.paths', 'IPython.core.profiledir', 'IPython.core.application', 'IPython.terminal', '_hashlib', '_blake2', '_sha3', 'hashlib', 'IPython.core.compilerop', 'IPython.core.error', 'pathlib', 'IPython.utils.text', 'IPython.core.magic_arguments', 'getopt', 'binascii', 'mimetypes', 'IPython.core.display', 'IPython.core.page', 'getpass', 'IPython.lib.security', 'IPython.lib', '_datetime', 'datetime', 'IPython.lib.pretty', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers', 'pygments.filter', 'pygments.token', 'pygments.filters', 'pygments.regexopt', 'pygments.lexer', 'pygments.unistring', 'pygments.lexers.python', 'pygments.formatters._mapping', 'pygments.formatters', 'pygments.styles', 'pygments.formatter', 'pygments.formatters.html', 'IPython.core.oinspect', 'IPython.core.inputtransformer2', 'decorator', 'IPython.core.magic', 'pickleshare', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.prefilter', 'IPython.core.alias', 'IPython.core.builtin_trap', 'backcall.backcall', 'backcall', 'IPython.core.events', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.utils.sentinel', 'IPython.core.formatters', '_sqlite3', 'sqlite3.dbapi2', 'sqlite3', 'IPython.core.history', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'html.entities', 'html', 'IPython.lib.display', 'IPython.display', 'IPython.utils.capture', 'IPython.utils.io', 'IPython.core.hooks', 'IPython.utils.strdispatch', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.core.interactiveshell', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_ssl', 'base64', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop.utils', 'prompt_toolkit.eventloop.async_generator', 'wcwidth.table_wide', 'wcwidth.table_zero', 'wcwidth.unicode_versions', 'wcwidth.wcwidth', 'wcwidth', 'prompt_toolkit.utils', 'prompt_toolkit.eventloop.inputhook', 'prompt_toolkit.eventloop', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.clipboard', 'prompt_toolkit.cache', 'prompt_toolkit.enums', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.app', 'prompt_toolkit.filters.cli', 'prompt_toolkit.filters.utils', 'prompt_toolkit.filters', 'prompt_toolkit.document', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.data_structures', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.pygments', 'colorsys', 'prompt_toolkit.styles.style_transformation', 'prompt_toolkit.styles', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.base', 'prompt_toolkit.patch_stdout', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output', 'array', 'prompt_toolkit.output.vt100', 'prompt_toolkit.mouse_events', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.formatted_text.ansi', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', 'prompt_toolkit.formatted_text.html', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.formatted_text', 'prompt_toolkit.completion.base', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.completion.nested', 'prompt_toolkit.completion', 'prompt_toolkit.history', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.search', 'prompt_toolkit.validation', 'prompt_toolkit.buffer', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.lexers', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.controls', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.layout.screen', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.layout', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.renderer', 'prompt_toolkit.application.application', 'prompt_toolkit.application.dummy', 'prompt_toolkit.application', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.widgets', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.shortcuts', 'prompt_toolkit', 'pygments.style', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'parso._compatibility', 'parso.utils', 'parso.tree', 'parso.python', 'parso.python.token', 'parso.python.tokenize', 'parso.pgen2.grammar_parser', 'parso.pgen2.generator', 'parso.pgen2', 'parso.parser', 'difflib', 'parso.python.prefix', 'parso.python.tree', 'parso.python.parser', 'parso.python.diff', 'gc', 'parso.cache', 'parso.normalizer', 'parso.python.errors', 'parso.python.pep8', 'parso.file_io', 'parso.grammar', 'parso', 'jedi.file_io', 'jedi._compatibility', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.inference.cache', 'jedi.inference.helpers', 'jedi.inference.utils', 'jedi.inference.base_value', 'jedi.common', 'jedi.inference.sys_path', 'jedi.inference.recursion', 'jedi.inference.flow_analysis', 'jedi.inference.lazy_value', 'jedi.inference.docstrings', 'jedi.plugins', 'jedi.inference.names', 'jedi.inference.filters', 'jedi.inference.compiled.getattr_static', 'jedi.inference.compiled.access', 'jedi.inference.signature', 'jedi.inference.context', 'jedi.inference.compiled.value', 'jedi.inference.compiled', 'jedi.inference.analysis', 'jedi.inference.gradual', 'jedi.inference.value.module', 'jedi.inference.value.dynamic_arrays', 'jedi.inference.value.iterable', 'jedi.inference.arguments', 'jedi.inference.parser_cache', 'jedi.inference.gradual.generics', 'jedi.inference.value.function', 'jedi.inference.value.klass', 'jedi.inference.value.instance', 'jedi.inference.value', 'jedi.inference.gradual.base', 'jedi.inference.gradual.type_var', 'jedi.inference.gradual.typing', 'jedi.inference.gradual.stub_value', 'jedi.inference.gradual.typeshed', 'jedi.inference.imports', 'jedi.inference.param', 'jedi.inference.gradual.annotation', 'jedi.inference.value.decorator', 'jedi.inference.syntax_tree', 'jedi.inference', 'jedi.inference.gradual.conversion', 'jedi.inference.compiled.mixed', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.keywords', 'jedi.api.completion_cache', 'jedi.api.helpers', 'jedi.api.classes', 'jedi.api.interpreter', 'jedi.api.strings', 'jedi.api.file_name', 'jedi.api.completion', 'filecmp', 'jedi.inference.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.inference.compiled.subprocess', 'jedi.api.environment', 'jedi.inference.references', 'jedi.api.project', 'jedi.api.errors', 'jedi.api.refactoring', 'jedi.api.refactoring.extract', 'jedi.inference.gradual.utils', 'jedi.api', 'jedi.plugins.stdlib', 'jedi.plugins.flask', 'jedi.plugins.pytest', 'jedi.plugins.django', 'jedi.plugins.registry', 'jedi', 'IPython.core.completer', 'IPython.terminal.ptutils', 'IPython.lib.clipboard', 'IPython.terminal.shortcuts', 'IPython.terminal.debugger', 'IPython.terminal.magics', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.interactiveshell', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'email', 'http', 'email.errors', 'email.quoprimime', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', 'http.client', 'urllib.response', 'urllib.error', 'nturl2path', 'urllib.request', 'IPython.core.magics.code', 'IPython.core.magics.config', 'IPython.core.magics.display', 'timeit', '_lsprof', 'profile', 'cProfile', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.execution', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.pylabtools', 'IPython.core.magics.pylab', 'IPython.lib.backgroundjobs', 'IPython.core.magics.script', 'IPython.core.magics', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.terminal.ipapp', 'IPython.terminal.embed', 'IPython.utils.frame', 'IPython', 'ipython_genutils._version', 'ipython_genutils', 'ipython_genutils.encoding', 'ipython_genutils.py3compat', 'ipython_genutils.path', 'jupyter_client._version', 'zmq.backend.select', 'cython_runtime', 'zmq.backend.cython.constants', '_cython_0_29_21', 'zmq.backend.cython.error', 'zmq.error', 'zmq.backend.cython.message', 'zmq.backend.cython.context', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.backend.cython', 'zmq.backend', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.constants', 'zmq.sugar.attrsettr', 'zmq.sugar.poll', 'zmq.utils.strtypes', 'zmq.utils.jsonapi', 'zmq.sugar.socket', 'zmq.sugar.context', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'zmq.sugar', 'zmq', 'jupyter_client.localinterfaces', 'jupyter_core.version', 'jupyter_core', 'distutils', 'distutils.errors', 'distutils.dep_util', 'distutils.debug', 'distutils.log', 'distutils.spawn', 'distutils.util', 'jupyter_core.paths', 'jupyter_client.connect', 'traitlets.log', 'jupyter_client.launcher', 'jupyter_client.channelsabc', 'jupyter_client.channels', 'jupyter_client.clientabc', 'jupyter_client.client', 'ipython_genutils.importstring', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.manager', 'jupyter_client.blocking.channels', 'jupyter_client.blocking.client', 'jupyter_client.blocking', 'zmq._future', 'zmq.asyncio', 'jupyter_client.asynchronous.channels', 'jupyter_client.asynchronous.client', 'jupyter_client.asynchronous', 'uuid', 'jupyter_client.multikernelmanager', 'jupyter_client', 'ipykernel.connect', 'ipykernel', 'tornado', 'numbers', 'tornado.speedups', 'tornado.util', 'tornado.escape', 'colorama.ansi', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'tornado.log', 'tornado.concurrent', 'tornado.ioloop', 'tornado.platform', 'tornado.gen', 'tornado.platform.asyncio', 'zmq.eventloop.ioloop', 'zmq.eventloop', 'zmq.eventloop.zmqstream', 'imp', 'hmac', 'dateutil._version', 'dateutil', 'six', '_decimal', 'decimal', 'dateutil._common', 'dateutil.relativedelta', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', '_strptime', 'jupyter_client.jsonutil', 'jupyter_client.adapter', 'jupyter_client.session', 'ipykernel.iostream', 'ipykernel.heartbeat', 'IPython.utils.tokenutil', 'tornado.locks', 'tornado.queues', 'ipykernel.jsonutil', 'ipykernel.kernelbase', 'ipykernel.comm.comm', 'ipykernel.comm.manager', 'ipykernel.comm', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.zmqshell', 'distutils.version', 'ipykernel.eventloops', 'ipykernel.ipkernel', 'ipykernel.parentpoller', 'ipykernel.kernelapp', 'win32api', 'win32security', 'ntsecuritycon', 'faulthandler', 'ipykernel.codeutil', 'ipykernel.pickleutil', 'ipykernel.serialize', 'ipykernel.datapub', 'IPython.core.completerlib', 'storemagic', 'configparser', 'isort.stdlibs.py27', 'isort.stdlibs.py2', 'isort.stdlibs.py35', 'isort.stdlibs.py36', 'isort.stdlibs.py37', 'isort.stdlibs.py38', 'isort.stdlibs.py39', 'isort.stdlibs.py3', 'isort.stdlibs.all', 'isort.stdlibs', 'dataclasses', 'isort._future', 'isort._vendored', 'isort._vendored.toml.tz', 'isort._vendored.toml.decoder', 'isort._vendored.toml.encoder', 'isort._vendored.toml', 'isort.profiles', 'isort.exceptions', 'isort.sections', 'isort.comments', 'isort.wrap_modes', 'isort.settings', 'isort._version', 'isort.literal', 'isort.format', 'isort.utils', 'isort.place', 'isort.deprecated', 'isort.deprecated.finders', 'isort.parse', 'isort.sorting', 'isort.wrap', 'isort.output', 'isort.core', 'isort.io', 'isort.api', 'isort', 'toml.tz', 'toml.decoder', 'toml.encoder', 'toml', 'optparse', 'pycodestyle', 'autopep8', 'pythonjsonlogger', 'pythonjsonlogger.jsonlogger', 'daiquiri.formatter', 'daiquiri.handlers', 'daiquiri.output', 'daiquiri', 'jupyter_require.__about__', 'csscompressor', 'jupyter_require.core', 'jupyter_require.notebook', 'jupyter_require', 'jupyter_nbutils.__about__', 'jupyter_nbutils.config', 'jupyter_nbutils.utils', 'jupyter_nbutils', 'jupyter_require.magic', 'numpy._globals', 'numpy.__config__', 'numpy._distributor_init', 'numpy._version', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core._machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', '_cython_0_29_24', 'numpy.random._common', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pytz', 'mmap', 'pandas._typing', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.nattype', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.tzconversion', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.timestamps', 'dateutil.easter', 'pandas._libs.properties', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.tslibs', 'pandas._libs.ops_dispatch', 'pandas._libs.missing', 'pandas._libs.hashtable', 'pandas._libs.algos', 'pandas._libs.interval', 'pandas._libs', 'pandas.util._decorators', 'pandas.core', 'pandas.core.util', 'pandas._libs.tslib', 'pandas._libs.lib', 'pandas._libs.hashing', 'pandas.core.dtypes', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.common', 'pandas.core.util.hashing', 'pandas.util', 'pandas.util.version', 'pandas.compat.numpy', 'pyarrow._generated_version', 'cloudpickle.compat', 'typing_extensions', 'cloudpickle.cloudpickle', 'cloudpickle.cloudpickle_fast', 'cloudpickle', 'pyarrow.util', 'pyarrow.lib', 'pyarrow.filesystem', 'pyarrow.hdfs', 'pyarrow.ipc', 'pyarrow.serialization', 'pyarrow.types', 'pyarrow', 'pandas.compat.pyarrow', 'pandas.compat', 'pandas.core.config_init', 'pandas.core.dtypes.missing', 'pandas.util._exceptions', 'pandas.util._validators', 'pandas.core.dtypes.cast', 'pandas.core.array_algos', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.array_algos.take', 'pandas.core.indexers', 'pandas.core.algorithms', 'pandas.compat.numpy.function', 'pandas.compat._optional', 'pandas.core.missing', 'pandas.core.roperator', 'pandas._libs.ops', 'pandas.core.computation', 'numexpr.__config__', 'numexpr.interpreter', 'numexpr.expressions', 'numexpr.utils', 'numexpr.necompiler', 'numexpr.version', 'numexpr', 'pandas.core.computation.check', 'pandas.core.computation.expressions', 'pandas.core.ops.missing', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.array_ops', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.ops', 'pandas.core.sorting', 'pandas.core.arrays.base', 'bottleneck.reduce', 'bottleneck.nonreduce', 'bottleneck.nonreduce_axis', 'bottleneck.move', 'bottleneck.slow.reduce', 'bottleneck.slow.nonreduce', 'bottleneck.slow.nonreduce_axis', 'bottleneck.slow.move', 'bottleneck.slow', 'bottleneck.benchmark', 'bottleneck.benchmark.autotimeit', 'bottleneck.benchmark.bench', 'bottleneck.benchmark.bench_detailed', 'bottleneck.tests', 'bottleneck.tests.util', 'bottleneck._pytesttester', 'bottleneck._version', 'bottleneck', 'pandas.core.nanops', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arraylike', 'pandas.core.arrays.masked', 'pandas.core.arrays.boolean', '_csv', 'csv', 'pandas._libs.arrays', 'pandas.core.accessor', 'pandas.core.array_algos.transforms', 'pandas.core.arrays._mixins', 'pandas.core.base', 'pandas.core.strings.accessor', 'pandas.core.strings.base', 'pandas.core.strings', 'pandas.core.strings.object_array', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.categorical', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays.datetimelike', 'pandas.core.arrays._ranges', 'pandas.core.arrays.numeric', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.integer', 'pandas.tseries.offsets', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.floating', 'pandas.core.indexes', 'pandas._libs.index', 'pandas._libs.join', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.arrays.sparse.array', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse', 'pandas.core.dtypes.concat', 'pandas.core.array_algos.putmask', 'pandas.core.indexes.frozen', 'pandas.core.indexes.base', 'pandas.core.arrays.interval', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pyarrow._compute', 'pyarrow.compute', 'pandas.core.arrays.string_arrow', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays', 'pandas.core.flags', 'pandas._libs.reduction', 'pandas.core.indexes.extension', 'pandas.core.indexes.category', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.times', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.interval', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexes.api', 'pandas.core.aggregation', 'pandas.core.apply', 'pandas._libs.indexing', 'pandas.core.indexing', 'pandas.core.reshape', 'pandas._libs.internals', 'pandas._libs.writers', 'pandas.core.array_algos.quantile', 'pandas.core.array_algos.replace', 'pandas.core.internals.blocks', 'pandas.core.internals.api', 'pandas.core.internals.base', 'pandas.core.internals.array_manager', 'pandas.core.internals.ops', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.core.internals', 'pandas.core.reshape.concat', 'gzip', 'zipfile', 'pandas.io.common', 'pandas.io.formats.format', 'pandas.core.describe', 'pandas.core.internals.construction', 'pandas.core.shared_docs', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.util.numba_', 'pandas.core.window.common', 'pandas.core.window.doc', 'pandas._libs.window.indexers', 'pandas.core.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.online', 'pandas.core.window.rolling', 'pandas.core.window.ewm', 'pandas.core.window.expanding', 'pandas.core.window', 'pandas.core.generic', 'pandas.core.reshape.util', 'pandas.core.reshape.melt', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.arrays', 'pandas.core.tools.datetimes', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.plotting', 'pandas.core.series', 'pandas.io.formats.info', 'pandas.core.frame', 'pandas.core.groupby.base', 'pandas._libs.groupby', 'pandas.core.groupby.numba_', 'pandas.core.groupby.categorical', 'pandas.core.groupby.grouper', 'pandas.core.groupby.ops', 'pandas.core.groupby.groupby', 'pandas.core.groupby.generic', 'pandas.core.groupby', 'pandas.core.api', 'pandas.tseries.api', 'pandas.core.computation.common', 'pandas.core.computation.align', 'pandas.compat.chainmap', 'pandas.core.computation.scope', 'pandas.core.computation.ops', 'pandas.core.computation.parsing', 'pandas.core.computation.expr', 'pandas.core.computation.engines', 'pandas.core.computation.eval', 'pandas.core.computation.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.core.reshape.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.core.dtypes.api', 'pandas.api.types', 'pandas.api', 'pandas.util._print_versions', 'pandas.io.clipboards', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.date_converters', 'pandas.io.parsers.base_parser', 'pandas.io.parsers.c_parser_wrapper', 'pandas.io.parsers.python_parser', 'pandas.io.parsers.readers', 'pandas.io.parsers', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlrd', 'pandas.io.excel._base', 'pandas._libs.json', 'pandas.io.formats._color_data', 'pandas.io.formats.css', 'pandas.io.formats.excel', 'pandas.io.excel._odswriter', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.excel', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.json._json', 'pandas.io.json', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.compat.pickle_compat', 'pandas.io.pickle', 'pandas.core.computation.pytables', 'pandas.io.pytables', 'pandas.io.sas.sasreader', 'pandas.io.sas', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.io.xml', 'pandas.io.api', 'pandas.util._tester', 'pandas._testing._random', 'pandas._testing.contexts', 'pandas._testing._io', 'pandas._testing._warnings', 'cmath', 'pandas._libs.testing', 'pandas._testing.asserters', 'pandas._testing.compat', 'pandas._testing', 'pandas.testing', 'pandas._version', 'pandas', 'matplotlib', 'matplotlib.cbook.deprecation', 'matplotlib.cbook', 'matplotlib._animation_data', 'matplotlib.animation', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib.docstring', 'matplotlib._color_data', 'matplotlib.colors', 'cycler', 'matplotlib.rcsetup', 'matplotlib._version', 'matplotlib.ft2font', 'kiwisolver']
2022-09-05 19:58:29,227 [2084] DEBUG    matplotlib:241: [JupyterRequire] CACHEDIR=C:\Users\sasha\.matplotlib
2022-09-05 19:58:29,231 [2084] DEBUG    matplotlib.font_manager:1436: [JupyterRequire] Using fontManager instance from C:\Users\sasha\.matplotlib\fontlist-v330.json
2022-09-05 19:58:29,506 [2084] DEBUG    matplotlib.pyplot:289: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2022-09-05 19:58:29,510 [2084] DEBUG    matplotlib.pyplot:289: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2022-09-05 19:58:43,879 [27184] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2022-09-05 19:58:43,879 [27184] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2022-09-05 19:58:43,879 [27184] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2022-09-05 19:58:43,880 [27184] DEBUG    parso.python.diff:378: [JupyterRequire] copy old[1:1] new[1:1]
2022-09-05 19:58:43,880 [27184] DEBUG    parso.python.diff:421: [JupyterRequire] parse_part from 2 to 3 (to 2 in part parser)
2022-09-05 19:58:43,881 [27184] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[replace] old[3:3] new[3:3]
2022-09-05 19:58:43,881 [27184] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2022-09-05 19:58:53,089 [23744] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2022-09-05 19:58:53,090 [23744] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 3
2022-09-05 19:58:53,090 [23744] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2022-09-05 19:58:53,090 [23744] DEBUG    parso.python.diff:378: [JupyterRequire] copy old[1:1] new[1:1]
2022-09-05 19:58:53,091 [23744] DEBUG    parso.python.diff:421: [JupyterRequire] parse_part from 2 to 3 (to 2 in part parser)
2022-09-05 19:58:53,091 [23744] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[replace] old[3:3] new[3:3]
2022-09-05 19:58:53,092 [23744] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2022-09-05 20:04:20,172 [20684] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2022-09-05 20:04:20,173 [20684] DEBUG    root:93: [JupyterRequire] Initializing comms.
2022-09-05 20:04:20,173 [20684] INFO     root:247: [JupyterRequire] Initializing comms.
2022-09-05 20:04:20,202 [20684] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2022-09-05 20:04:20,203 [20684] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2022-09-05 20:04:20,204 [20684] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2022-09-05 20:04:21,471 [20684] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2022-09-05 20:04:21,471 [20684] DEBUG    root:93: [JupyterRequire] Initializing comms.
2022-09-05 20:04:21,471 [20684] INFO     root:247: [JupyterRequire] Initializing comms.
2022-09-05 20:04:21,473 [20684] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2022-09-05 20:04:21,474 [20684] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2022-09-05 20:04:21,474 [20684] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2022-09-05 20:11:15,742 [7228] DEBUG    matplotlib.pyplot:289: [JupyterRequire] Loaded backend nbAgg version unknown.
2022-09-05 20:12:51,210 [7228] DEBUG    matplotlib.pyplot:289: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2022-09-05 20:17:49,779 [20684] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2022-09-05 20:17:49,780 [20684] DEBUG    root:93: [JupyterRequire] Initializing comms.
2022-09-05 20:17:49,780 [20684] INFO     root:247: [JupyterRequire] Initializing comms.
2022-09-05 20:17:49,800 [20684] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2022-09-05 20:17:49,802 [20684] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2022-09-05 20:17:49,802 [20684] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2022-09-05 20:22:56,262 [20684] WARNING  py.warnings:109: [JupyterRequire] C:\Users\sasha\anaconda3\lib\site-packages\numpy\_distributor_init.py:30: UserWarning: loaded more than 1 DLL from .libs:
C:\Users\sasha\anaconda3\lib\site-packages\numpy\.libs\libopenblas.EL2C6PLE4ZYW3ECEVIV3OXXGRN2NRFM2.gfortran-win_amd64.dll
C:\Users\sasha\anaconda3\lib\site-packages\numpy\.libs\libopenblas.QVLO2T66WEPI7JZ63PS3HMOHFEY472BC.gfortran-win_amd64.dll
  warnings.warn("loaded more than 1 DLL from .libs:"

2022-09-05 20:22:57,530 [20684] INFO     numexpr.utils:141: [JupyterRequire] NumExpr defaulting to 8 threads.
2022-09-05 20:22:59,275 [20684] WARNING  py.warnings:109: [JupyterRequire] <ipython-input-3-f36358934603>:9: TqdmExperimentalWarning: Using `tqdm.autonotebook.tqdm` in notebook mode. Use `tqdm.tqdm` instead to force console mode (e.g. in jupyter console)
  from tqdm.autonotebook import tqdm

2022-09-05 20:22:59,392 [20684] DEBUG    matplotlib:241: [JupyterRequire] (private) matplotlib data path: C:\Users\sasha\anaconda3\lib\site-packages\matplotlib\mpl-data
2022-09-05 20:22:59,392 [20684] DEBUG    matplotlib:241: [JupyterRequire] matplotlib data path: C:\Users\sasha\anaconda3\lib\site-packages\matplotlib\mpl-data
2022-09-05 20:22:59,399 [20684] DEBUG    matplotlib:241: [JupyterRequire] CONFIGDIR=C:\Users\sasha\.matplotlib
2022-09-05 20:22:59,404 [20684] DEBUG    matplotlib:1471: [JupyterRequire] matplotlib version 3.3.2
2022-09-05 20:22:59,405 [20684] DEBUG    matplotlib:1472: [JupyterRequire] interactive is False
2022-09-05 20:22:59,405 [20684] DEBUG    matplotlib:1473: [JupyterRequire] platform is win32
2022-09-05 20:22:59,405 [20684] DEBUG    matplotlib:1474: [JupyterRequire] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_warnings', '_frozen_importlib_external', '_io', 'marshal', 'nt', '_thread', '_weakref', 'winreg', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1251', '_signal', '__main__', 'encodings.latin_1', '_abc', 'abc', 'io', '_stat', 'stat', '_collections_abc', 'genericpath', 'ntpath', 'os.path', 'os', '_sitebuiltins', '_locale', '_bootlocale', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', 'importlib.abc', '_operator', 'operator', 'keyword', '_heapq', 'heapq', 'itertools', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'google', 'mpl_toolkits', 'sphinxcontrib', 'zope', 'site', '_weakrefset', 'weakref', 'pkgutil', 'runpy', 'ipykernel._version', '__future__', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'signal', 'threading', 'msvcrt', '_winapi', 'subprocess', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'atexit', 'copy', 'posixpath', 'fnmatch', 'glob', 'token', 'tokenize', 'linecache', 'traceback', 'collections.abc', '_string', 'string', 'logging', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_opcode', 'opcode', 'dis', 'inspect', 'typing.io', 'typing.re', 'typing', '_ast', 'ast', 'traitlets.utils', 'traitlets.utils.bunch', 'traitlets.utils.descriptions', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'traitlets.utils.sentinel', 'traitlets.traitlets', 'traitlets._version', 'traitlets.utils.decorators', 'traitlets', 'pprint', '_socket', 'math', 'select', 'selectors', 'socket', '_struct', 'struct', '_compat_pickle', '_pickle', 'pickle', '_queue', 'queue', 'logging.handlers', 'socketserver', 'logging.config', 'textwrap', 'traitlets.utils.text', 'locale', 'gettext', 'argparse', 'traitlets.config.loader', 'traitlets.config.configurable', 'traitlets.utils.nested_update', 'traitlets.config.application', 'traitlets.config', 'platform', 'sysconfig', 'urllib', 'urllib.parse', 'pydoc', 'bdb', 'IPython.utils', 'IPython.utils.ipstruct', 'IPython.utils.coloransi', 'pygments', 'IPython.utils.colorable', 'IPython.utils.PyColorize', 'IPython.utils.encoding', 'IPython.utils.py3compat', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'cmd', 'codeop', 'code', 'pdb', 'IPython.core.debugger', 'IPython.core.display_trap', '_bisect', 'bisect', '_sha512', '_random', 'random', '_ctypes', 'ctypes._endian', 'ctypes', 'ctypes.wintypes', 'shlex', 'IPython.utils._process_common', 'IPython.utils._process_win32', 'IPython.utils.process', 'IPython.utils.decorators', 'IPython.utils.path', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.core.ultratb', 'IPython.utils._sysinfo', 'IPython.utils.sysinfo', 'IPython.core.crashhandler', 'tempfile', 'IPython.utils.importstring', 'IPython.paths', 'IPython.core.profiledir', 'IPython.core.application', 'IPython.terminal', '_hashlib', '_blake2', '_sha3', 'hashlib', 'IPython.core.compilerop', 'IPython.core.error', 'pathlib', 'IPython.utils.text', 'IPython.core.magic_arguments', 'getopt', 'binascii', 'mimetypes', 'IPython.core.display', 'IPython.core.page', 'getpass', 'IPython.lib.security', 'IPython.lib', '_datetime', 'datetime', 'IPython.lib.pretty', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers', 'pygments.filter', 'pygments.token', 'pygments.filters', 'pygments.regexopt', 'pygments.lexer', 'pygments.unistring', 'pygments.lexers.python', 'pygments.formatters._mapping', 'pygments.formatters', 'pygments.styles', 'pygments.formatter', 'pygments.formatters.html', 'IPython.core.oinspect', 'IPython.core.inputtransformer2', 'decorator', 'IPython.core.magic', 'pickleshare', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.prefilter', 'IPython.core.alias', 'IPython.core.builtin_trap', 'backcall.backcall', 'backcall', 'IPython.core.events', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.utils.sentinel', 'IPython.core.formatters', '_sqlite3', 'sqlite3.dbapi2', 'sqlite3', 'IPython.core.history', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'html.entities', 'html', 'IPython.lib.display', 'IPython.display', 'IPython.utils.capture', 'IPython.utils.io', 'IPython.core.hooks', 'IPython.utils.strdispatch', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.core.interactiveshell', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_ssl', 'base64', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop.utils', 'prompt_toolkit.eventloop.async_generator', 'wcwidth.table_wide', 'wcwidth.table_zero', 'wcwidth.unicode_versions', 'wcwidth.wcwidth', 'wcwidth', 'prompt_toolkit.utils', 'prompt_toolkit.eventloop.inputhook', 'prompt_toolkit.eventloop', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.clipboard', 'prompt_toolkit.cache', 'prompt_toolkit.enums', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.app', 'prompt_toolkit.filters.cli', 'prompt_toolkit.filters.utils', 'prompt_toolkit.filters', 'prompt_toolkit.document', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.data_structures', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.pygments', 'colorsys', 'prompt_toolkit.styles.style_transformation', 'prompt_toolkit.styles', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.base', 'prompt_toolkit.patch_stdout', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output', 'array', 'prompt_toolkit.output.vt100', 'prompt_toolkit.mouse_events', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.formatted_text.ansi', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', 'prompt_toolkit.formatted_text.html', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.formatted_text', 'prompt_toolkit.completion.base', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.completion.nested', 'prompt_toolkit.completion', 'prompt_toolkit.history', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.search', 'prompt_toolkit.validation', 'prompt_toolkit.buffer', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.lexers', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.controls', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.layout.screen', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.layout', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.renderer', 'prompt_toolkit.application.application', 'prompt_toolkit.application.dummy', 'prompt_toolkit.application', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.widgets', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.shortcuts', 'prompt_toolkit', 'pygments.style', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'parso._compatibility', 'parso.utils', 'parso.tree', 'parso.python', 'parso.python.token', 'parso.python.tokenize', 'parso.pgen2.grammar_parser', 'parso.pgen2.generator', 'parso.pgen2', 'parso.parser', 'difflib', 'parso.python.prefix', 'parso.python.tree', 'parso.python.parser', 'parso.python.diff', 'gc', 'parso.cache', 'parso.normalizer', 'parso.python.errors', 'parso.python.pep8', 'parso.file_io', 'parso.grammar', 'parso', 'jedi.file_io', 'jedi._compatibility', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.inference.cache', 'jedi.inference.helpers', 'jedi.inference.utils', 'jedi.inference.base_value', 'jedi.common', 'jedi.inference.sys_path', 'jedi.inference.recursion', 'jedi.inference.flow_analysis', 'jedi.inference.lazy_value', 'jedi.inference.docstrings', 'jedi.plugins', 'jedi.inference.names', 'jedi.inference.filters', 'jedi.inference.compiled.getattr_static', 'jedi.inference.compiled.access', 'jedi.inference.signature', 'jedi.inference.context', 'jedi.inference.compiled.value', 'jedi.inference.compiled', 'jedi.inference.analysis', 'jedi.inference.gradual', 'jedi.inference.value.module', 'jedi.inference.value.dynamic_arrays', 'jedi.inference.value.iterable', 'jedi.inference.arguments', 'jedi.inference.parser_cache', 'jedi.inference.gradual.generics', 'jedi.inference.value.function', 'jedi.inference.value.klass', 'jedi.inference.value.instance', 'jedi.inference.value', 'jedi.inference.gradual.base', 'jedi.inference.gradual.type_var', 'jedi.inference.gradual.typing', 'jedi.inference.gradual.stub_value', 'jedi.inference.gradual.typeshed', 'jedi.inference.imports', 'jedi.inference.param', 'jedi.inference.gradual.annotation', 'jedi.inference.value.decorator', 'jedi.inference.syntax_tree', 'jedi.inference', 'jedi.inference.gradual.conversion', 'jedi.inference.compiled.mixed', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.keywords', 'jedi.api.completion_cache', 'jedi.api.helpers', 'jedi.api.classes', 'jedi.api.interpreter', 'jedi.api.strings', 'jedi.api.file_name', 'jedi.api.completion', 'filecmp', 'jedi.inference.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.inference.compiled.subprocess', 'jedi.api.environment', 'jedi.inference.references', 'jedi.api.project', 'jedi.api.errors', 'jedi.api.refactoring', 'jedi.api.refactoring.extract', 'jedi.inference.gradual.utils', 'jedi.api', 'jedi.plugins.stdlib', 'jedi.plugins.flask', 'jedi.plugins.pytest', 'jedi.plugins.django', 'jedi.plugins.registry', 'jedi', 'IPython.core.completer', 'IPython.terminal.ptutils', 'IPython.lib.clipboard', 'IPython.terminal.shortcuts', 'IPython.terminal.debugger', 'IPython.terminal.magics', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.interactiveshell', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'email', 'http', 'email.errors', 'email.quoprimime', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', 'http.client', 'urllib.response', 'urllib.error', 'nturl2path', 'urllib.request', 'IPython.core.magics.code', 'IPython.core.magics.config', 'IPython.core.magics.display', 'timeit', '_lsprof', 'profile', 'cProfile', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.execution', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.pylabtools', 'IPython.core.magics.pylab', 'IPython.lib.backgroundjobs', 'IPython.core.magics.script', 'IPython.core.magics', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.terminal.ipapp', 'IPython.terminal.embed', 'IPython.utils.frame', 'IPython', 'ipython_genutils._version', 'ipython_genutils', 'ipython_genutils.encoding', 'ipython_genutils.py3compat', 'ipython_genutils.path', 'jupyter_client._version', 'zmq.backend.select', 'cython_runtime', 'zmq.backend.cython.constants', '_cython_0_29_21', 'zmq.backend.cython.error', 'zmq.error', 'zmq.backend.cython.message', 'zmq.backend.cython.context', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.backend.cython', 'zmq.backend', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.constants', 'zmq.sugar.attrsettr', 'zmq.sugar.poll', 'zmq.utils.strtypes', 'zmq.utils.jsonapi', 'zmq.sugar.socket', 'zmq.sugar.context', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'zmq.sugar', 'zmq', 'jupyter_client.localinterfaces', 'jupyter_core.version', 'jupyter_core', 'distutils', 'distutils.errors', 'distutils.dep_util', 'distutils.debug', 'distutils.log', 'distutils.spawn', 'distutils.util', 'jupyter_core.paths', 'jupyter_client.connect', 'traitlets.log', 'jupyter_client.launcher', 'jupyter_client.channelsabc', 'jupyter_client.channels', 'jupyter_client.clientabc', 'jupyter_client.client', 'ipython_genutils.importstring', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.manager', 'jupyter_client.blocking.channels', 'jupyter_client.blocking.client', 'jupyter_client.blocking', 'zmq._future', 'zmq.asyncio', 'jupyter_client.asynchronous.channels', 'jupyter_client.asynchronous.client', 'jupyter_client.asynchronous', 'uuid', 'jupyter_client.multikernelmanager', 'jupyter_client', 'ipykernel.connect', 'ipykernel', 'tornado', 'numbers', 'tornado.speedups', 'tornado.util', 'tornado.escape', 'colorama.ansi', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'tornado.log', 'tornado.concurrent', 'tornado.ioloop', 'tornado.platform', 'tornado.gen', 'tornado.platform.asyncio', 'zmq.eventloop.ioloop', 'zmq.eventloop', 'zmq.eventloop.zmqstream', 'imp', 'hmac', 'dateutil._version', 'dateutil', 'six', '_decimal', 'decimal', 'dateutil._common', 'dateutil.relativedelta', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', '_strptime', 'jupyter_client.jsonutil', 'jupyter_client.adapter', 'jupyter_client.session', 'ipykernel.iostream', 'ipykernel.heartbeat', 'IPython.utils.tokenutil', 'tornado.locks', 'tornado.queues', 'ipykernel.jsonutil', 'ipykernel.kernelbase', 'ipykernel.comm.comm', 'ipykernel.comm.manager', 'ipykernel.comm', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.zmqshell', 'distutils.version', 'ipykernel.eventloops', 'ipykernel.ipkernel', 'ipykernel.parentpoller', 'ipykernel.kernelapp', 'win32api', 'win32security', 'ntsecuritycon', 'faulthandler', 'ipykernel.codeutil', 'ipykernel.pickleutil', 'ipykernel.serialize', 'ipykernel.datapub', 'IPython.core.completerlib', 'storemagic', 'configparser', 'isort.stdlibs.py27', 'isort.stdlibs.py2', 'isort.stdlibs.py35', 'isort.stdlibs.py36', 'isort.stdlibs.py37', 'isort.stdlibs.py38', 'isort.stdlibs.py39', 'isort.stdlibs.py3', 'isort.stdlibs.all', 'isort.stdlibs', 'dataclasses', 'isort._future', 'isort._vendored', 'isort._vendored.toml.tz', 'isort._vendored.toml.decoder', 'isort._vendored.toml.encoder', 'isort._vendored.toml', 'isort.profiles', 'isort.exceptions', 'isort.sections', 'isort.comments', 'isort.wrap_modes', 'isort.settings', 'isort._version', 'isort.literal', 'isort.format', 'isort.utils', 'isort.place', 'isort.deprecated', 'isort.deprecated.finders', 'isort.parse', 'isort.sorting', 'isort.wrap', 'isort.output', 'isort.core', 'isort.io', 'isort.api', 'isort', 'toml.tz', 'toml.decoder', 'toml.encoder', 'toml', 'optparse', 'pycodestyle', 'autopep8', 'pythonjsonlogger', 'pythonjsonlogger.jsonlogger', 'daiquiri.formatter', 'daiquiri.handlers', 'daiquiri.output', 'daiquiri', 'jupyter_require.__about__', 'csscompressor', 'jupyter_require.core', 'jupyter_require.notebook', 'jupyter_nbutils.__about__', 'jupyter_nbutils.config', 'jupyter_nbutils.utils', 'jupyter_nbutils', 'jupyter_require.magic', 'jupyter_require', 'numpy._globals', 'numpy.__config__', 'numpy._distributor_init', 'numpy._version', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core._machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', '_cython_0_29_24', 'numpy.random._common', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pytz', 'mmap', 'pandas._typing', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.nattype', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.tzconversion', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.timestamps', 'dateutil.easter', 'pandas._libs.properties', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.tslibs', 'pandas._libs.ops_dispatch', 'pandas._libs.missing', 'pandas._libs.hashtable', 'pandas._libs.algos', 'pandas._libs.interval', 'pandas._libs', 'pandas.util._decorators', 'pandas.core', 'pandas.core.util', 'pandas._libs.tslib', 'pandas._libs.lib', 'pandas._libs.hashing', 'pandas.core.dtypes', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.common', 'pandas.core.util.hashing', 'pandas.util', 'pandas.util.version', 'pandas.compat.numpy', 'pyarrow._generated_version', 'cloudpickle.compat', 'typing_extensions', 'cloudpickle.cloudpickle', 'cloudpickle.cloudpickle_fast', 'cloudpickle', 'pyarrow.util', 'pyarrow.lib', 'pyarrow.filesystem', 'pyarrow.hdfs', 'pyarrow.ipc', 'pyarrow.serialization', 'pyarrow.types', 'pyarrow', 'pandas.compat.pyarrow', 'pandas.compat', 'pandas.core.config_init', 'pandas.core.dtypes.missing', 'pandas.util._exceptions', 'pandas.util._validators', 'pandas.core.dtypes.cast', 'pandas.core.array_algos', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.array_algos.take', 'pandas.core.indexers', 'pandas.core.algorithms', 'pandas.compat.numpy.function', 'pandas.compat._optional', 'pandas.core.missing', 'pandas.core.roperator', 'pandas._libs.ops', 'pandas.core.computation', 'numexpr.__config__', 'numexpr.interpreter', 'numexpr.expressions', 'numexpr.utils', 'numexpr.necompiler', 'numexpr.version', 'numexpr', 'pandas.core.computation.check', 'pandas.core.computation.expressions', 'pandas.core.ops.missing', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.array_ops', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.ops', 'pandas.core.sorting', 'pandas.core.arrays.base', 'bottleneck.reduce', 'bottleneck.nonreduce', 'bottleneck.nonreduce_axis', 'bottleneck.move', 'bottleneck.slow.reduce', 'bottleneck.slow.nonreduce', 'bottleneck.slow.nonreduce_axis', 'bottleneck.slow.move', 'bottleneck.slow', 'bottleneck.benchmark', 'bottleneck.benchmark.autotimeit', 'bottleneck.benchmark.bench', 'bottleneck.benchmark.bench_detailed', 'bottleneck.tests', 'bottleneck.tests.util', 'bottleneck._pytesttester', 'bottleneck._version', 'bottleneck', 'pandas.core.nanops', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arraylike', 'pandas.core.arrays.masked', 'pandas.core.arrays.boolean', '_csv', 'csv', 'pandas._libs.arrays', 'pandas.core.accessor', 'pandas.core.array_algos.transforms', 'pandas.core.arrays._mixins', 'pandas.core.base', 'pandas.core.strings.accessor', 'pandas.core.strings.base', 'pandas.core.strings', 'pandas.core.strings.object_array', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.categorical', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays.datetimelike', 'pandas.core.arrays._ranges', 'pandas.core.arrays.numeric', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.integer', 'pandas.tseries.offsets', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.floating', 'pandas.core.indexes', 'pandas._libs.index', 'pandas._libs.join', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.arrays.sparse.array', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse', 'pandas.core.dtypes.concat', 'pandas.core.array_algos.putmask', 'pandas.core.indexes.frozen', 'pandas.core.indexes.base', 'pandas.core.arrays.interval', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pyarrow._compute', 'pyarrow.compute', 'pandas.core.arrays.string_arrow', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays', 'pandas.core.flags', 'pandas._libs.reduction', 'pandas.core.indexes.extension', 'pandas.core.indexes.category', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.times', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.interval', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexes.api', 'pandas.core.aggregation', 'pandas.core.apply', 'pandas._libs.indexing', 'pandas.core.indexing', 'pandas.core.reshape', 'pandas._libs.internals', 'pandas._libs.writers', 'pandas.core.array_algos.quantile', 'pandas.core.array_algos.replace', 'pandas.core.internals.blocks', 'pandas.core.internals.api', 'pandas.core.internals.base', 'pandas.core.internals.array_manager', 'pandas.core.internals.ops', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.core.internals', 'pandas.core.reshape.concat', 'gzip', 'zipfile', 'pandas.io.common', 'pandas.io.formats.format', 'pandas.core.describe', 'pandas.core.internals.construction', 'pandas.core.shared_docs', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.util.numba_', 'pandas.core.window.common', 'pandas.core.window.doc', 'pandas._libs.window.indexers', 'pandas.core.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.online', 'pandas.core.window.rolling', 'pandas.core.window.ewm', 'pandas.core.window.expanding', 'pandas.core.window', 'pandas.core.generic', 'pandas.core.reshape.util', 'pandas.core.reshape.melt', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.arrays', 'pandas.core.tools.datetimes', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.plotting', 'pandas.core.series', 'pandas.io.formats.info', 'pandas.core.frame', 'pandas.core.groupby.base', 'pandas._libs.groupby', 'pandas.core.groupby.numba_', 'pandas.core.groupby.categorical', 'pandas.core.groupby.grouper', 'pandas.core.groupby.ops', 'pandas.core.groupby.groupby', 'pandas.core.groupby.generic', 'pandas.core.groupby', 'pandas.core.api', 'pandas.tseries.api', 'pandas.core.computation.common', 'pandas.core.computation.align', 'pandas.compat.chainmap', 'pandas.core.computation.scope', 'pandas.core.computation.ops', 'pandas.core.computation.parsing', 'pandas.core.computation.expr', 'pandas.core.computation.engines', 'pandas.core.computation.eval', 'pandas.core.computation.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.core.reshape.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.core.dtypes.api', 'pandas.api.types', 'pandas.api', 'pandas.util._print_versions', 'pandas.io.clipboards', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.date_converters', 'pandas.io.parsers.base_parser', 'pandas.io.parsers.c_parser_wrapper', 'pandas.io.parsers.python_parser', 'pandas.io.parsers.readers', 'pandas.io.parsers', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlrd', 'pandas.io.excel._base', 'pandas._libs.json', 'pandas.io.formats._color_data', 'pandas.io.formats.css', 'pandas.io.formats.excel', 'pandas.io.excel._odswriter', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.excel', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.json._json', 'pandas.io.json', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.compat.pickle_compat', 'pandas.io.pickle', 'pandas.core.computation.pytables', 'pandas.io.pytables', 'pandas.io.sas.sasreader', 'pandas.io.sas', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.io.xml', 'pandas.io.api', 'pandas.util._tester', 'pandas._testing._random', 'pandas._testing.contexts', 'pandas._testing._io', 'pandas._testing._warnings', 'cmath', 'pandas._libs.testing', 'pandas._testing.asserters', 'pandas._testing.compat', 'pandas._testing', 'pandas.testing', 'pandas._version', 'pandas', 'tqdm.utils', 'tqdm._monitor', 'tqdm.std', 'tqdm.gui', 'tqdm._tqdm_pandas', 'tqdm._version', 'tqdm.cli', 'tqdm', 'ipywidgets._version', 'ipywidgets.widgets.widget', 'ipywidgets.widgets.util', 'ipywidgets.widgets.trait_types', 'ipywidgets.widgets.widget_layout', 'ipywidgets.widgets.widget_style', 'ipywidgets.widgets.domwidget', 'ipywidgets.widgets.valuewidget', 'ipywidgets.widgets.widget_core', 'ipywidgets.widgets.widget_description', 'ipywidgets.widgets.widget_bool', 'ipywidgets.widgets.widget_button', 'ipywidgets.widgets.docutils', 'ipywidgets.widgets.widget_box', 'ipywidgets.widgets.widget_int', 'ipywidgets.widgets.widget_float', 'ipywidgets.widgets.widget_color', 'ipywidgets.widgets.widget_date', 'ipywidgets.widgets.widget_output', 'ipywidgets.widgets.widget_selection', 'ipywidgets.widgets.widget_selectioncontainer', 'ipywidgets.widgets.widget_string', 'ipywidgets.widgets.widget_controller', 'ipywidgets.widgets.interaction', 'ipywidgets.widgets.widget_link', 'ipywidgets.widgets.widget_media', 'ipywidgets.widgets.widget_templates', 'ipywidgets.widgets.widget_upload', 'ipywidgets.widgets', 'ipywidgets', 'tqdm.notebook', 'tqdm.autonotebook', 'seaborn', 'seaborn.rcmod', 'matplotlib', 'matplotlib.cbook.deprecation', 'matplotlib.cbook', 'matplotlib._animation_data', 'matplotlib.animation', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib.docstring', 'matplotlib._color_data', 'matplotlib.colors', 'cycler', 'matplotlib.rcsetup', 'matplotlib._version', 'matplotlib.ft2font', 'kiwisolver']
2022-09-05 20:23:00,732 [20684] DEBUG    matplotlib:241: [JupyterRequire] CACHEDIR=C:\Users\sasha\.matplotlib
2022-09-05 20:23:00,738 [20684] DEBUG    matplotlib.font_manager:1436: [JupyterRequire] Using fontManager instance from C:\Users\sasha\.matplotlib\fontlist-v330.json
2022-09-05 20:23:01,183 [20684] DEBUG    matplotlib.pyplot:289: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2022-09-05 20:23:01,187 [20684] DEBUG    matplotlib.pyplot:289: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2022-09-05 20:25:36,645 [20684] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2022-09-05 20:25:36,645 [20684] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 1
2022-09-05 20:25:36,645 [20684] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[replace] old[1:3] new[1:1]
2022-09-05 20:25:36,646 [20684] DEBUG    parso.python.diff:421: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2022-09-05 20:25:36,647 [20684] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2022-09-05 20:25:38,189 [20684] DEBUG    matplotlib.font_manager:1334: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=16.0.
2022-09-05 20:25:38,190 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,190 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,190 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,190 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,190 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,190 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,191 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,191 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,191 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:25:38,191 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,191 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,191 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,192 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,192 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-09-05 20:25:38,192 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:25:38,192 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,192 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,192 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,193 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,193 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,193 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,193 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,193 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-09-05 20:25:38,193 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,193 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,194 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,194 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,194 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,194 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,194 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-09-05 20:25:38,194 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-09-05 20:25:38,195 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,195 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,195 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,195 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:25:38,195 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-09-05 20:25:38,196 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,196 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-09-05 20:25:38,196 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,196 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,196 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
2022-09-05 20:25:38,196 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:25:38,197 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:25:38,197 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,197 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,197 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
2022-09-05 20:25:38,197 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
2022-09-05 20:25:38,197 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,198 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2022-09-05 20:25:38,198 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,198 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,198 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,198 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,198 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Book Basic' (GenBkBasB.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,199 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2022-09-05 20:25:38,199 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,199 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
2022-09-05 20:25:38,199 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,199 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,199 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,199 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,200 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,200 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,200 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:25:38,200 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Bold.ttf) normal normal 700 condensed>) = 10.535
2022-09-05 20:25:38,200 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,200 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
2022-09-05 20:25:38,201 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,201 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:25:38,201 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,201 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,201 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
2022-09-05 20:25:38,201 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,201 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,202 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,202 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,202 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,202 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,202 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,204 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:25:38,204 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,205 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Book Basic' (GenBkBasR.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,205 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,205 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,205 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,205 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,205 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,206 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,206 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,206 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,206 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,206 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,206 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,207 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
2022-09-05 20:25:38,207 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Basic' (GenBasI.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,207 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,207 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,207 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,207 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,207 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,208 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Basic' (GenBasI.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,208 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,208 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,208 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Bold.ttf) normal normal 700 condensed>) = 10.535
2022-09-05 20:25:38,208 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,208 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-BoldOblique.ttf) oblique normal 700 condensed>) = 1.535
2022-09-05 20:25:38,209 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,209 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,209 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,209 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,209 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-09-05 20:25:38,209 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,209 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
2022-09-05 20:25:38,210 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,210 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
2022-09-05 20:25:38,210 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,210 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-ExtraLight.ttf) normal normal 200 normal>) = 0.24
2022-09-05 20:25:38,210 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Basic' (GenBasBI.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:25:38,210 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Basic' (GenBasB.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,210 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,211 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,211 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
2022-09-05 20:25:38,211 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,211 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,211 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2022-09-05 20:25:38,211 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,212 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,212 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,212 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2022-09-05 20:25:38,212 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:25:38,212 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,212 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
2022-09-05 20:25:38,213 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
2022-09-05 20:25:38,213 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,213 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-09-05 20:25:38,213 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,213 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,213 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,213 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,214 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
2022-09-05 20:25:38,214 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,214 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2022-09-05 20:25:38,214 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,214 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Oblique.ttf) oblique normal 400 condensed>) = 1.25
2022-09-05 20:25:38,214 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,215 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,215 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,215 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,215 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Bold.ttf) normal normal 700 condensed>) = 0.5349999999999999
2022-09-05 20:25:38,215 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arimo' (Arimo-Italic.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,215 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,215 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,216 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
2022-09-05 20:25:38,216 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2022-09-05 20:25:38,216 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,216 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,216 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,216 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,216 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,217 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,217 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,217 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
2022-09-05 20:25:38,217 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,217 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,217 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,218 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:25:38,218 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:25:38,218 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2022-09-05 20:25:38,218 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,218 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,218 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2022-09-05 20:25:38,218 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arimo' (Arimo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,219 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Bold.ttf) normal normal 700 condensed>) = 0.5349999999999999
2022-09-05 20:25:38,219 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
2022-09-05 20:25:38,219 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeamViewer15' (teamviewer15.otf) normal normal 500 normal>) = 10.145
2022-09-05 20:25:38,219 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,219 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,219 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,219 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arimo' (Arimo-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:25:38,220 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,220 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,220 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
2022-09-05 20:25:38,220 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed.ttf) normal normal 400 condensed>) = 0.25
2022-09-05 20:25:38,220 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:25:38,220 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,220 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,221 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,221 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
2022-09-05 20:25:38,221 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-09-05 20:25:38,221 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2022-09-05 20:25:38,221 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,222 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,222 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,222 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,222 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Book Basic' (GenBkBasBI.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:25:38,222 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,222 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:25:38,223 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,223 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-09-05 20:25:38,223 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,223 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
2022-09-05 20:25:38,223 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,223 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,223 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,224 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,224 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,224 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-09-05 20:25:38,224 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,224 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,224 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2022-09-05 20:25:38,224 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
2022-09-05 20:25:38,225 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,225 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:25:38,225 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
2022-09-05 20:25:38,225 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
2022-09-05 20:25:38,225 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,225 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,226 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,226 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:25:38,226 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,226 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,226 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
2022-09-05 20:25:38,226 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:25:38,226 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Oblique.ttf) oblique normal 400 condensed>) = 1.25
2022-09-05 20:25:38,227 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,227 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2022-09-05 20:25:38,227 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:25:38,227 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,227 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,228 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
2022-09-05 20:25:38,228 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2022-09-05 20:25:38,228 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,228 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:25:38,228 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,228 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
2022-09-05 20:25:38,229 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,229 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,229 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Book Basic' (GenBkBasI.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,229 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeamViewer15' (teamviewer15.otf) normal normal 500 normal>) = 10.145
2022-09-05 20:25:38,229 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2022-09-05 20:25:38,229 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed.ttf) normal normal 400 condensed>) = 10.25
2022-09-05 20:25:38,230 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
2022-09-05 20:25:38,230 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:25:38,230 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,230 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,231 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,231 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,231 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2022-09-05 20:25:38,231 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,232 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,232 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,232 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,232 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,232 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,233 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,233 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,233 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Basic' (GenBasB.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,233 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
2022-09-05 20:25:38,234 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-BoldOblique.ttf) oblique normal 700 condensed>) = 1.535
2022-09-05 20:25:38,234 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,234 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,234 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-09-05 20:25:38,235 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:25:38,235 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2022-09-05 20:25:38,235 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,235 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,236 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Italic.ttf) italic normal 400 condensed>) = 11.25
2022-09-05 20:25:38,236 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,236 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,236 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,236 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,237 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2022-09-05 20:25:38,237 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,237 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,237 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2022-09-05 20:25:38,238 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,238 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,238 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,238 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,238 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arimo' (Arimo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,239 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,239 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,239 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,239 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,239 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
2022-09-05 20:25:38,239 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,239 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,240 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:25:38,240 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,240 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:25:38,240 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,240 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,240 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,240 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,241 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,241 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
2022-09-05 20:25:38,241 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-09-05 20:25:38,241 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,241 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,241 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,242 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Book Basic' (GenBkBasB.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,242 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-09-05 20:25:38,242 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2022-09-05 20:25:38,242 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,242 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,242 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,242 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,243 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-09-05 20:25:38,243 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,243 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,243 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,243 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed.ttf) normal normal 400 condensed>) = 10.25
2022-09-05 20:25:38,243 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,243 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2022-09-05 20:25:38,244 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2022-09-05 20:25:38,244 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:25:38,244 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:25:38,244 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2022-09-05 20:25:38,244 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,244 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:25:38,244 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,245 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,245 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arimo' (Arimo-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:25:38,245 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,245 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:25:38,245 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-09-05 20:25:38,245 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Book Basic' (GenBkBasI.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,246 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,246 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,246 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,246 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
2022-09-05 20:25:38,246 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
2022-09-05 20:25:38,246 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Basic' (GenBasBI.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:25:38,246 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,247 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,247 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,247 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arimo' (Arimo-Bold.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,247 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,247 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,248 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,248 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-ExtraLight.ttf) normal normal 200 normal>) = 0.24
2022-09-05 20:25:38,248 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,249 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,249 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Book Basic' (GenBkBasBI.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:25:38,249 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
2022-09-05 20:25:38,249 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arimo' (Arimo-Italic.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,249 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:25:38,250 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2022-09-05 20:25:38,250 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,250 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2022-09-05 20:25:38,250 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,250 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,250 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
2022-09-05 20:25:38,251 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Italic.ttf) italic normal 400 condensed>) = 11.25
2022-09-05 20:25:38,251 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,251 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,251 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:25:38,251 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,251 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:25:38,252 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,252 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,252 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,252 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-09-05 20:25:38,252 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,252 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,252 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:25:38,253 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Basic' (GenBasR.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,253 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:25:38,253 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
2022-09-05 20:25:38,253 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,253 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,253 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,253 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,254 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2022-09-05 20:25:38,254 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,254 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,254 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,254 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,254 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,255 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
2022-09-05 20:25:38,255 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-09-05 20:25:38,255 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,255 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,255 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Basic' (GenBasR.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,255 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,255 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Book Basic' (GenBkBasR.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,256 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,256 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,256 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,256 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arimo' (Arimo-Bold.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,256 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,256 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed.ttf) normal normal 400 condensed>) = 0.25
2022-09-05 20:25:38,256 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2022-09-05 20:25:38,257 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,257 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2022-09-05 20:25:38,257 [20684] DEBUG    matplotlib.font_manager:1366: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=16.0 to DejaVu Sans ('C:\\Users\\sasha\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2022-09-05 20:25:38,271 [20684] DEBUG    matplotlib.font_manager:1334: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2022-09-05 20:25:38,271 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,271 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,271 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,271 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,272 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,272 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,272 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,272 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,272 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:25:38,272 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,273 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,273 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,273 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,273 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-09-05 20:25:38,273 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:25:38,273 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,273 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,274 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,274 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,274 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,274 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,274 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,274 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-09-05 20:25:38,274 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,275 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,275 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,275 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,275 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,275 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,275 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-09-05 20:25:38,276 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-09-05 20:25:38,276 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,276 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,276 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,276 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:25:38,277 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-09-05 20:25:38,277 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,277 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-09-05 20:25:38,277 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,277 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,277 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
2022-09-05 20:25:38,278 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:25:38,278 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:25:38,278 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,278 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,278 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
2022-09-05 20:25:38,278 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
2022-09-05 20:25:38,278 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,279 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2022-09-05 20:25:38,279 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,279 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,279 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,279 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,279 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Book Basic' (GenBkBasB.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,279 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2022-09-05 20:25:38,280 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,280 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
2022-09-05 20:25:38,280 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,280 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,280 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,280 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,281 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,281 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,281 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:25:38,281 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Bold.ttf) normal normal 700 condensed>) = 10.535
2022-09-05 20:25:38,281 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,282 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
2022-09-05 20:25:38,282 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,282 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:25:38,282 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,282 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,282 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
2022-09-05 20:25:38,283 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,283 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,283 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,283 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,283 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,283 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,283 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,284 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:25:38,284 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,284 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Book Basic' (GenBkBasR.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,284 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,284 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,284 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,284 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,285 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,285 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,285 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,285 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,285 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,285 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,285 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,286 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
2022-09-05 20:25:38,286 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Basic' (GenBasI.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,286 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,286 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,286 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,286 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,287 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,287 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Basic' (GenBasI.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,287 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,287 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,287 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Bold.ttf) normal normal 700 condensed>) = 10.535
2022-09-05 20:25:38,287 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,287 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-BoldOblique.ttf) oblique normal 700 condensed>) = 1.535
2022-09-05 20:25:38,288 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,288 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,288 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,288 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,288 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-09-05 20:25:38,288 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,288 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
2022-09-05 20:25:38,289 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,289 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
2022-09-05 20:25:38,289 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,289 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-ExtraLight.ttf) normal normal 200 normal>) = 0.24
2022-09-05 20:25:38,289 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Basic' (GenBasBI.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:25:38,289 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Basic' (GenBasB.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,289 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,290 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,290 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
2022-09-05 20:25:38,290 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,290 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,290 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2022-09-05 20:25:38,290 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,291 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,291 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,291 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2022-09-05 20:25:38,291 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:25:38,291 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,291 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
2022-09-05 20:25:38,291 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
2022-09-05 20:25:38,292 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,292 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-09-05 20:25:38,292 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,292 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,292 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,292 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,292 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
2022-09-05 20:25:38,293 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,293 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2022-09-05 20:25:38,293 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,293 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Oblique.ttf) oblique normal 400 condensed>) = 1.25
2022-09-05 20:25:38,293 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,294 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,294 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,294 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,294 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Bold.ttf) normal normal 700 condensed>) = 0.5349999999999999
2022-09-05 20:25:38,294 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arimo' (Arimo-Italic.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,294 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,295 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,295 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
2022-09-05 20:25:38,295 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2022-09-05 20:25:38,295 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,295 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,295 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,296 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,296 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,296 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,296 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,296 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
2022-09-05 20:25:38,296 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,296 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,297 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,297 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:25:38,297 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:25:38,297 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2022-09-05 20:25:38,297 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,297 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,297 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2022-09-05 20:25:38,298 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arimo' (Arimo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,298 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Bold.ttf) normal normal 700 condensed>) = 0.5349999999999999
2022-09-05 20:25:38,298 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
2022-09-05 20:25:38,298 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeamViewer15' (teamviewer15.otf) normal normal 500 normal>) = 10.145
2022-09-05 20:25:38,298 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,298 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,298 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,299 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arimo' (Arimo-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:25:38,299 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,299 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,299 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
2022-09-05 20:25:38,299 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed.ttf) normal normal 400 condensed>) = 0.25
2022-09-05 20:25:38,299 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:25:38,300 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,300 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,300 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,300 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
2022-09-05 20:25:38,300 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-09-05 20:25:38,300 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2022-09-05 20:25:38,300 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,301 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,301 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,301 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,301 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Book Basic' (GenBkBasBI.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:25:38,301 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,301 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:25:38,301 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,302 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-09-05 20:25:38,302 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,302 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
2022-09-05 20:25:38,302 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,302 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,302 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,303 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,303 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,303 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-09-05 20:25:38,303 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,303 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,303 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2022-09-05 20:25:38,303 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
2022-09-05 20:25:38,304 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,304 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:25:38,304 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
2022-09-05 20:25:38,304 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
2022-09-05 20:25:38,304 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,304 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,304 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,305 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:25:38,305 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,305 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,305 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
2022-09-05 20:25:38,305 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:25:38,305 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Oblique.ttf) oblique normal 400 condensed>) = 1.25
2022-09-05 20:25:38,305 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,306 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2022-09-05 20:25:38,306 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:25:38,306 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,306 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,306 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
2022-09-05 20:25:38,306 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2022-09-05 20:25:38,307 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,307 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:25:38,307 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,307 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
2022-09-05 20:25:38,307 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,307 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,307 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Book Basic' (GenBkBasI.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,308 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeamViewer15' (teamviewer15.otf) normal normal 500 normal>) = 10.145
2022-09-05 20:25:38,308 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2022-09-05 20:25:38,308 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed.ttf) normal normal 400 condensed>) = 10.25
2022-09-05 20:25:38,308 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
2022-09-05 20:25:38,308 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:25:38,308 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,308 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,309 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,309 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,309 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2022-09-05 20:25:38,309 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,309 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,309 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,309 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,310 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,310 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,310 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,310 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,310 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Basic' (GenBasB.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,310 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
2022-09-05 20:25:38,310 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-BoldOblique.ttf) oblique normal 700 condensed>) = 1.535
2022-09-05 20:25:38,311 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,311 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,311 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-09-05 20:25:38,311 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:25:38,311 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2022-09-05 20:25:38,312 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,312 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,312 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Italic.ttf) italic normal 400 condensed>) = 11.25
2022-09-05 20:25:38,312 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,312 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,312 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,312 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,313 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2022-09-05 20:25:38,313 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,313 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,313 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2022-09-05 20:25:38,313 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,313 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,313 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,313 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,313 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arimo' (Arimo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,313 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,313 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,314 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,314 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,314 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
2022-09-05 20:25:38,314 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,314 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,314 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:25:38,314 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,315 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:25:38,315 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,315 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,315 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,315 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,315 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,315 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
2022-09-05 20:25:38,316 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-09-05 20:25:38,316 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,316 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,316 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,316 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Book Basic' (GenBkBasB.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,316 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-09-05 20:25:38,316 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2022-09-05 20:25:38,317 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,317 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,317 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,317 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,317 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-09-05 20:25:38,317 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,318 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,318 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,318 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed.ttf) normal normal 400 condensed>) = 10.25
2022-09-05 20:25:38,318 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,318 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2022-09-05 20:25:38,318 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2022-09-05 20:25:38,318 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:25:38,319 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:25:38,319 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2022-09-05 20:25:38,319 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,319 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:25:38,319 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,319 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,319 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arimo' (Arimo-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:25:38,320 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,320 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:25:38,320 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-09-05 20:25:38,320 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Book Basic' (GenBkBasI.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,320 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,320 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,320 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,321 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
2022-09-05 20:25:38,321 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
2022-09-05 20:25:38,321 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Basic' (GenBasBI.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:25:38,321 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,321 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,321 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,321 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arimo' (Arimo-Bold.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,322 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,322 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,322 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,322 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-ExtraLight.ttf) normal normal 200 normal>) = 0.24
2022-09-05 20:25:38,322 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,322 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,322 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Book Basic' (GenBkBasBI.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:25:38,323 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
2022-09-05 20:25:38,323 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arimo' (Arimo-Italic.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,323 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:25:38,323 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2022-09-05 20:25:38,323 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,323 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2022-09-05 20:25:38,324 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,324 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,324 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
2022-09-05 20:25:38,324 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Italic.ttf) italic normal 400 condensed>) = 11.25
2022-09-05 20:25:38,324 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,324 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,324 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:25:38,325 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,325 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:25:38,325 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,325 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,325 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,325 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-09-05 20:25:38,325 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,326 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,326 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:25:38,326 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Basic' (GenBasR.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,326 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:25:38,327 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
2022-09-05 20:25:38,327 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,327 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,327 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,328 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,328 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2022-09-05 20:25:38,328 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,328 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,328 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,329 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,329 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,329 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
2022-09-05 20:25:38,329 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-09-05 20:25:38,329 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,329 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,330 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Basic' (GenBasR.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,330 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,330 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Book Basic' (GenBkBasR.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,330 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:25:38,330 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,330 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,331 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arimo' (Arimo-Bold.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:25:38,331 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,331 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed.ttf) normal normal 400 condensed>) = 0.25
2022-09-05 20:25:38,331 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2022-09-05 20:25:38,331 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2022-09-05 20:25:38,331 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2022-09-05 20:25:38,331 [20684] DEBUG    matplotlib.font_manager:1366: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\sasha\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2022-09-05 20:25:44,052 [20684] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2022-09-05 20:25:44,053 [20684] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2022-09-05 20:25:44,053 [20684] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2022-09-05 20:25:44,053 [20684] DEBUG    parso.python.diff:421: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2022-09-05 20:25:44,054 [20684] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2022-09-05 20:25:49,868 [20684] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2022-09-05 20:25:49,869 [20684] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2022-09-05 20:25:49,869 [20684] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2022-09-05 20:25:49,869 [20684] DEBUG    parso.python.diff:421: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2022-09-05 20:25:49,870 [20684] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2022-09-05 20:25:58,120 [20684] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2022-09-05 20:25:58,121 [20684] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2022-09-05 20:25:58,121 [20684] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2022-09-05 20:25:58,121 [20684] DEBUG    parso.python.diff:421: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2022-09-05 20:25:58,122 [20684] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2022-09-05 20:26:04,215 [20684] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2022-09-05 20:26:04,215 [20684] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2022-09-05 20:26:04,215 [20684] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2022-09-05 20:26:04,216 [20684] DEBUG    parso.python.diff:421: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2022-09-05 20:26:04,216 [20684] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2022-09-05 20:26:08,537 [20684] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2022-09-05 20:26:08,537 [20684] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2022-09-05 20:26:08,538 [20684] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2022-09-05 20:26:08,538 [20684] DEBUG    parso.python.diff:421: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2022-09-05 20:26:08,538 [20684] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2022-09-05 20:26:17,103 [20684] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2022-09-05 20:26:17,104 [20684] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2022-09-05 20:26:17,104 [20684] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2022-09-05 20:26:17,104 [20684] DEBUG    parso.python.diff:421: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2022-09-05 20:26:17,104 [20684] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2022-09-05 20:29:02,081 [20684] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2022-09-05 20:29:02,081 [20684] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2022-09-05 20:29:02,082 [20684] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2022-09-05 20:29:02,082 [20684] DEBUG    parso.python.diff:421: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2022-09-05 20:29:02,082 [20684] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2022-09-05 20:29:08,368 [20684] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2022-09-05 20:29:08,369 [20684] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2022-09-05 20:29:08,369 [20684] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2022-09-05 20:29:08,369 [20684] DEBUG    parso.python.diff:421: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2022-09-05 20:29:08,370 [20684] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2022-09-05 20:29:28,573 [20684] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2022-09-05 20:29:28,573 [20684] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2022-09-05 20:29:28,573 [20684] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2022-09-05 20:29:28,574 [20684] DEBUG    parso.python.diff:421: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2022-09-05 20:29:28,574 [20684] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2022-09-05 20:29:28,911 [20684] DEBUG    parso.cache:143: [JupyterRequire] pickle loaded: C:\Users\sasha\anaconda3\lib\site-packages\jedi\third_party\typeshed\stdlib\2and3\builtins.pyi
2022-09-05 20:29:28,955 [20684] DEBUG    parso.cache:143: [JupyterRequire] pickle loaded: C:\Users\sasha\anaconda3\lib\site-packages\jedi\third_party\typeshed\stdlib\3\sys.pyi
2022-09-05 20:35:41,946 [20684] DEBUG    matplotlib.font_manager:1334: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=bold:stretch=normal:size=14.0.
2022-09-05 20:35:41,947 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.05
2022-09-05 20:35:41,947 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,947 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,947 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,947 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,948 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,948 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,948 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,948 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.05
2022-09-05 20:35:41,948 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.05
2022-09-05 20:35:41,948 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.05
2022-09-05 20:35:41,949 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,949 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,949 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.05
2022-09-05 20:35:41,949 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2022-09-05 20:35:41,949 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.335
2022-09-05 20:35:41,949 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,950 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.05
2022-09-05 20:35:41,950 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,950 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.05
2022-09-05 20:35:41,950 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.05
2022-09-05 20:35:41,950 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,950 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.335
2022-09-05 20:35:41,950 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.05
2022-09-05 20:35:41,951 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,951 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.335
2022-09-05 20:35:41,951 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.05
2022-09-05 20:35:41,951 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,951 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,952 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.33499999999999996
2022-09-05 20:35:41,952 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-09-05 20:35:41,952 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,952 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.335
2022-09-05 20:35:41,953 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,953 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.05
2022-09-05 20:35:41,953 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-09-05 20:35:41,953 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,953 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.05
2022-09-05 20:35:41,954 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,954 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.05
2022-09-05 20:35:41,954 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.24
2022-09-05 20:35:41,954 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.05
2022-09-05 20:35:41,954 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.05
2022-09-05 20:35:41,954 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,955 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,955 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.24
2022-09-05 20:35:41,955 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.43
2022-09-05 20:35:41,955 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,955 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.145
2022-09-05 20:35:41,955 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,956 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,956 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,956 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.05
2022-09-05 20:35:41,956 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Book Basic' (GenBkBasB.ttf) normal normal 700 normal>) = 10.05
2022-09-05 20:35:41,956 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.413636363636363
2022-09-05 20:35:41,956 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.05
2022-09-05 20:35:41,956 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.3825
2022-09-05 20:35:41,957 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.05
2022-09-05 20:35:41,957 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.05
2022-09-05 20:35:41,957 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.335
2022-09-05 20:35:41,957 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,958 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,958 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,958 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.05
2022-09-05 20:35:41,958 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Bold.ttf) normal normal 700 condensed>) = 10.25
2022-09-05 20:35:41,958 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,959 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.3825
2022-09-05 20:35:41,959 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.335
2022-09-05 20:35:41,959 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.05
2022-09-05 20:35:41,959 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,959 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.05
2022-09-05 20:35:41,959 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.24
2022-09-05 20:35:41,960 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,960 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.335
2022-09-05 20:35:41,960 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.05
2022-09-05 20:35:41,960 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,960 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.05
2022-09-05 20:35:41,960 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.335
2022-09-05 20:35:41,960 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,961 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2022-09-05 20:35:41,961 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.05
2022-09-05 20:35:41,961 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Book Basic' (GenBkBasR.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,961 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.335
2022-09-05 20:35:41,961 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.335
2022-09-05 20:35:41,961 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.335
2022-09-05 20:35:41,962 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,962 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.05
2022-09-05 20:35:41,962 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,962 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,962 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,962 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,962 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,963 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.335
2022-09-05 20:35:41,963 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.4395
2022-09-05 20:35:41,963 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Basic' (GenBasI.ttf) italic normal 400 normal>) = 11.335
2022-09-05 20:35:41,963 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.335
2022-09-05 20:35:41,963 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,963 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,963 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.335
2022-09-05 20:35:41,964 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,964 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Basic' (GenBasI.ttf) italic normal 400 normal>) = 11.335
2022-09-05 20:35:41,964 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.05
2022-09-05 20:35:41,964 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,964 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Bold.ttf) normal normal 700 condensed>) = 10.25
2022-09-05 20:35:41,964 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.05
2022-09-05 20:35:41,965 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-BoldOblique.ttf) oblique normal 700 condensed>) = 1.25
2022-09-05 20:35:41,965 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,965 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.05
2022-09-05 20:35:41,965 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.335
2022-09-05 20:35:41,965 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.335
2022-09-05 20:35:41,965 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.05
2022-09-05 20:35:41,965 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,966 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.3825
2022-09-05 20:35:41,966 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,966 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.4395
2022-09-05 20:35:41,966 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,966 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-ExtraLight.ttf) normal normal 200 normal>) = 0.525
2022-09-05 20:35:41,966 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Basic' (GenBasBI.ttf) italic normal 700 normal>) = 11.05
2022-09-05 20:35:41,967 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Basic' (GenBasB.ttf) normal normal 700 normal>) = 10.05
2022-09-05 20:35:41,967 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,967 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,967 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.43
2022-09-05 20:35:41,967 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.05
2022-09-05 20:35:41,967 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,967 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.9713636363636367
2022-09-05 20:35:41,968 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,968 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.05
2022-09-05 20:35:41,968 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,968 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.698636363636363
2022-09-05 20:35:41,968 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.05
2022-09-05 20:35:41,968 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,969 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.24
2022-09-05 20:35:41,969 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.4395
2022-09-05 20:35:41,969 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,969 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.335
2022-09-05 20:35:41,970 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,970 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.05
2022-09-05 20:35:41,970 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,970 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.05
2022-09-05 20:35:41,970 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.43
2022-09-05 20:35:41,970 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,971 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.6863636363636365
2022-09-05 20:35:41,971 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,971 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Oblique.ttf) oblique normal 400 condensed>) = 1.535
2022-09-05 20:35:41,971 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,971 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,971 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.05
2022-09-05 20:35:41,971 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,972 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Bold.ttf) normal normal 700 condensed>) = 0.25
2022-09-05 20:35:41,972 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arimo' (Arimo-Italic.ttf) italic normal 400 normal>) = 11.335
2022-09-05 20:35:41,972 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.335
2022-09-05 20:35:41,972 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,972 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.43
2022-09-05 20:35:41,972 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.971363636363637
2022-09-05 20:35:41,973 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,973 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,973 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.335
2022-09-05 20:35:41,973 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,973 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,973 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.05
2022-09-05 20:35:41,974 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.05
2022-09-05 20:35:41,974 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.3825
2022-09-05 20:35:41,974 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,974 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.05
2022-09-05 20:35:41,974 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.335
2022-09-05 20:35:41,974 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.05
2022-09-05 20:35:41,974 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.05
2022-09-05 20:35:41,975 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.971363636363637
2022-09-05 20:35:41,975 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.05
2022-09-05 20:35:41,975 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.05
2022-09-05 20:35:41,975 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.43
2022-09-05 20:35:41,975 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arimo' (Arimo-Regular.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,975 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Bold.ttf) normal normal 700 condensed>) = 0.25
2022-09-05 20:35:41,975 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.43
2022-09-05 20:35:41,976 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeamViewer15' (teamviewer15.otf) normal normal 500 normal>) = 10.24
2022-09-05 20:35:41,976 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.335
2022-09-05 20:35:41,976 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,976 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.05
2022-09-05 20:35:41,976 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arimo' (Arimo-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2022-09-05 20:35:41,976 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.05
2022-09-05 20:35:41,977 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.05
2022-09-05 20:35:41,977 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.43
2022-09-05 20:35:41,977 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed.ttf) normal normal 400 condensed>) = 0.5349999999999999
2022-09-05 20:35:41,977 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.05
2022-09-05 20:35:41,977 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,977 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,977 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,978 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.3825
2022-09-05 20:35:41,978 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.05
2022-09-05 20:35:41,978 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-BoldItalic.ttf) italic normal 700 condensed>) = 11.25
2022-09-05 20:35:41,978 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.05
2022-09-05 20:35:41,978 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.05
2022-09-05 20:35:41,978 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.335
2022-09-05 20:35:41,979 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,979 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Book Basic' (GenBkBasBI.ttf) italic normal 700 normal>) = 11.05
2022-09-05 20:35:41,979 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,979 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.05
2022-09-05 20:35:41,979 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,979 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-09-05 20:35:41,979 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,980 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.4395
2022-09-05 20:35:41,980 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.05
2022-09-05 20:35:41,980 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.05
2022-09-05 20:35:41,980 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,980 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.335
2022-09-05 20:35:41,980 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.05
2022-09-05 20:35:41,981 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.33499999999999996
2022-09-05 20:35:41,981 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,981 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,981 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.05
2022-09-05 20:35:41,981 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.145
2022-09-05 20:35:41,981 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,981 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.05
2022-09-05 20:35:41,982 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.43
2022-09-05 20:35:41,982 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.43
2022-09-05 20:35:41,982 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,982 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,982 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,982 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.05
2022-09-05 20:35:41,982 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.05
2022-09-05 20:35:41,983 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.335
2022-09-05 20:35:41,983 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.3825
2022-09-05 20:35:41,983 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.05
2022-09-05 20:35:41,983 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Oblique.ttf) oblique normal 400 condensed>) = 1.535
2022-09-05 20:35:41,983 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.335
2022-09-05 20:35:41,984 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.413636363636363
2022-09-05 20:35:41,984 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.05
2022-09-05 20:35:41,984 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,984 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,984 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.43
2022-09-05 20:35:41,984 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-BoldItalic.ttf) italic normal 700 condensed>) = 11.25
2022-09-05 20:35:41,985 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,985 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2022-09-05 20:35:41,985 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.05
2022-09-05 20:35:41,985 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.43
2022-09-05 20:35:41,985 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.05
2022-09-05 20:35:41,985 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,986 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Book Basic' (GenBkBasI.ttf) italic normal 400 normal>) = 11.335
2022-09-05 20:35:41,986 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeamViewer15' (teamviewer15.otf) normal normal 500 normal>) = 10.24
2022-09-05 20:35:41,986 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.9713636363636367
2022-09-05 20:35:41,986 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed.ttf) normal normal 400 condensed>) = 10.535
2022-09-05 20:35:41,986 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.3825
2022-09-05 20:35:41,986 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.05
2022-09-05 20:35:41,986 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.05
2022-09-05 20:35:41,987 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,987 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.05
2022-09-05 20:35:41,987 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,987 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.6036363636363635
2022-09-05 20:35:41,987 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,987 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.335
2022-09-05 20:35:41,988 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.05
2022-09-05 20:35:41,988 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.335
2022-09-05 20:35:41,988 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,988 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,988 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.05
2022-09-05 20:35:41,988 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,988 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Basic' (GenBasB.ttf) normal normal 700 normal>) = 10.05
2022-09-05 20:35:41,989 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.3825
2022-09-05 20:35:41,989 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-BoldOblique.ttf) oblique normal 700 condensed>) = 1.25
2022-09-05 20:35:41,989 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,989 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.05
2022-09-05 20:35:41,989 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-09-05 20:35:41,989 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.05
2022-09-05 20:35:41,990 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.413636363636363
2022-09-05 20:35:41,990 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,990 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,990 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Italic.ttf) italic normal 400 condensed>) = 11.535
2022-09-05 20:35:41,990 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.05
2022-09-05 20:35:41,990 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,990 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,991 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,991 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.698636363636363
2022-09-05 20:35:41,991 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,991 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.05
2022-09-05 20:35:41,991 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.698636363636363
2022-09-05 20:35:41,991 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,991 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,992 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,992 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.335
2022-09-05 20:35:41,992 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arimo' (Arimo-Regular.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,992 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,992 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,992 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.05
2022-09-05 20:35:41,993 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,993 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.43
2022-09-05 20:35:41,993 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,993 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,993 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.05
2022-09-05 20:35:41,994 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,994 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.05
2022-09-05 20:35:41,994 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.05
2022-09-05 20:35:41,994 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,994 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.05
2022-09-05 20:35:41,994 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,995 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,995 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.24
2022-09-05 20:35:41,995 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.335
2022-09-05 20:35:41,995 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,995 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.05
2022-09-05 20:35:41,996 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,996 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Book Basic' (GenBkBasB.ttf) normal normal 700 normal>) = 10.05
2022-09-05 20:35:41,996 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2022-09-05 20:35:41,996 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.05
2022-09-05 20:35:41,996 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.335
2022-09-05 20:35:41,996 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,997 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,997 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,997 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.335
2022-09-05 20:35:41,997 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,997 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.05
2022-09-05 20:35:41,998 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:41,998 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed.ttf) normal normal 400 condensed>) = 10.535
2022-09-05 20:35:41,998 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.05
2022-09-05 20:35:41,998 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.43
2022-09-05 20:35:41,999 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.145
2022-09-05 20:35:41,999 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.05
2022-09-05 20:35:41,999 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.05
2022-09-05 20:35:41,999 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.6863636363636365
2022-09-05 20:35:41,999 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.335
2022-09-05 20:35:41,999 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.05
2022-09-05 20:35:42,000 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.335
2022-09-05 20:35:42,000 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:42,000 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arimo' (Arimo-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2022-09-05 20:35:42,000 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.05
2022-09-05 20:35:42,000 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.05
2022-09-05 20:35:42,000 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.33499999999999996
2022-09-05 20:35:42,000 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Book Basic' (GenBkBasI.ttf) italic normal 400 normal>) = 11.335
2022-09-05 20:35:42,001 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.335
2022-09-05 20:35:42,001 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.05
2022-09-05 20:35:42,001 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.05
2022-09-05 20:35:42,001 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.43
2022-09-05 20:35:42,001 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.43
2022-09-05 20:35:42,001 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Basic' (GenBasBI.ttf) italic normal 700 normal>) = 11.05
2022-09-05 20:35:42,002 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:42,002 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:42,002 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.05
2022-09-05 20:35:42,003 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arimo' (Arimo-Bold.ttf) normal normal 700 normal>) = 10.05
2022-09-05 20:35:42,003 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.05
2022-09-05 20:35:42,004 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.05
2022-09-05 20:35:42,005 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.335
2022-09-05 20:35:42,006 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-ExtraLight.ttf) normal normal 200 normal>) = 0.525
2022-09-05 20:35:42,006 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:42,006 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:42,007 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Book Basic' (GenBkBasBI.ttf) italic normal 700 normal>) = 11.05
2022-09-05 20:35:42,007 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.145
2022-09-05 20:35:42,007 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arimo' (Arimo-Italic.ttf) italic normal 400 normal>) = 11.335
2022-09-05 20:35:42,007 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.05
2022-09-05 20:35:42,008 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.413636363636363
2022-09-05 20:35:42,008 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.335
2022-09-05 20:35:42,009 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.6036363636363635
2022-09-05 20:35:42,009 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.335
2022-09-05 20:35:42,009 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.05
2022-09-05 20:35:42,010 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.24
2022-09-05 20:35:42,010 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Italic.ttf) italic normal 400 condensed>) = 11.535
2022-09-05 20:35:42,010 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.335
2022-09-05 20:35:42,010 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:42,010 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.05
2022-09-05 20:35:42,010 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.335
2022-09-05 20:35:42,010 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.05
2022-09-05 20:35:42,011 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:42,011 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.05
2022-09-05 20:35:42,011 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:42,011 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.05
2022-09-05 20:35:42,011 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:42,011 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.05
2022-09-05 20:35:42,012 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.05
2022-09-05 20:35:42,012 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Basic' (GenBasR.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:42,012 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.05
2022-09-05 20:35:42,012 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.24
2022-09-05 20:35:42,012 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.05
2022-09-05 20:35:42,012 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.05
2022-09-05 20:35:42,012 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:42,013 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:42,013 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.6863636363636365
2022-09-05 20:35:42,013 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.335
2022-09-05 20:35:42,013 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.05
2022-09-05 20:35:42,013 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:42,013 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.05
2022-09-05 20:35:42,014 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:42,014 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.43
2022-09-05 20:35:42,014 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.05
2022-09-05 20:35:42,014 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.335
2022-09-05 20:35:42,014 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.05
2022-09-05 20:35:42,014 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Basic' (GenBasR.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:42,014 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.335
2022-09-05 20:35:42,015 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Book Basic' (GenBkBasR.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:42,015 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.335
2022-09-05 20:35:42,015 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.05
2022-09-05 20:35:42,015 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:42,015 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arimo' (Arimo-Bold.ttf) normal normal 700 normal>) = 10.05
2022-09-05 20:35:42,015 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.335
2022-09-05 20:35:42,016 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed.ttf) normal normal 400 condensed>) = 0.5349999999999999
2022-09-05 20:35:42,016 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.6863636363636365
2022-09-05 20:35:42,016 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.335
2022-09-05 20:35:42,016 [20684] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.698636363636363
2022-09-05 20:35:42,016 [20684] DEBUG    matplotlib.font_manager:1366: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=bold:stretch=normal:size=14.0 to DejaVu Sans ('C:\\Users\\sasha\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf') with score of 0.050000.
2022-09-05 20:42:30,071 [20684] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2022-09-05 20:42:30,071 [20684] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 2
2022-09-05 20:42:30,072 [20684] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[replace] old[1:1] new[1:2]
2022-09-05 20:42:30,072 [20684] DEBUG    parso.python.diff:421: [JupyterRequire] parse_part from 1 to 3 (to 1 in part parser)
2022-09-05 20:42:30,073 [20684] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2022-09-05 20:42:30,158 [20684] DEBUG    parso.cache:143: [JupyterRequire] pickle loaded: C:\Users\sasha\anaconda3\lib\typing.py
2022-09-05 20:42:30,171 [20684] DEBUG    parso.cache:143: [JupyterRequire] pickle loaded: C:\Users\sasha\anaconda3\lib\site-packages\jedi\third_party\typeshed\stdlib\3\typing.pyi
2022-09-05 20:45:46,417 [5660] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2022-09-05 20:45:46,418 [5660] DEBUG    root:93: [JupyterRequire] Initializing comms.
2022-09-05 20:45:46,418 [5660] INFO     root:247: [JupyterRequire] Initializing comms.
2022-09-05 20:45:46,425 [5660] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2022-09-05 20:45:46,426 [5660] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2022-09-05 20:45:46,427 [5660] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2022-09-05 20:45:47,345 [5660] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2022-09-05 20:45:47,345 [5660] DEBUG    root:93: [JupyterRequire] Initializing comms.
2022-09-05 20:45:47,345 [5660] INFO     root:247: [JupyterRequire] Initializing comms.
2022-09-05 20:45:47,347 [5660] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2022-09-05 20:45:47,347 [5660] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2022-09-05 20:45:47,348 [5660] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2022-09-05 20:45:48,747 [5660] WARNING  py.warnings:109: [JupyterRequire] C:\Users\sasha\anaconda3\lib\site-packages\numpy\_distributor_init.py:30: UserWarning: loaded more than 1 DLL from .libs:
C:\Users\sasha\anaconda3\lib\site-packages\numpy\.libs\libopenblas.EL2C6PLE4ZYW3ECEVIV3OXXGRN2NRFM2.gfortran-win_amd64.dll
C:\Users\sasha\anaconda3\lib\site-packages\numpy\.libs\libopenblas.QVLO2T66WEPI7JZ63PS3HMOHFEY472BC.gfortran-win_amd64.dll
  warnings.warn("loaded more than 1 DLL from .libs:"

2022-09-05 20:45:51,285 [5660] INFO     numexpr.utils:141: [JupyterRequire] NumExpr defaulting to 8 threads.
2022-09-05 20:45:53,428 [5660] DEBUG    matplotlib:241: [JupyterRequire] (private) matplotlib data path: C:\Users\sasha\anaconda3\lib\site-packages\matplotlib\mpl-data
2022-09-05 20:45:53,428 [5660] DEBUG    matplotlib:241: [JupyterRequire] matplotlib data path: C:\Users\sasha\anaconda3\lib\site-packages\matplotlib\mpl-data
2022-09-05 20:45:53,433 [5660] DEBUG    matplotlib:241: [JupyterRequire] CONFIGDIR=C:\Users\sasha\.matplotlib
2022-09-05 20:45:53,435 [5660] DEBUG    matplotlib:1471: [JupyterRequire] matplotlib version 3.3.2
2022-09-05 20:45:53,436 [5660] DEBUG    matplotlib:1472: [JupyterRequire] interactive is False
2022-09-05 20:45:53,436 [5660] DEBUG    matplotlib:1473: [JupyterRequire] platform is win32
2022-09-05 20:45:53,436 [5660] DEBUG    matplotlib:1474: [JupyterRequire] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_warnings', '_frozen_importlib_external', '_io', 'marshal', 'nt', '_thread', '_weakref', 'winreg', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1251', '_signal', '__main__', 'encodings.latin_1', '_abc', 'abc', 'io', '_stat', 'stat', '_collections_abc', 'genericpath', 'ntpath', 'os.path', 'os', '_sitebuiltins', '_locale', '_bootlocale', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', 'importlib.abc', '_operator', 'operator', 'keyword', '_heapq', 'heapq', 'itertools', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'google', 'mpl_toolkits', 'sphinxcontrib', 'zope', 'site', '_weakrefset', 'weakref', 'pkgutil', 'runpy', 'ipykernel._version', '__future__', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'signal', 'threading', 'msvcrt', '_winapi', 'subprocess', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'atexit', 'copy', 'posixpath', 'fnmatch', 'glob', 'token', 'tokenize', 'linecache', 'traceback', 'collections.abc', '_string', 'string', 'logging', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_opcode', 'opcode', 'dis', 'inspect', 'typing.io', 'typing.re', 'typing', '_ast', 'ast', 'traitlets.utils', 'traitlets.utils.bunch', 'traitlets.utils.descriptions', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'traitlets.utils.sentinel', 'traitlets.traitlets', 'traitlets._version', 'traitlets.utils.decorators', 'traitlets', 'pprint', '_socket', 'math', 'select', 'selectors', 'socket', '_struct', 'struct', '_compat_pickle', '_pickle', 'pickle', '_queue', 'queue', 'logging.handlers', 'socketserver', 'logging.config', 'textwrap', 'traitlets.utils.text', 'locale', 'gettext', 'argparse', 'traitlets.config.loader', 'traitlets.config.configurable', 'traitlets.utils.nested_update', 'traitlets.config.application', 'traitlets.config', 'platform', 'sysconfig', 'urllib', 'urllib.parse', 'pydoc', 'bdb', 'IPython.utils', 'IPython.utils.ipstruct', 'IPython.utils.coloransi', 'pygments', 'IPython.utils.colorable', 'IPython.utils.PyColorize', 'IPython.utils.encoding', 'IPython.utils.py3compat', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'cmd', 'codeop', 'code', 'pdb', 'IPython.core.debugger', 'IPython.core.display_trap', '_bisect', 'bisect', '_sha512', '_random', 'random', '_ctypes', 'ctypes._endian', 'ctypes', 'ctypes.wintypes', 'shlex', 'IPython.utils._process_common', 'IPython.utils._process_win32', 'IPython.utils.process', 'IPython.utils.decorators', 'IPython.utils.path', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.core.ultratb', 'IPython.utils._sysinfo', 'IPython.utils.sysinfo', 'IPython.core.crashhandler', 'tempfile', 'IPython.utils.importstring', 'IPython.paths', 'IPython.core.profiledir', 'IPython.core.application', 'IPython.terminal', '_hashlib', '_blake2', '_sha3', 'hashlib', 'IPython.core.compilerop', 'IPython.core.error', 'pathlib', 'IPython.utils.text', 'IPython.core.magic_arguments', 'getopt', 'binascii', 'mimetypes', 'IPython.core.display', 'IPython.core.page', 'getpass', 'IPython.lib.security', 'IPython.lib', '_datetime', 'datetime', 'IPython.lib.pretty', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers', 'pygments.filter', 'pygments.token', 'pygments.filters', 'pygments.regexopt', 'pygments.lexer', 'pygments.unistring', 'pygments.lexers.python', 'pygments.formatters._mapping', 'pygments.formatters', 'pygments.styles', 'pygments.formatter', 'pygments.formatters.html', 'IPython.core.oinspect', 'IPython.core.inputtransformer2', 'decorator', 'IPython.core.magic', 'pickleshare', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.prefilter', 'IPython.core.alias', 'IPython.core.builtin_trap', 'backcall.backcall', 'backcall', 'IPython.core.events', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.utils.sentinel', 'IPython.core.formatters', '_sqlite3', 'sqlite3.dbapi2', 'sqlite3', 'IPython.core.history', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'html.entities', 'html', 'IPython.lib.display', 'IPython.display', 'IPython.utils.capture', 'IPython.utils.io', 'IPython.core.hooks', 'IPython.utils.strdispatch', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.core.interactiveshell', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_ssl', 'base64', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop.utils', 'prompt_toolkit.eventloop.async_generator', 'wcwidth.table_wide', 'wcwidth.table_zero', 'wcwidth.unicode_versions', 'wcwidth.wcwidth', 'wcwidth', 'prompt_toolkit.utils', 'prompt_toolkit.eventloop.inputhook', 'prompt_toolkit.eventloop', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.clipboard', 'prompt_toolkit.cache', 'prompt_toolkit.enums', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.app', 'prompt_toolkit.filters.cli', 'prompt_toolkit.filters.utils', 'prompt_toolkit.filters', 'prompt_toolkit.document', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.data_structures', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.pygments', 'colorsys', 'prompt_toolkit.styles.style_transformation', 'prompt_toolkit.styles', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.base', 'prompt_toolkit.patch_stdout', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output', 'array', 'prompt_toolkit.output.vt100', 'prompt_toolkit.mouse_events', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.formatted_text.ansi', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', 'prompt_toolkit.formatted_text.html', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.formatted_text', 'prompt_toolkit.completion.base', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.completion.nested', 'prompt_toolkit.completion', 'prompt_toolkit.history', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.search', 'prompt_toolkit.validation', 'prompt_toolkit.buffer', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.lexers', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.controls', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.layout.screen', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.layout', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.renderer', 'prompt_toolkit.application.application', 'prompt_toolkit.application.dummy', 'prompt_toolkit.application', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.widgets', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.shortcuts', 'prompt_toolkit', 'pygments.style', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'parso._compatibility', 'parso.utils', 'parso.tree', 'parso.python', 'parso.python.token', 'parso.python.tokenize', 'parso.pgen2.grammar_parser', 'parso.pgen2.generator', 'parso.pgen2', 'parso.parser', 'difflib', 'parso.python.prefix', 'parso.python.tree', 'parso.python.parser', 'parso.python.diff', 'gc', 'parso.cache', 'parso.normalizer', 'parso.python.errors', 'parso.python.pep8', 'parso.file_io', 'parso.grammar', 'parso', 'jedi.file_io', 'jedi._compatibility', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.inference.cache', 'jedi.inference.helpers', 'jedi.inference.utils', 'jedi.inference.base_value', 'jedi.common', 'jedi.inference.sys_path', 'jedi.inference.recursion', 'jedi.inference.flow_analysis', 'jedi.inference.lazy_value', 'jedi.inference.docstrings', 'jedi.plugins', 'jedi.inference.names', 'jedi.inference.filters', 'jedi.inference.compiled.getattr_static', 'jedi.inference.compiled.access', 'jedi.inference.signature', 'jedi.inference.context', 'jedi.inference.compiled.value', 'jedi.inference.compiled', 'jedi.inference.analysis', 'jedi.inference.gradual', 'jedi.inference.value.module', 'jedi.inference.value.dynamic_arrays', 'jedi.inference.value.iterable', 'jedi.inference.arguments', 'jedi.inference.parser_cache', 'jedi.inference.gradual.generics', 'jedi.inference.value.function', 'jedi.inference.value.klass', 'jedi.inference.value.instance', 'jedi.inference.value', 'jedi.inference.gradual.base', 'jedi.inference.gradual.type_var', 'jedi.inference.gradual.typing', 'jedi.inference.gradual.stub_value', 'jedi.inference.gradual.typeshed', 'jedi.inference.imports', 'jedi.inference.param', 'jedi.inference.gradual.annotation', 'jedi.inference.value.decorator', 'jedi.inference.syntax_tree', 'jedi.inference', 'jedi.inference.gradual.conversion', 'jedi.inference.compiled.mixed', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.keywords', 'jedi.api.completion_cache', 'jedi.api.helpers', 'jedi.api.classes', 'jedi.api.interpreter', 'jedi.api.strings', 'jedi.api.file_name', 'jedi.api.completion', 'filecmp', 'jedi.inference.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.inference.compiled.subprocess', 'jedi.api.environment', 'jedi.inference.references', 'jedi.api.project', 'jedi.api.errors', 'jedi.api.refactoring', 'jedi.api.refactoring.extract', 'jedi.inference.gradual.utils', 'jedi.api', 'jedi.plugins.stdlib', 'jedi.plugins.flask', 'jedi.plugins.pytest', 'jedi.plugins.django', 'jedi.plugins.registry', 'jedi', 'IPython.core.completer', 'IPython.terminal.ptutils', 'IPython.lib.clipboard', 'IPython.terminal.shortcuts', 'IPython.terminal.debugger', 'IPython.terminal.magics', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.interactiveshell', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'email', 'http', 'email.errors', 'email.quoprimime', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', 'http.client', 'urllib.response', 'urllib.error', 'nturl2path', 'urllib.request', 'IPython.core.magics.code', 'IPython.core.magics.config', 'IPython.core.magics.display', 'timeit', '_lsprof', 'profile', 'cProfile', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.execution', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.pylabtools', 'IPython.core.magics.pylab', 'IPython.lib.backgroundjobs', 'IPython.core.magics.script', 'IPython.core.magics', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.terminal.ipapp', 'IPython.terminal.embed', 'IPython.utils.frame', 'IPython', 'ipython_genutils._version', 'ipython_genutils', 'ipython_genutils.encoding', 'ipython_genutils.py3compat', 'ipython_genutils.path', 'jupyter_client._version', 'zmq.backend.select', 'cython_runtime', 'zmq.backend.cython.constants', '_cython_0_29_21', 'zmq.backend.cython.error', 'zmq.error', 'zmq.backend.cython.message', 'zmq.backend.cython.context', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.backend.cython', 'zmq.backend', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.constants', 'zmq.sugar.attrsettr', 'zmq.sugar.poll', 'zmq.utils.strtypes', 'zmq.utils.jsonapi', 'zmq.sugar.socket', 'zmq.sugar.context', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'zmq.sugar', 'zmq', 'jupyter_client.localinterfaces', 'jupyter_core.version', 'jupyter_core', 'distutils', 'distutils.errors', 'distutils.dep_util', 'distutils.debug', 'distutils.log', 'distutils.spawn', 'distutils.util', 'jupyter_core.paths', 'jupyter_client.connect', 'traitlets.log', 'jupyter_client.launcher', 'jupyter_client.channelsabc', 'jupyter_client.channels', 'jupyter_client.clientabc', 'jupyter_client.client', 'ipython_genutils.importstring', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.manager', 'jupyter_client.blocking.channels', 'jupyter_client.blocking.client', 'jupyter_client.blocking', 'zmq._future', 'zmq.asyncio', 'jupyter_client.asynchronous.channels', 'jupyter_client.asynchronous.client', 'jupyter_client.asynchronous', 'uuid', 'jupyter_client.multikernelmanager', 'jupyter_client', 'ipykernel.connect', 'ipykernel', 'tornado', 'numbers', 'tornado.speedups', 'tornado.util', 'tornado.escape', 'colorama.ansi', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'tornado.log', 'tornado.concurrent', 'tornado.ioloop', 'tornado.platform', 'tornado.gen', 'tornado.platform.asyncio', 'zmq.eventloop.ioloop', 'zmq.eventloop', 'zmq.eventloop.zmqstream', 'imp', 'hmac', 'dateutil._version', 'dateutil', 'six', '_decimal', 'decimal', 'dateutil._common', 'dateutil.relativedelta', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', '_strptime', 'jupyter_client.jsonutil', 'jupyter_client.adapter', 'jupyter_client.session', 'ipykernel.iostream', 'ipykernel.heartbeat', 'IPython.utils.tokenutil', 'tornado.locks', 'tornado.queues', 'ipykernel.jsonutil', 'ipykernel.kernelbase', 'ipykernel.comm.comm', 'ipykernel.comm.manager', 'ipykernel.comm', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.zmqshell', 'distutils.version', 'ipykernel.eventloops', 'ipykernel.ipkernel', 'ipykernel.parentpoller', 'ipykernel.kernelapp', 'win32api', 'win32security', 'ntsecuritycon', 'faulthandler', 'ipykernel.codeutil', 'ipykernel.pickleutil', 'ipykernel.serialize', 'ipykernel.datapub', 'IPython.core.completerlib', 'storemagic', 'configparser', 'isort.stdlibs.py27', 'isort.stdlibs.py2', 'isort.stdlibs.py35', 'isort.stdlibs.py36', 'isort.stdlibs.py37', 'isort.stdlibs.py38', 'isort.stdlibs.py39', 'isort.stdlibs.py3', 'isort.stdlibs.all', 'isort.stdlibs', 'dataclasses', 'isort._future', 'isort._vendored', 'isort._vendored.toml.tz', 'isort._vendored.toml.decoder', 'isort._vendored.toml.encoder', 'isort._vendored.toml', 'isort.profiles', 'isort.exceptions', 'isort.sections', 'isort.comments', 'isort.wrap_modes', 'isort.settings', 'isort._version', 'isort.literal', 'isort.format', 'isort.utils', 'isort.place', 'isort.deprecated', 'isort.deprecated.finders', 'isort.parse', 'isort.sorting', 'isort.wrap', 'isort.output', 'isort.core', 'isort.io', 'isort.api', 'isort', 'toml.tz', 'toml.decoder', 'toml.encoder', 'toml', 'optparse', 'pycodestyle', 'autopep8', 'pythonjsonlogger', 'pythonjsonlogger.jsonlogger', 'daiquiri.formatter', 'daiquiri.handlers', 'daiquiri.output', 'daiquiri', 'jupyter_require.__about__', 'csscompressor', 'jupyter_require.core', 'jupyter_require.notebook', 'jupyter_nbutils.__about__', 'jupyter_nbutils.config', 'jupyter_nbutils.utils', 'jupyter_nbutils', 'jupyter_require.magic', 'jupyter_require', 'numpy._globals', 'numpy.__config__', 'numpy._distributor_init', 'numpy._version', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core._machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', '_cython_0_29_24', 'numpy.random._common', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pytz', 'mmap', 'pandas._typing', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.nattype', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.tzconversion', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.timestamps', 'dateutil.easter', 'pandas._libs.properties', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.tslibs', 'pandas._libs.ops_dispatch', 'pandas._libs.missing', 'pandas._libs.hashtable', 'pandas._libs.algos', 'pandas._libs.interval', 'pandas._libs', 'pandas.util._decorators', 'pandas.core', 'pandas.core.util', 'pandas._libs.tslib', 'pandas._libs.lib', 'pandas._libs.hashing', 'pandas.core.dtypes', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.common', 'pandas.core.util.hashing', 'pandas.util', 'pandas.util.version', 'pandas.compat.numpy', 'pyarrow._generated_version', 'cloudpickle.compat', 'typing_extensions', 'cloudpickle.cloudpickle', 'cloudpickle.cloudpickle_fast', 'cloudpickle', 'pyarrow.util', 'pyarrow.lib', 'pyarrow.filesystem', 'pyarrow.hdfs', 'pyarrow.ipc', 'pyarrow.serialization', 'pyarrow.types', 'pyarrow', 'pandas.compat.pyarrow', 'pandas.compat', 'pandas.core.config_init', 'pandas.core.dtypes.missing', 'pandas.util._exceptions', 'pandas.util._validators', 'pandas.core.dtypes.cast', 'pandas.core.array_algos', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.array_algos.take', 'pandas.core.indexers', 'pandas.core.algorithms', 'pandas.compat.numpy.function', 'pandas.compat._optional', 'pandas.core.missing', 'pandas.core.roperator', 'pandas._libs.ops', 'pandas.core.computation', 'numexpr.__config__', 'numexpr.interpreter', 'numexpr.expressions', 'numexpr.utils', 'numexpr.necompiler', 'numexpr.version', 'numexpr', 'pandas.core.computation.check', 'pandas.core.computation.expressions', 'pandas.core.ops.missing', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.array_ops', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.ops', 'pandas.core.sorting', 'pandas.core.arrays.base', 'bottleneck.reduce', 'bottleneck.nonreduce', 'bottleneck.nonreduce_axis', 'bottleneck.move', 'bottleneck.slow.reduce', 'bottleneck.slow.nonreduce', 'bottleneck.slow.nonreduce_axis', 'bottleneck.slow.move', 'bottleneck.slow', 'bottleneck.benchmark', 'bottleneck.benchmark.autotimeit', 'bottleneck.benchmark.bench', 'bottleneck.benchmark.bench_detailed', 'bottleneck.tests', 'bottleneck.tests.util', 'bottleneck._pytesttester', 'bottleneck._version', 'bottleneck', 'pandas.core.nanops', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arraylike', 'pandas.core.arrays.masked', 'pandas.core.arrays.boolean', '_csv', 'csv', 'pandas._libs.arrays', 'pandas.core.accessor', 'pandas.core.array_algos.transforms', 'pandas.core.arrays._mixins', 'pandas.core.base', 'pandas.core.strings.accessor', 'pandas.core.strings.base', 'pandas.core.strings', 'pandas.core.strings.object_array', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.categorical', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays.datetimelike', 'pandas.core.arrays._ranges', 'pandas.core.arrays.numeric', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.integer', 'pandas.tseries.offsets', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.floating', 'pandas.core.indexes', 'pandas._libs.index', 'pandas._libs.join', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.arrays.sparse.array', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse', 'pandas.core.dtypes.concat', 'pandas.core.array_algos.putmask', 'pandas.core.indexes.frozen', 'pandas.core.indexes.base', 'pandas.core.arrays.interval', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pyarrow._compute', 'pyarrow.compute', 'pandas.core.arrays.string_arrow', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays', 'pandas.core.flags', 'pandas._libs.reduction', 'pandas.core.indexes.extension', 'pandas.core.indexes.category', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.times', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.interval', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexes.api', 'pandas.core.aggregation', 'pandas.core.apply', 'pandas._libs.indexing', 'pandas.core.indexing', 'pandas.core.reshape', 'pandas._libs.internals', 'pandas._libs.writers', 'pandas.core.array_algos.quantile', 'pandas.core.array_algos.replace', 'pandas.core.internals.blocks', 'pandas.core.internals.api', 'pandas.core.internals.base', 'pandas.core.internals.array_manager', 'pandas.core.internals.ops', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.core.internals', 'pandas.core.reshape.concat', 'gzip', 'zipfile', 'pandas.io.common', 'pandas.io.formats.format', 'pandas.core.describe', 'pandas.core.internals.construction', 'pandas.core.shared_docs', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.util.numba_', 'pandas.core.window.common', 'pandas.core.window.doc', 'pandas._libs.window.indexers', 'pandas.core.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.online', 'pandas.core.window.rolling', 'pandas.core.window.ewm', 'pandas.core.window.expanding', 'pandas.core.window', 'pandas.core.generic', 'pandas.core.reshape.util', 'pandas.core.reshape.melt', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.arrays', 'pandas.core.tools.datetimes', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.plotting', 'pandas.core.series', 'pandas.io.formats.info', 'pandas.core.frame', 'pandas.core.groupby.base', 'pandas._libs.groupby', 'pandas.core.groupby.numba_', 'pandas.core.groupby.categorical', 'pandas.core.groupby.grouper', 'pandas.core.groupby.ops', 'pandas.core.groupby.groupby', 'pandas.core.groupby.generic', 'pandas.core.groupby', 'pandas.core.api', 'pandas.tseries.api', 'pandas.core.computation.common', 'pandas.core.computation.align', 'pandas.compat.chainmap', 'pandas.core.computation.scope', 'pandas.core.computation.ops', 'pandas.core.computation.parsing', 'pandas.core.computation.expr', 'pandas.core.computation.engines', 'pandas.core.computation.eval', 'pandas.core.computation.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.core.reshape.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.core.dtypes.api', 'pandas.api.types', 'pandas.api', 'pandas.util._print_versions', 'pandas.io.clipboards', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.date_converters', 'pandas.io.parsers.base_parser', 'pandas.io.parsers.c_parser_wrapper', 'pandas.io.parsers.python_parser', 'pandas.io.parsers.readers', 'pandas.io.parsers', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlrd', 'pandas.io.excel._base', 'pandas._libs.json', 'pandas.io.formats._color_data', 'pandas.io.formats.css', 'pandas.io.formats.excel', 'pandas.io.excel._odswriter', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.excel', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.json._json', 'pandas.io.json', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.compat.pickle_compat', 'pandas.io.pickle', 'pandas.core.computation.pytables', 'pandas.io.pytables', 'pandas.io.sas.sasreader', 'pandas.io.sas', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.io.xml', 'pandas.io.api', 'pandas.util._tester', 'pandas._testing._random', 'pandas._testing.contexts', 'pandas._testing._io', 'pandas._testing._warnings', 'cmath', 'pandas._libs.testing', 'pandas._testing.asserters', 'pandas._testing.compat', 'pandas._testing', 'pandas.testing', 'pandas._version', 'pandas', 'pywt._extensions', 'pywt._extensions._dwt', 'pywt._extensions._cwt', 'pywt._extensions._pywt', 'pywt._functions', 'pywt._c99_config', 'pywt._utils', 'pywt._dwt', 'pywt._multidim', 'pywt._multilevel', 'pywt._thresholding', 'pywt._wavelet_packets', 'pywt._extensions._swt', 'pywt._swt', 'scipy._lib._testutils', 'scipy._lib', 'scipy._lib.deprecation', 'scipy.__config__', 'scipy.version', 'scipy._distributor_init', 'scipy._lib._pep440', 'scipy._lib._ccallback_c', 'scipy._lib._ccallback', 'scipy', 'scipy._lib._uarray._uarray', 'scipy._lib._uarray._backend', 'scipy._lib._uarray', 'scipy._lib.uarray', 'scipy.fft._basic', 'scipy.fft._realtransforms', 'scipy.special._sf_error', '_cython_0_29_25', 'scipy.special._ufuncs_cxx', 'scipy.special._ufuncs', 'scipy.special._specfun', 'scipy.linalg._fblas', 'scipy.linalg.blas', 'scipy.linalg._flapack', 'scipy._lib._util', 'scipy.linalg.lapack', 'scipy.linalg._misc', 'scipy.linalg._cythonized_array_utils', 'scipy.linalg._flinalg', 'scipy.linalg._flinalg_py', 'scipy.linalg._decomp', 'scipy.linalg._decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg._basic', 'scipy.linalg._decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg._decomp_cholesky', 'scipy.linalg._decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg._decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg._special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm_triu', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg._matfuncs', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._decomp_update', 'scipy.sparse._sputils', 'scipy.sparse._base', 'scipy.sparse._sparsetools', 'scipy.sparse._data', 'scipy.sparse._index', 'scipy.sparse._compressed', 'scipy.sparse._csr', 'scipy.sparse._csc', 'scipy.sparse._csparsetools', 'scipy.sparse._lil', 'scipy.sparse._dok', 'scipy.sparse._coo', 'scipy.sparse._dia', 'scipy.sparse._bsr', 'scipy.sparse._construct', 'scipy.sparse._extract', 'scipy.sparse._matrix_io', 'scipy.sparse._arrays', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'scipy.sparse.csgraph', 'scipy.sparse.base', 'scipy.sparse.bsr', 'scipy.sparse.compressed', 'scipy.sparse.construct', 'scipy.sparse.coo', 'scipy.sparse.csc', 'scipy.sparse.csr', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse.dok', 'scipy.sparse.extract', 'scipy.sparse.lil', 'scipy.sparse.sparsetools', 'scipy.sparse.sputils', 'scipy.sparse', 'scipy.linalg._sketches', 'scipy.linalg._decomp_cossin', 'scipy.linalg.decomp', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_lu', 'scipy.linalg.decomp_qr', 'scipy.linalg.decomp_svd', 'scipy.linalg.decomp_schur', 'scipy.linalg.basic', 'scipy.linalg.misc', 'scipy.linalg.special_matrices', 'scipy.linalg.flinalg', 'scipy.linalg.matfuncs', 'scipy.linalg', 'scipy.special._orthogonal', 'scipy.special._comb', 'scipy.special._basic', 'scipy.special._logsumexp', 'scipy.special._spfun_stats', 'scipy.special._ellip_harm_2', 'scipy.special._ellip_harm', 'scipy.special._lambertw', 'scipy.special._spherical_bessel', 'scipy.special._add_newdocs', 'scipy.special.add_newdocs', 'scipy.special.basic', 'scipy.special.orthogonal', 'scipy.special.specfun', 'scipy.special.sf_error', 'scipy.special.spfun_stats', 'scipy.special', 'scipy.fft._fftlog', 'scipy.fft._pocketfft.pypocketfft', 'scipy.fft._pocketfft.helper', 'scipy.fft._pocketfft.basic', 'scipy.fft._pocketfft.realtransforms', 'scipy.fft._pocketfft', 'scipy.fft._helper', 'scipy.fft._backend', 'scipy.fft', 'pywt._cwt', 'pywt.data._readers', 'pywt.data._wavelab_signals', 'pywt.data', 'pywt.version', 'pywt._pytesttester', 'pywt', 'matplotlib', 'matplotlib.cbook.deprecation', 'matplotlib.cbook', 'matplotlib._animation_data', 'matplotlib.animation', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib.docstring', 'matplotlib._color_data', 'matplotlib.colors', 'cycler', 'matplotlib.rcsetup', 'matplotlib._version', 'matplotlib.ft2font', 'kiwisolver']
2022-09-05 20:45:53,579 [5660] DEBUG    matplotlib:241: [JupyterRequire] CACHEDIR=C:\Users\sasha\.matplotlib
2022-09-05 20:45:53,583 [5660] DEBUG    matplotlib.font_manager:1436: [JupyterRequire] Using fontManager instance from C:\Users\sasha\.matplotlib\fontlist-v330.json
2022-09-05 20:45:53,959 [5660] DEBUG    matplotlib.pyplot:289: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2022-09-05 20:45:53,962 [5660] DEBUG    matplotlib.pyplot:289: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2022-09-05 20:45:55,244 [5660] DEBUG    matplotlib.font_manager:1334: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2022-09-05 20:45:55,245 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:55,245 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,245 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,245 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,245 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,246 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,246 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,246 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,246 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:55,246 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:55,246 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:55,247 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,247 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,247 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-09-05 20:45:55,247 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:55,247 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:55,247 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,247 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:55,248 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,248 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:55,248 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:55,248 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,248 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-09-05 20:45:55,248 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:55,249 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,249 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:55,249 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:55,249 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,249 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,250 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-09-05 20:45:55,252 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-09-05 20:45:55,253 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,255 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:55,258 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,259 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:55,261 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-09-05 20:45:55,262 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,264 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-09-05 20:45:55,265 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,267 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:55,268 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
2022-09-05 20:45:55,270 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:55,270 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:55,270 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,271 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,271 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
2022-09-05 20:45:55,271 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
2022-09-05 20:45:55,271 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,272 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2022-09-05 20:45:55,273 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,274 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,275 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,275 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:55,275 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Book Basic' (GenBkBasB.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:55,275 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2022-09-05 20:45:55,275 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:55,276 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
2022-09-05 20:45:55,276 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:55,276 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:55,276 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:55,276 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,277 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,277 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,278 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:55,278 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Bold.ttf) normal normal 700 condensed>) = 10.535
2022-09-05 20:45:55,279 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,279 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
2022-09-05 20:45:55,279 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2022-09-05 20:45:55,280 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:55,281 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,283 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:55,286 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
2022-09-05 20:45:55,289 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,291 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:55,293 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:55,293 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,293 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:55,293 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:55,294 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,294 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:55,294 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:55,294 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Book Basic' (GenBkBasR.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,294 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2022-09-05 20:45:55,294 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:55,295 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:55,295 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,295 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2022-09-05 20:45:55,295 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,295 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,295 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,295 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,296 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,296 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:55,296 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
2022-09-05 20:45:55,296 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Basic' (GenBasI.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:55,296 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:55,296 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,297 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,297 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:55,297 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,297 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Basic' (GenBasI.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:55,297 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2022-09-05 20:45:55,297 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,298 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Bold.ttf) normal normal 700 condensed>) = 10.535
2022-09-05 20:45:55,298 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:55,298 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-BoldOblique.ttf) oblique normal 700 condensed>) = 1.535
2022-09-05 20:45:55,298 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,298 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:55,298 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:55,299 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:55,299 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-09-05 20:45:55,300 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,301 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
2022-09-05 20:45:55,303 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,303 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
2022-09-05 20:45:55,303 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,304 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-ExtraLight.ttf) normal normal 200 normal>) = 0.24
2022-09-05 20:45:55,304 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Basic' (GenBasBI.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:55,304 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Basic' (GenBasB.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:55,304 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,304 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,305 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
2022-09-05 20:45:55,305 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:55,305 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,306 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2022-09-05 20:45:55,306 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,306 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:55,307 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,307 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2022-09-05 20:45:55,307 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:55,307 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,308 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
2022-09-05 20:45:55,308 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
2022-09-05 20:45:55,308 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,308 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-09-05 20:45:55,308 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,308 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:55,309 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,309 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:55,309 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
2022-09-05 20:45:55,309 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,309 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2022-09-05 20:45:55,309 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,310 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Oblique.ttf) oblique normal 400 condensed>) = 1.25
2022-09-05 20:45:55,310 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,310 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,310 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:55,310 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,310 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Bold.ttf) normal normal 700 condensed>) = 0.5349999999999999
2022-09-05 20:45:55,310 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arimo' (Arimo-Italic.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:55,311 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:55,311 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,311 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
2022-09-05 20:45:55,311 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2022-09-05 20:45:55,311 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,311 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,312 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:55,312 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,312 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,312 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:55,312 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:55,312 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
2022-09-05 20:45:55,312 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,313 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:55,313 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:55,313 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:55,314 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:55,314 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2022-09-05 20:45:55,314 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:55,314 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2022-09-05 20:45:55,314 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2022-09-05 20:45:55,314 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arimo' (Arimo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,314 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Bold.ttf) normal normal 700 condensed>) = 0.5349999999999999
2022-09-05 20:45:55,314 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
2022-09-05 20:45:55,314 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeamViewer15' (teamviewer15.otf) normal normal 500 normal>) = 10.145
2022-09-05 20:45:55,314 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:55,315 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,315 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:55,315 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arimo' (Arimo-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:55,315 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:55,315 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:55,315 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
2022-09-05 20:45:55,316 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed.ttf) normal normal 400 condensed>) = 0.25
2022-09-05 20:45:55,316 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:55,316 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,316 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,316 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,316 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
2022-09-05 20:45:55,316 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-09-05 20:45:55,317 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2022-09-05 20:45:55,317 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:55,317 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:55,317 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:55,318 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,318 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Book Basic' (GenBkBasBI.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:55,318 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,318 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:55,318 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,318 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-09-05 20:45:55,319 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,319 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
2022-09-05 20:45:55,319 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:55,319 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:55,320 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,320 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:55,321 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:55,321 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-09-05 20:45:55,322 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,322 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,322 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2022-09-05 20:45:55,322 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
2022-09-05 20:45:55,323 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,323 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:55,323 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
2022-09-05 20:45:55,324 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
2022-09-05 20:45:55,324 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,324 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,324 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,324 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:55,324 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:55,325 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:55,325 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
2022-09-05 20:45:55,325 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:55,325 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Oblique.ttf) oblique normal 400 condensed>) = 1.25
2022-09-05 20:45:55,325 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:55,325 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2022-09-05 20:45:55,326 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:55,326 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,326 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,326 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
2022-09-05 20:45:55,326 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2022-09-05 20:45:55,326 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,327 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:55,327 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:55,327 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
2022-09-05 20:45:55,327 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:55,327 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,328 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Book Basic' (GenBkBasI.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:55,328 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeamViewer15' (teamviewer15.otf) normal normal 500 normal>) = 10.145
2022-09-05 20:45:55,328 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2022-09-05 20:45:55,328 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed.ttf) normal normal 400 condensed>) = 10.25
2022-09-05 20:45:55,328 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
2022-09-05 20:45:55,329 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:55,329 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:55,329 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,329 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:55,329 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,329 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2022-09-05 20:45:55,330 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,330 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:55,330 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:55,330 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:55,330 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,331 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,331 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:55,331 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,331 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Basic' (GenBasB.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:55,332 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
2022-09-05 20:45:55,332 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-BoldOblique.ttf) oblique normal 700 condensed>) = 1.535
2022-09-05 20:45:55,333 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,333 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:55,333 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-09-05 20:45:55,333 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:55,334 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2022-09-05 20:45:55,334 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,334 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,334 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Italic.ttf) italic normal 400 condensed>) = 11.25
2022-09-05 20:45:55,335 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:55,335 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,335 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,335 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,336 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2022-09-05 20:45:55,336 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,336 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:55,336 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2022-09-05 20:45:55,337 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,337 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,337 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,337 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:55,337 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arimo' (Arimo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,338 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,338 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,338 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:55,338 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,339 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
2022-09-05 20:45:55,339 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,339 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,339 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:55,339 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,339 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:55,339 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2022-09-05 20:45:55,340 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,340 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:55,340 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,340 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,340 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
2022-09-05 20:45:55,340 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-09-05 20:45:55,340 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,341 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2022-09-05 20:45:55,341 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,341 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Book Basic' (GenBkBasB.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:55,341 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-09-05 20:45:55,341 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2022-09-05 20:45:55,341 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:55,341 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,342 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,342 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,342 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-09-05 20:45:55,342 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,342 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:55,342 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,343 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed.ttf) normal normal 400 condensed>) = 10.25
2022-09-05 20:45:55,343 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:55,343 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2022-09-05 20:45:55,343 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2022-09-05 20:45:55,343 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:55,343 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:55,343 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2022-09-05 20:45:55,344 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:55,344 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:55,344 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:55,344 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,344 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arimo' (Arimo-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:55,344 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:55,345 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:55,345 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-09-05 20:45:55,345 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Book Basic' (GenBkBasI.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:55,345 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,345 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:55,345 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:55,345 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
2022-09-05 20:45:55,346 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
2022-09-05 20:45:55,346 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Basic' (GenBasBI.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:55,346 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,346 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,346 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2022-09-05 20:45:55,346 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arimo' (Arimo-Bold.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:55,347 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:55,347 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2022-09-05 20:45:55,347 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:55,347 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-ExtraLight.ttf) normal normal 200 normal>) = 0.24
2022-09-05 20:45:55,347 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,347 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,347 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Book Basic' (GenBkBasBI.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:55,348 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
2022-09-05 20:45:55,348 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arimo' (Arimo-Italic.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:55,348 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:55,348 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2022-09-05 20:45:55,348 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,349 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2022-09-05 20:45:55,349 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:55,349 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:55,349 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
2022-09-05 20:45:55,349 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Italic.ttf) italic normal 400 condensed>) = 11.25
2022-09-05 20:45:55,349 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:55,350 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,350 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:55,350 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:55,350 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:55,351 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,351 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:55,351 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,351 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-09-05 20:45:55,351 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,351 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:55,352 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:55,352 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Basic' (GenBasR.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,352 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:55,352 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
2022-09-05 20:45:55,352 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:55,352 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:55,352 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,353 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,353 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2022-09-05 20:45:55,353 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:55,353 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:55,353 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,354 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2022-09-05 20:45:55,354 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,354 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
2022-09-05 20:45:55,354 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-09-05 20:45:55,354 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:55,354 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:55,354 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Basic' (GenBasR.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,355 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:55,355 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Book Basic' (GenBkBasR.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,355 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:55,355 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:55,356 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,356 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arimo' (Arimo-Bold.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:55,357 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,357 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed.ttf) normal normal 400 condensed>) = 0.25
2022-09-05 20:45:55,359 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2022-09-05 20:45:55,360 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2022-09-05 20:45:55,361 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2022-09-05 20:45:55,362 [5660] DEBUG    matplotlib.font_manager:1366: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\sasha\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2022-09-05 20:45:58,256 [5660] DEBUG    matplotlib.font_manager:1334: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0.
2022-09-05 20:45:58,257 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:58,257 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,257 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,257 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,258 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,258 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,258 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,258 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,259 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:58,259 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:58,259 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:58,259 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,260 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,260 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-09-05 20:45:58,260 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:58,260 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:58,260 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,261 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:58,261 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,261 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:58,261 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:58,261 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,261 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-09-05 20:45:58,262 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:58,262 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,262 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:58,262 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:58,263 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,263 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,263 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-09-05 20:45:58,264 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-09-05 20:45:58,264 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,265 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:58,265 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,265 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:58,266 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-09-05 20:45:58,266 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,266 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-09-05 20:45:58,266 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,267 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:58,267 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
2022-09-05 20:45:58,267 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:58,267 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:58,267 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,267 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,268 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
2022-09-05 20:45:58,268 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
2022-09-05 20:45:58,268 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,268 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2022-09-05 20:45:58,268 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,268 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,269 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,269 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:58,269 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Book Basic' (GenBkBasB.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:58,269 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2022-09-05 20:45:58,269 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:58,269 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
2022-09-05 20:45:58,270 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:58,270 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:58,270 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:58,270 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,270 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,271 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,271 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:58,271 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Bold.ttf) normal normal 700 condensed>) = 10.535
2022-09-05 20:45:58,271 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,271 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
2022-09-05 20:45:58,271 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2022-09-05 20:45:58,271 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:58,272 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,272 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:58,272 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
2022-09-05 20:45:58,272 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,272 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:58,272 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:58,272 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,273 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:58,273 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:58,273 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,273 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:58,273 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:58,273 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Book Basic' (GenBkBasR.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,273 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2022-09-05 20:45:58,274 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:58,274 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:58,274 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,274 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2022-09-05 20:45:58,274 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,274 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,275 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,275 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,275 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,275 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:58,275 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
2022-09-05 20:45:58,276 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Basic' (GenBasI.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:58,276 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:58,276 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,276 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,276 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:58,276 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,277 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Basic' (GenBasI.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:58,277 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2022-09-05 20:45:58,277 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,277 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Bold.ttf) normal normal 700 condensed>) = 10.535
2022-09-05 20:45:58,277 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:58,277 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-BoldOblique.ttf) oblique normal 700 condensed>) = 1.535
2022-09-05 20:45:58,278 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,278 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:58,278 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:58,278 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:58,278 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-09-05 20:45:58,278 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,278 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
2022-09-05 20:45:58,279 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,279 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
2022-09-05 20:45:58,279 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,279 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-ExtraLight.ttf) normal normal 200 normal>) = 0.24
2022-09-05 20:45:58,280 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Basic' (GenBasBI.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:58,280 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Basic' (GenBasB.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:58,281 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,283 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,286 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
2022-09-05 20:45:58,286 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:58,288 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,289 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2022-09-05 20:45:58,290 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,290 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:58,290 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,291 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2022-09-05 20:45:58,291 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:58,291 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,292 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
2022-09-05 20:45:58,292 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
2022-09-05 20:45:58,292 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,292 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-09-05 20:45:58,293 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,293 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:58,293 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,294 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:58,294 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
2022-09-05 20:45:58,294 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,295 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2022-09-05 20:45:58,297 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,298 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Oblique.ttf) oblique normal 400 condensed>) = 1.25
2022-09-05 20:45:58,299 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,299 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,299 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:58,300 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,300 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Bold.ttf) normal normal 700 condensed>) = 0.5349999999999999
2022-09-05 20:45:58,300 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arimo' (Arimo-Italic.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:58,300 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:58,300 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,300 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
2022-09-05 20:45:58,300 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2022-09-05 20:45:58,301 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,301 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,301 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:58,301 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,301 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,301 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:58,302 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:58,302 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
2022-09-05 20:45:58,302 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,302 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:58,302 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:58,302 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:58,302 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:58,303 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2022-09-05 20:45:58,303 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:58,303 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2022-09-05 20:45:58,303 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2022-09-05 20:45:58,303 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arimo' (Arimo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,303 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Bold.ttf) normal normal 700 condensed>) = 0.5349999999999999
2022-09-05 20:45:58,304 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
2022-09-05 20:45:58,304 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeamViewer15' (teamviewer15.otf) normal normal 500 normal>) = 10.145
2022-09-05 20:45:58,304 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:58,304 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,304 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:58,304 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arimo' (Arimo-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:58,304 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:58,305 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:58,305 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
2022-09-05 20:45:58,305 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed.ttf) normal normal 400 condensed>) = 0.25
2022-09-05 20:45:58,305 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:58,305 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,305 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,306 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,306 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
2022-09-05 20:45:58,306 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-09-05 20:45:58,306 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2022-09-05 20:45:58,306 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:58,306 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:58,306 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:58,307 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,307 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Book Basic' (GenBkBasBI.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:58,307 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,307 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:58,307 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,307 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-09-05 20:45:58,308 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,308 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
2022-09-05 20:45:58,308 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:58,308 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:58,308 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,308 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:58,308 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:58,309 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-09-05 20:45:58,309 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,309 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,309 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2022-09-05 20:45:58,309 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
2022-09-05 20:45:58,309 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,309 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:58,310 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
2022-09-05 20:45:58,310 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
2022-09-05 20:45:58,310 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,310 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,310 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,310 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:58,310 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:58,311 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:58,311 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
2022-09-05 20:45:58,311 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:58,311 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Oblique.ttf) oblique normal 400 condensed>) = 1.25
2022-09-05 20:45:58,311 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:58,311 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2022-09-05 20:45:58,312 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:58,312 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,312 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,312 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
2022-09-05 20:45:58,312 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2022-09-05 20:45:58,313 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,313 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:58,313 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:58,313 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
2022-09-05 20:45:58,314 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:58,314 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,314 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Book Basic' (GenBkBasI.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:58,314 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeamViewer15' (teamviewer15.otf) normal normal 500 normal>) = 10.145
2022-09-05 20:45:58,315 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2022-09-05 20:45:58,315 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed.ttf) normal normal 400 condensed>) = 10.25
2022-09-05 20:45:58,315 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
2022-09-05 20:45:58,315 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:58,315 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:58,315 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,316 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:58,316 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,316 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2022-09-05 20:45:58,316 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,316 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:58,316 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:58,317 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:58,317 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,317 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,317 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:58,318 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,318 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Basic' (GenBasB.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:58,318 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
2022-09-05 20:45:58,318 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-BoldOblique.ttf) oblique normal 700 condensed>) = 1.535
2022-09-05 20:45:58,319 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,319 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:58,320 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-09-05 20:45:58,320 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:58,320 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2022-09-05 20:45:58,321 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,321 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,321 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Italic.ttf) italic normal 400 condensed>) = 11.25
2022-09-05 20:45:58,321 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:58,322 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,322 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,322 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,322 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2022-09-05 20:45:58,323 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,323 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:58,324 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2022-09-05 20:45:58,325 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,325 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,325 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,326 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:58,326 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arimo' (Arimo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,326 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,326 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,327 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:58,327 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,327 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
2022-09-05 20:45:58,327 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,327 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,327 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:58,328 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,328 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:58,328 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2022-09-05 20:45:58,328 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,329 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:58,329 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,329 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,330 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
2022-09-05 20:45:58,330 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-09-05 20:45:58,330 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,333 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2022-09-05 20:45:58,336 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,336 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Book Basic' (GenBkBasB.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:58,337 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-09-05 20:45:58,337 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2022-09-05 20:45:58,338 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:58,339 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,340 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,341 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,341 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-09-05 20:45:58,341 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,342 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:58,342 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,342 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed.ttf) normal normal 400 condensed>) = 10.25
2022-09-05 20:45:58,342 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:58,342 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2022-09-05 20:45:58,342 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2022-09-05 20:45:58,343 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:58,343 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:58,343 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2022-09-05 20:45:58,343 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:58,343 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:58,344 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:58,344 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,344 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arimo' (Arimo-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:58,344 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:58,344 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:58,344 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-09-05 20:45:58,345 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Book Basic' (GenBkBasI.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:58,345 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,345 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:58,345 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:58,345 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
2022-09-05 20:45:58,346 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
2022-09-05 20:45:58,346 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Basic' (GenBasBI.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:58,346 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,346 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,347 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2022-09-05 20:45:58,348 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arimo' (Arimo-Bold.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:58,349 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:58,349 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2022-09-05 20:45:58,349 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:58,350 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-ExtraLight.ttf) normal normal 200 normal>) = 0.24
2022-09-05 20:45:58,350 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,350 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,350 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Book Basic' (GenBkBasBI.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:58,351 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
2022-09-05 20:45:58,351 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arimo' (Arimo-Italic.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:58,351 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:58,352 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2022-09-05 20:45:58,352 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,352 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2022-09-05 20:45:58,353 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:58,353 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:58,353 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
2022-09-05 20:45:58,354 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Italic.ttf) italic normal 400 condensed>) = 11.25
2022-09-05 20:45:58,354 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:58,354 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,354 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:58,355 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:58,355 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:58,355 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,356 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:58,356 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,356 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-09-05 20:45:58,357 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,357 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:58,357 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:58,358 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Basic' (GenBasR.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,358 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:58,358 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
2022-09-05 20:45:58,359 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:58,359 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:58,359 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,360 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,360 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2022-09-05 20:45:58,361 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:58,361 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:58,361 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,362 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2022-09-05 20:45:58,362 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,363 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
2022-09-05 20:45:58,363 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-09-05 20:45:58,364 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:58,364 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:58,364 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Basic' (GenBasR.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,366 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:58,369 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Book Basic' (GenBkBasR.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,370 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:58,371 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:58,372 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,373 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arimo' (Arimo-Bold.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:58,373 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,373 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed.ttf) normal normal 400 condensed>) = 0.25
2022-09-05 20:45:58,374 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2022-09-05 20:45:58,374 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2022-09-05 20:45:58,374 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2022-09-05 20:45:58,375 [5660] DEBUG    matplotlib.font_manager:1366: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0 to DejaVu Sans ('C:\\Users\\sasha\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2022-09-05 20:45:59,492 [5660] DEBUG    matplotlib.colorbar:600: [JupyterRequire] locator: <matplotlib.ticker.FixedLocator object at 0x00000185A6D30160>
2022-09-05 20:45:59,493 [5660] DEBUG    matplotlib.colorbar:649: [JupyterRequire] Using fixed locator on colorbar
2022-09-05 20:45:59,529 [5660] DEBUG    matplotlib.colorbar:799: [JupyterRequire] Setting pcolormesh
2022-09-05 20:45:59,587 [5660] DEBUG    matplotlib.font_manager:1334: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=20.0.
2022-09-05 20:45:59,588 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:59,588 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,588 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,590 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,591 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,591 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,591 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,591 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,591 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:59,592 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:59,592 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:59,592 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,592 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,592 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-09-05 20:45:59,592 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:59,593 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:59,593 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,593 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:59,593 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,593 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:59,593 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:59,594 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,594 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-09-05 20:45:59,594 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:59,595 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,596 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:59,597 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:59,602 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,604 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,604 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-09-05 20:45:59,605 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-09-05 20:45:59,605 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,605 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:59,605 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,605 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:59,606 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-09-05 20:45:59,606 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,606 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-09-05 20:45:59,606 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,606 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:59,606 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
2022-09-05 20:45:59,606 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:59,607 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:59,607 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,607 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,608 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
2022-09-05 20:45:59,608 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
2022-09-05 20:45:59,609 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,609 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2022-09-05 20:45:59,609 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,609 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,609 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,610 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:59,610 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Book Basic' (GenBkBasB.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:59,610 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2022-09-05 20:45:59,610 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:59,610 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
2022-09-05 20:45:59,610 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:59,611 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:59,612 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:59,612 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,613 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,613 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,613 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:59,614 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Bold.ttf) normal normal 700 condensed>) = 10.535
2022-09-05 20:45:59,616 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,619 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
2022-09-05 20:45:59,622 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2022-09-05 20:45:59,624 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:59,626 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,627 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:59,627 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
2022-09-05 20:45:59,628 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,630 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:59,630 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:59,632 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,633 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:59,635 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:59,636 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,638 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:59,640 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:59,641 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Book Basic' (GenBkBasR.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,641 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2022-09-05 20:45:59,641 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:59,641 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:59,641 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,642 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2022-09-05 20:45:59,642 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,642 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,642 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,643 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,643 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,645 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:59,649 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
2022-09-05 20:45:59,651 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Basic' (GenBasI.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:59,653 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:59,656 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,665 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,671 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:59,672 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,672 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Basic' (GenBasI.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:59,673 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2022-09-05 20:45:59,673 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,673 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Bold.ttf) normal normal 700 condensed>) = 10.535
2022-09-05 20:45:59,673 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:59,673 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-BoldOblique.ttf) oblique normal 700 condensed>) = 1.535
2022-09-05 20:45:59,674 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,674 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:59,674 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:59,674 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:59,675 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-09-05 20:45:59,675 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,675 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
2022-09-05 20:45:59,675 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,675 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
2022-09-05 20:45:59,675 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,676 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-ExtraLight.ttf) normal normal 200 normal>) = 0.24
2022-09-05 20:45:59,676 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Basic' (GenBasBI.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:59,676 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Basic' (GenBasB.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:59,677 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,677 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,677 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
2022-09-05 20:45:59,677 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:59,677 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,678 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2022-09-05 20:45:59,678 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,678 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:59,680 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,680 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2022-09-05 20:45:59,680 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:59,681 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,682 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
2022-09-05 20:45:59,684 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
2022-09-05 20:45:59,685 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,686 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-09-05 20:45:59,687 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,690 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:59,692 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,693 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:59,694 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
2022-09-05 20:45:59,694 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,695 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2022-09-05 20:45:59,696 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,698 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Oblique.ttf) oblique normal 400 condensed>) = 1.25
2022-09-05 20:45:59,701 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,703 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,704 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:59,704 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,705 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Bold.ttf) normal normal 700 condensed>) = 0.5349999999999999
2022-09-05 20:45:59,705 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arimo' (Arimo-Italic.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:59,705 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:59,706 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,707 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
2022-09-05 20:45:59,707 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2022-09-05 20:45:59,707 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,707 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,708 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:59,708 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,708 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,709 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:59,709 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:59,709 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
2022-09-05 20:45:59,709 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,709 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:59,709 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:59,710 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:59,710 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:59,710 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2022-09-05 20:45:59,710 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:59,710 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2022-09-05 20:45:59,711 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2022-09-05 20:45:59,711 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arimo' (Arimo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,711 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Bold.ttf) normal normal 700 condensed>) = 0.5349999999999999
2022-09-05 20:45:59,712 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
2022-09-05 20:45:59,713 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeamViewer15' (teamviewer15.otf) normal normal 500 normal>) = 10.145
2022-09-05 20:45:59,713 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:59,714 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,715 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:59,716 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arimo' (Arimo-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:59,717 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:59,722 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:59,723 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
2022-09-05 20:45:59,724 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed.ttf) normal normal 400 condensed>) = 0.25
2022-09-05 20:45:59,724 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:59,725 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,725 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,725 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,726 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
2022-09-05 20:45:59,726 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-09-05 20:45:59,726 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2022-09-05 20:45:59,726 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:59,726 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:59,727 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:59,727 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,727 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Book Basic' (GenBkBasBI.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:59,727 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,727 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:59,728 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,728 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-09-05 20:45:59,729 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,729 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
2022-09-05 20:45:59,729 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:59,730 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:59,732 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,733 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:59,735 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:59,738 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-09-05 20:45:59,739 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,739 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,740 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2022-09-05 20:45:59,741 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
2022-09-05 20:45:59,741 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,741 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:59,741 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
2022-09-05 20:45:59,742 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
2022-09-05 20:45:59,742 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,742 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,742 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,742 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:59,743 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:59,743 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:59,743 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
2022-09-05 20:45:59,743 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:59,743 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Oblique.ttf) oblique normal 400 condensed>) = 1.25
2022-09-05 20:45:59,744 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:59,744 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2022-09-05 20:45:59,744 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:59,744 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,744 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,745 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
2022-09-05 20:45:59,745 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2022-09-05 20:45:59,745 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,745 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:59,745 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:59,746 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
2022-09-05 20:45:59,746 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:59,746 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,746 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Book Basic' (GenBkBasI.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:59,746 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeamViewer15' (teamviewer15.otf) normal normal 500 normal>) = 10.145
2022-09-05 20:45:59,746 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2022-09-05 20:45:59,746 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed.ttf) normal normal 400 condensed>) = 10.25
2022-09-05 20:45:59,747 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
2022-09-05 20:45:59,747 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:59,747 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:59,747 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,747 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:59,747 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,747 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2022-09-05 20:45:59,748 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,748 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:59,748 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:59,748 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:59,748 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,748 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,748 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:59,749 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,749 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Basic' (GenBasB.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:59,749 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
2022-09-05 20:45:59,749 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-BoldOblique.ttf) oblique normal 700 condensed>) = 1.535
2022-09-05 20:45:59,749 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,749 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:59,749 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-09-05 20:45:59,750 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:59,750 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2022-09-05 20:45:59,750 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,750 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,750 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Italic.ttf) italic normal 400 condensed>) = 11.25
2022-09-05 20:45:59,750 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:59,750 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,751 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,751 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,751 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2022-09-05 20:45:59,751 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,751 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:59,751 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2022-09-05 20:45:59,752 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,752 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,752 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,752 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:59,752 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arimo' (Arimo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,752 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,752 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,753 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:59,753 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,753 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
2022-09-05 20:45:59,753 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,753 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,753 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:59,753 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,754 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:59,754 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2022-09-05 20:45:59,754 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,754 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:59,754 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,754 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,754 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
2022-09-05 20:45:59,754 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-09-05 20:45:59,755 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,755 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2022-09-05 20:45:59,755 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,755 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Book Basic' (GenBkBasB.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:59,755 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-09-05 20:45:59,755 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2022-09-05 20:45:59,755 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:59,756 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,756 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,756 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,756 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-09-05 20:45:59,756 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,756 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:59,756 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,757 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed.ttf) normal normal 400 condensed>) = 10.25
2022-09-05 20:45:59,757 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:59,757 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2022-09-05 20:45:59,758 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2022-09-05 20:45:59,758 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:59,758 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:59,759 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2022-09-05 20:45:59,759 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:59,759 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:59,760 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:59,760 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,760 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arimo' (Arimo-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:59,761 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:59,761 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:59,763 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-09-05 20:45:59,763 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Book Basic' (GenBkBasI.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:59,763 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,764 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:59,764 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:59,764 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
2022-09-05 20:45:59,764 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
2022-09-05 20:45:59,765 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Basic' (GenBasBI.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:59,765 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,765 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,765 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2022-09-05 20:45:59,765 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arimo' (Arimo-Bold.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:59,766 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:59,766 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2022-09-05 20:45:59,766 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:59,766 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-ExtraLight.ttf) normal normal 200 normal>) = 0.24
2022-09-05 20:45:59,766 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,766 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,767 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Book Basic' (GenBkBasBI.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:59,767 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
2022-09-05 20:45:59,767 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arimo' (Arimo-Italic.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:59,767 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:59,767 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2022-09-05 20:45:59,767 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,768 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2022-09-05 20:45:59,768 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:59,768 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:59,768 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
2022-09-05 20:45:59,768 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Italic.ttf) italic normal 400 condensed>) = 11.25
2022-09-05 20:45:59,768 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:59,768 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,769 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:59,769 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:59,769 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:59,769 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,769 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:59,770 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,770 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-09-05 20:45:59,770 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,771 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:59,771 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:59,771 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Basic' (GenBasR.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,771 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 20:45:59,772 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
2022-09-05 20:45:59,772 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:59,772 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:59,772 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,772 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,772 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2022-09-05 20:45:59,772 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:59,773 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:59,773 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,773 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2022-09-05 20:45:59,773 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,773 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
2022-09-05 20:45:59,773 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-09-05 20:45:59,773 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:59,774 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:59,774 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Basic' (GenBasR.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,774 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:59,774 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Book Basic' (GenBkBasR.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,774 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2022-09-05 20:45:59,774 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:59,774 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,775 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arimo' (Arimo-Bold.ttf) normal normal 700 normal>) = 10.335
2022-09-05 20:45:59,775 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,775 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed.ttf) normal normal 400 condensed>) = 0.25
2022-09-05 20:45:59,775 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2022-09-05 20:45:59,775 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2022-09-05 20:45:59,775 [5660] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2022-09-05 20:45:59,776 [5660] DEBUG    matplotlib.font_manager:1366: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=20.0 to DejaVu Sans ('C:\\Users\\sasha\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2022-09-05 20:57:06,064 [2084] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2022-09-05 20:57:06,065 [2084] DEBUG    root:93: [JupyterRequire] Initializing comms.
2022-09-05 20:57:06,066 [2084] INFO     root:247: [JupyterRequire] Initializing comms.
2022-09-05 20:57:06,089 [2084] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2022-09-05 20:57:06,090 [2084] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2022-09-05 20:57:06,091 [2084] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2022-09-05 20:57:06,717 [2084] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2022-09-05 20:57:06,717 [2084] DEBUG    root:93: [JupyterRequire] Initializing comms.
2022-09-05 20:57:06,717 [2084] INFO     root:247: [JupyterRequire] Initializing comms.
2022-09-05 20:57:06,719 [2084] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2022-09-05 20:57:06,719 [2084] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2022-09-05 20:57:06,720 [2084] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2022-09-05 21:01:58,709 [23744] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2022-09-05 21:01:58,710 [23744] DEBUG    root:93: [JupyterRequire] Initializing comms.
2022-09-05 21:01:58,710 [23744] INFO     root:247: [JupyterRequire] Initializing comms.
2022-09-05 21:01:58,766 [23744] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2022-09-05 21:01:58,766 [23744] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2022-09-05 21:01:58,767 [23744] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2022-09-05 21:01:59,321 [23744] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2022-09-05 21:01:59,322 [23744] DEBUG    root:93: [JupyterRequire] Initializing comms.
2022-09-05 21:01:59,322 [23744] INFO     root:247: [JupyterRequire] Initializing comms.
2022-09-05 21:01:59,325 [23744] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2022-09-05 21:01:59,326 [23744] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2022-09-05 21:01:59,327 [23744] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2022-09-05 21:03:31,710 [23744] INFO     numexpr.utils:141: [JupyterRequire] NumExpr defaulting to 8 threads.
2022-09-05 21:03:41,068 [23744] DEBUG    matplotlib:241: [JupyterRequire] (private) matplotlib data path: C:\Users\sasha\anaconda3\lib\site-packages\matplotlib\mpl-data
2022-09-05 21:03:41,068 [23744] DEBUG    matplotlib:241: [JupyterRequire] matplotlib data path: C:\Users\sasha\anaconda3\lib\site-packages\matplotlib\mpl-data
2022-09-05 21:03:41,073 [23744] DEBUG    matplotlib:241: [JupyterRequire] CONFIGDIR=C:\Users\sasha\.matplotlib
2022-09-05 21:03:41,077 [23744] DEBUG    matplotlib:1471: [JupyterRequire] matplotlib version 3.3.2
2022-09-05 21:03:41,077 [23744] DEBUG    matplotlib:1472: [JupyterRequire] interactive is False
2022-09-05 21:03:41,077 [23744] DEBUG    matplotlib:1473: [JupyterRequire] platform is win32
2022-09-05 21:03:41,078 [23744] DEBUG    matplotlib:1474: [JupyterRequire] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_warnings', '_frozen_importlib_external', '_io', 'marshal', 'nt', '_thread', '_weakref', 'winreg', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1251', '_signal', '__main__', 'encodings.latin_1', '_abc', 'abc', 'io', '_stat', 'stat', '_collections_abc', 'genericpath', 'ntpath', 'os.path', 'os', '_sitebuiltins', '_locale', '_bootlocale', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', 'importlib.abc', '_operator', 'operator', 'keyword', '_heapq', 'heapq', 'itertools', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'google', 'mpl_toolkits', 'sphinxcontrib', 'zope', 'site', '_weakrefset', 'weakref', 'pkgutil', 'runpy', 'ipykernel._version', '__future__', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'signal', 'threading', 'msvcrt', '_winapi', 'subprocess', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'atexit', 'copy', 'posixpath', 'fnmatch', 'glob', 'token', 'tokenize', 'linecache', 'traceback', 'collections.abc', '_string', 'string', 'logging', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_opcode', 'opcode', 'dis', 'inspect', 'typing.io', 'typing.re', 'typing', '_ast', 'ast', 'traitlets.utils', 'traitlets.utils.bunch', 'traitlets.utils.descriptions', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'traitlets.utils.sentinel', 'traitlets.traitlets', 'traitlets._version', 'traitlets.utils.decorators', 'traitlets', 'pprint', '_socket', 'math', 'select', 'selectors', 'socket', '_struct', 'struct', '_compat_pickle', '_pickle', 'pickle', '_queue', 'queue', 'logging.handlers', 'socketserver', 'logging.config', 'textwrap', 'traitlets.utils.text', 'locale', 'gettext', 'argparse', 'traitlets.config.loader', 'traitlets.config.configurable', 'traitlets.utils.nested_update', 'traitlets.config.application', 'traitlets.config', 'platform', 'sysconfig', 'urllib', 'urllib.parse', 'pydoc', 'bdb', 'IPython.utils', 'IPython.utils.ipstruct', 'IPython.utils.coloransi', 'pygments', 'IPython.utils.colorable', 'IPython.utils.PyColorize', 'IPython.utils.encoding', 'IPython.utils.py3compat', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'cmd', 'codeop', 'code', 'pdb', 'IPython.core.debugger', 'IPython.core.display_trap', '_bisect', 'bisect', '_sha512', '_random', 'random', '_ctypes', 'ctypes._endian', 'ctypes', 'ctypes.wintypes', 'shlex', 'IPython.utils._process_common', 'IPython.utils._process_win32', 'IPython.utils.process', 'IPython.utils.decorators', 'IPython.utils.path', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.core.ultratb', 'IPython.utils._sysinfo', 'IPython.utils.sysinfo', 'IPython.core.crashhandler', 'tempfile', 'IPython.utils.importstring', 'IPython.paths', 'IPython.core.profiledir', 'IPython.core.application', 'IPython.terminal', '_hashlib', '_blake2', '_sha3', 'hashlib', 'IPython.core.compilerop', 'IPython.core.error', 'pathlib', 'IPython.utils.text', 'IPython.core.magic_arguments', 'getopt', 'binascii', 'mimetypes', 'IPython.core.display', 'IPython.core.page', 'getpass', 'IPython.lib.security', 'IPython.lib', '_datetime', 'datetime', 'IPython.lib.pretty', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers', 'pygments.filter', 'pygments.token', 'pygments.filters', 'pygments.regexopt', 'pygments.lexer', 'pygments.unistring', 'pygments.lexers.python', 'pygments.formatters._mapping', 'pygments.formatters', 'pygments.styles', 'pygments.formatter', 'pygments.formatters.html', 'IPython.core.oinspect', 'IPython.core.inputtransformer2', 'decorator', 'IPython.core.magic', 'pickleshare', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.prefilter', 'IPython.core.alias', 'IPython.core.builtin_trap', 'backcall.backcall', 'backcall', 'IPython.core.events', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.utils.sentinel', 'IPython.core.formatters', '_sqlite3', 'sqlite3.dbapi2', 'sqlite3', 'IPython.core.history', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'html.entities', 'html', 'IPython.lib.display', 'IPython.display', 'IPython.utils.capture', 'IPython.utils.io', 'IPython.core.hooks', 'IPython.utils.strdispatch', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.core.interactiveshell', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_ssl', 'base64', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop.utils', 'prompt_toolkit.eventloop.async_generator', 'wcwidth.table_wide', 'wcwidth.table_zero', 'wcwidth.unicode_versions', 'wcwidth.wcwidth', 'wcwidth', 'prompt_toolkit.utils', 'prompt_toolkit.eventloop.inputhook', 'prompt_toolkit.eventloop', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.clipboard', 'prompt_toolkit.cache', 'prompt_toolkit.enums', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.app', 'prompt_toolkit.filters.cli', 'prompt_toolkit.filters.utils', 'prompt_toolkit.filters', 'prompt_toolkit.document', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.data_structures', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.pygments', 'colorsys', 'prompt_toolkit.styles.style_transformation', 'prompt_toolkit.styles', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.base', 'prompt_toolkit.patch_stdout', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output', 'array', 'prompt_toolkit.output.vt100', 'prompt_toolkit.mouse_events', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.formatted_text.ansi', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', 'prompt_toolkit.formatted_text.html', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.formatted_text', 'prompt_toolkit.completion.base', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.completion.nested', 'prompt_toolkit.completion', 'prompt_toolkit.history', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.search', 'prompt_toolkit.validation', 'prompt_toolkit.buffer', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.lexers', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.controls', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.layout.screen', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.layout', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.renderer', 'prompt_toolkit.application.application', 'prompt_toolkit.application.dummy', 'prompt_toolkit.application', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.widgets', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.shortcuts', 'prompt_toolkit', 'pygments.style', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'parso._compatibility', 'parso.utils', 'parso.tree', 'parso.python', 'parso.python.token', 'parso.python.tokenize', 'parso.pgen2.grammar_parser', 'parso.pgen2.generator', 'parso.pgen2', 'parso.parser', 'difflib', 'parso.python.prefix', 'parso.python.tree', 'parso.python.parser', 'parso.python.diff', 'gc', 'parso.cache', 'parso.normalizer', 'parso.python.errors', 'parso.python.pep8', 'parso.file_io', 'parso.grammar', 'parso', 'jedi.file_io', 'jedi._compatibility', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.inference.cache', 'jedi.inference.helpers', 'jedi.inference.utils', 'jedi.inference.base_value', 'jedi.common', 'jedi.inference.sys_path', 'jedi.inference.recursion', 'jedi.inference.flow_analysis', 'jedi.inference.lazy_value', 'jedi.inference.docstrings', 'jedi.plugins', 'jedi.inference.names', 'jedi.inference.filters', 'jedi.inference.compiled.getattr_static', 'jedi.inference.compiled.access', 'jedi.inference.signature', 'jedi.inference.context', 'jedi.inference.compiled.value', 'jedi.inference.compiled', 'jedi.inference.analysis', 'jedi.inference.gradual', 'jedi.inference.value.module', 'jedi.inference.value.dynamic_arrays', 'jedi.inference.value.iterable', 'jedi.inference.arguments', 'jedi.inference.parser_cache', 'jedi.inference.gradual.generics', 'jedi.inference.value.function', 'jedi.inference.value.klass', 'jedi.inference.value.instance', 'jedi.inference.value', 'jedi.inference.gradual.base', 'jedi.inference.gradual.type_var', 'jedi.inference.gradual.typing', 'jedi.inference.gradual.stub_value', 'jedi.inference.gradual.typeshed', 'jedi.inference.imports', 'jedi.inference.param', 'jedi.inference.gradual.annotation', 'jedi.inference.value.decorator', 'jedi.inference.syntax_tree', 'jedi.inference', 'jedi.inference.gradual.conversion', 'jedi.inference.compiled.mixed', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.keywords', 'jedi.api.completion_cache', 'jedi.api.helpers', 'jedi.api.classes', 'jedi.api.interpreter', 'jedi.api.strings', 'jedi.api.file_name', 'jedi.api.completion', 'filecmp', 'jedi.inference.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.inference.compiled.subprocess', 'jedi.api.environment', 'jedi.inference.references', 'jedi.api.project', 'jedi.api.errors', 'jedi.api.refactoring', 'jedi.api.refactoring.extract', 'jedi.inference.gradual.utils', 'jedi.api', 'jedi.plugins.stdlib', 'jedi.plugins.flask', 'jedi.plugins.pytest', 'jedi.plugins.django', 'jedi.plugins.registry', 'jedi', 'IPython.core.completer', 'IPython.terminal.ptutils', 'IPython.lib.clipboard', 'IPython.terminal.shortcuts', 'IPython.terminal.debugger', 'IPython.terminal.magics', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.interactiveshell', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'email', 'http', 'email.errors', 'email.quoprimime', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', 'http.client', 'urllib.response', 'urllib.error', 'nturl2path', 'urllib.request', 'IPython.core.magics.code', 'IPython.core.magics.config', 'IPython.core.magics.display', 'timeit', '_lsprof', 'profile', 'cProfile', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.execution', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.pylabtools', 'IPython.core.magics.pylab', 'IPython.lib.backgroundjobs', 'IPython.core.magics.script', 'IPython.core.magics', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.terminal.ipapp', 'IPython.terminal.embed', 'IPython.utils.frame', 'IPython', 'ipython_genutils._version', 'ipython_genutils', 'ipython_genutils.encoding', 'ipython_genutils.py3compat', 'ipython_genutils.path', 'jupyter_client._version', 'zmq.backend.select', 'cython_runtime', 'zmq.backend.cython.constants', '_cython_0_29_21', 'zmq.backend.cython.error', 'zmq.error', 'zmq.backend.cython.message', 'zmq.backend.cython.context', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.backend.cython', 'zmq.backend', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.constants', 'zmq.sugar.attrsettr', 'zmq.sugar.poll', 'zmq.utils.strtypes', 'zmq.utils.jsonapi', 'zmq.sugar.socket', 'zmq.sugar.context', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'zmq.sugar', 'zmq', 'jupyter_client.localinterfaces', 'jupyter_core.version', 'jupyter_core', 'distutils', 'distutils.errors', 'distutils.dep_util', 'distutils.debug', 'distutils.log', 'distutils.spawn', 'distutils.util', 'jupyter_core.paths', 'jupyter_client.connect', 'traitlets.log', 'jupyter_client.launcher', 'jupyter_client.channelsabc', 'jupyter_client.channels', 'jupyter_client.clientabc', 'jupyter_client.client', 'ipython_genutils.importstring', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.manager', 'jupyter_client.blocking.channels', 'jupyter_client.blocking.client', 'jupyter_client.blocking', 'zmq._future', 'zmq.asyncio', 'jupyter_client.asynchronous.channels', 'jupyter_client.asynchronous.client', 'jupyter_client.asynchronous', 'uuid', 'jupyter_client.multikernelmanager', 'jupyter_client', 'ipykernel.connect', 'ipykernel', 'tornado', 'numbers', 'tornado.speedups', 'tornado.util', 'tornado.escape', 'colorama.ansi', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'tornado.log', 'tornado.concurrent', 'tornado.ioloop', 'tornado.platform', 'tornado.gen', 'tornado.platform.asyncio', 'zmq.eventloop.ioloop', 'zmq.eventloop', 'zmq.eventloop.zmqstream', 'imp', 'hmac', 'dateutil._version', 'dateutil', 'six', '_decimal', 'decimal', 'dateutil._common', 'dateutil.relativedelta', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', '_strptime', 'jupyter_client.jsonutil', 'jupyter_client.adapter', 'jupyter_client.session', 'ipykernel.iostream', 'ipykernel.heartbeat', 'IPython.utils.tokenutil', 'tornado.locks', 'tornado.queues', 'ipykernel.jsonutil', 'ipykernel.kernelbase', 'ipykernel.comm.comm', 'ipykernel.comm.manager', 'ipykernel.comm', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.zmqshell', 'distutils.version', 'ipykernel.eventloops', 'ipykernel.ipkernel', 'ipykernel.parentpoller', 'ipykernel.kernelapp', 'win32api', 'win32security', 'ntsecuritycon', 'faulthandler', 'ipykernel.codeutil', 'ipykernel.pickleutil', 'ipykernel.serialize', 'ipykernel.datapub', 'IPython.core.completerlib', 'storemagic', 'configparser', 'isort.stdlibs.py27', 'isort.stdlibs.py2', 'isort.stdlibs.py35', 'isort.stdlibs.py36', 'isort.stdlibs.py37', 'isort.stdlibs.py38', 'isort.stdlibs.py39', 'isort.stdlibs.py3', 'isort.stdlibs.all', 'isort.stdlibs', 'dataclasses', 'isort._future', 'isort._vendored', 'isort._vendored.toml.tz', 'isort._vendored.toml.decoder', 'isort._vendored.toml.encoder', 'isort._vendored.toml', 'isort.profiles', 'isort.exceptions', 'isort.sections', 'isort.comments', 'isort.wrap_modes', 'isort.settings', 'isort._version', 'isort.literal', 'isort.format', 'isort.utils', 'isort.place', 'isort.deprecated', 'isort.deprecated.finders', 'isort.parse', 'isort.sorting', 'isort.wrap', 'isort.output', 'isort.core', 'isort.io', 'isort.api', 'isort', 'toml.tz', 'toml.decoder', 'toml.encoder', 'toml', 'optparse', 'pycodestyle', 'autopep8', 'pythonjsonlogger', 'pythonjsonlogger.jsonlogger', 'daiquiri.formatter', 'daiquiri.handlers', 'daiquiri.output', 'daiquiri', 'jupyter_require.__about__', 'csscompressor', 'jupyter_require.core', 'jupyter_require.notebook', 'jupyter_nbutils.__about__', 'jupyter_nbutils.config', 'jupyter_nbutils.utils', 'jupyter_nbutils', 'jupyter_require.magic', 'jupyter_require', 'numpy._globals', 'numpy.__config__', 'numpy._distributor_init', 'numpy._version', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core._machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', '_cython_0_29_24', 'numpy.random._common', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pytz', 'mmap', 'pandas._typing', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.nattype', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.tzconversion', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.timestamps', 'dateutil.easter', 'pandas._libs.properties', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.tslibs', 'pandas._libs.ops_dispatch', 'pandas._libs.missing', 'pandas._libs.hashtable', 'pandas._libs.algos', 'pandas._libs.interval', 'pandas._libs', 'pandas.util._decorators', 'pandas.core', 'pandas.core.util', 'pandas._libs.tslib', 'pandas._libs.lib', 'pandas._libs.hashing', 'pandas.core.dtypes', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.common', 'pandas.core.util.hashing', 'pandas.util', 'pandas.util.version', 'pandas.compat.numpy', 'pyarrow._generated_version', 'cloudpickle.compat', 'typing_extensions', 'cloudpickle.cloudpickle', 'cloudpickle.cloudpickle_fast', 'cloudpickle', 'pyarrow.util', 'pyarrow.lib', 'pyarrow.filesystem', 'pyarrow.hdfs', 'pyarrow.ipc', 'pyarrow.serialization', 'pyarrow.types', 'pyarrow', 'pandas.compat.pyarrow', 'pandas.compat', 'pandas.core.config_init', 'pandas.core.dtypes.missing', 'pandas.util._exceptions', 'pandas.util._validators', 'pandas.core.dtypes.cast', 'pandas.core.array_algos', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.array_algos.take', 'pandas.core.indexers', 'pandas.core.algorithms', 'pandas.compat.numpy.function', 'pandas.compat._optional', 'pandas.core.missing', 'pandas.core.roperator', 'pandas._libs.ops', 'pandas.core.computation', 'numexpr.__config__', 'numexpr.interpreter', 'numexpr.expressions', 'numexpr.utils', 'numexpr.necompiler', 'numexpr.version', 'numexpr', 'pandas.core.computation.check', 'pandas.core.computation.expressions', 'pandas.core.ops.missing', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.array_ops', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.ops', 'pandas.core.sorting', 'pandas.core.arrays.base', 'bottleneck.reduce', 'bottleneck.nonreduce', 'bottleneck.nonreduce_axis', 'bottleneck.move', 'bottleneck.slow.reduce', 'bottleneck.slow.nonreduce', 'bottleneck.slow.nonreduce_axis', 'bottleneck.slow.move', 'bottleneck.slow', 'bottleneck.benchmark', 'bottleneck.benchmark.autotimeit', 'bottleneck.benchmark.bench', 'bottleneck.benchmark.bench_detailed', 'bottleneck.tests', 'bottleneck.tests.util', 'bottleneck._pytesttester', 'bottleneck._version', 'bottleneck', 'pandas.core.nanops', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arraylike', 'pandas.core.arrays.masked', 'pandas.core.arrays.boolean', '_csv', 'csv', 'pandas._libs.arrays', 'pandas.core.accessor', 'pandas.core.array_algos.transforms', 'pandas.core.arrays._mixins', 'pandas.core.base', 'pandas.core.strings.accessor', 'pandas.core.strings.base', 'pandas.core.strings', 'pandas.core.strings.object_array', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.categorical', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays.datetimelike', 'pandas.core.arrays._ranges', 'pandas.core.arrays.numeric', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.integer', 'pandas.tseries.offsets', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.floating', 'pandas.core.indexes', 'pandas._libs.index', 'pandas._libs.join', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.arrays.sparse.array', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse', 'pandas.core.dtypes.concat', 'pandas.core.array_algos.putmask', 'pandas.core.indexes.frozen', 'pandas.core.indexes.base', 'pandas.core.arrays.interval', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pyarrow._compute', 'pyarrow.compute', 'pandas.core.arrays.string_arrow', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays', 'pandas.core.flags', 'pandas._libs.reduction', 'pandas.core.indexes.extension', 'pandas.core.indexes.category', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.times', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.interval', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexes.api', 'pandas.core.aggregation', 'pandas.core.apply', 'pandas._libs.indexing', 'pandas.core.indexing', 'pandas.core.reshape', 'pandas._libs.internals', 'pandas._libs.writers', 'pandas.core.array_algos.quantile', 'pandas.core.array_algos.replace', 'pandas.core.internals.blocks', 'pandas.core.internals.api', 'pandas.core.internals.base', 'pandas.core.internals.array_manager', 'pandas.core.internals.ops', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.core.internals', 'pandas.core.reshape.concat', 'gzip', 'zipfile', 'pandas.io.common', 'pandas.io.formats.format', 'pandas.core.describe', 'pandas.core.internals.construction', 'pandas.core.shared_docs', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.util.numba_', 'pandas.core.window.common', 'pandas.core.window.doc', 'pandas._libs.window.indexers', 'pandas.core.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.online', 'pandas.core.window.rolling', 'pandas.core.window.ewm', 'pandas.core.window.expanding', 'pandas.core.window', 'pandas.core.generic', 'pandas.core.reshape.util', 'pandas.core.reshape.melt', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.arrays', 'pandas.core.tools.datetimes', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.plotting', 'pandas.core.series', 'pandas.io.formats.info', 'pandas.core.frame', 'pandas.core.groupby.base', 'pandas._libs.groupby', 'pandas.core.groupby.numba_', 'pandas.core.groupby.categorical', 'pandas.core.groupby.grouper', 'pandas.core.groupby.ops', 'pandas.core.groupby.groupby', 'pandas.core.groupby.generic', 'pandas.core.groupby', 'pandas.core.api', 'pandas.tseries.api', 'pandas.core.computation.common', 'pandas.core.computation.align', 'pandas.compat.chainmap', 'pandas.core.computation.scope', 'pandas.core.computation.ops', 'pandas.core.computation.parsing', 'pandas.core.computation.expr', 'pandas.core.computation.engines', 'pandas.core.computation.eval', 'pandas.core.computation.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.core.reshape.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.core.dtypes.api', 'pandas.api.types', 'pandas.api', 'pandas.util._print_versions', 'pandas.io.clipboards', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.date_converters', 'pandas.io.parsers.base_parser', 'pandas.io.parsers.c_parser_wrapper', 'pandas.io.parsers.python_parser', 'pandas.io.parsers.readers', 'pandas.io.parsers', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlrd', 'pandas.io.excel._base', 'pandas._libs.json', 'pandas.io.formats._color_data', 'pandas.io.formats.css', 'pandas.io.formats.excel', 'pandas.io.excel._odswriter', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.excel', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.json._json', 'pandas.io.json', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.compat.pickle_compat', 'pandas.io.pickle', 'pandas.core.computation.pytables', 'pandas.io.pytables', 'pandas.io.sas.sasreader', 'pandas.io.sas', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.io.xml', 'pandas.io.api', 'pandas.util._tester', 'pandas._testing._random', 'pandas._testing.contexts', 'pandas._testing._io', 'pandas._testing._warnings', 'cmath', 'pandas._libs.testing', 'pandas._testing.asserters', 'pandas._testing.compat', 'pandas._testing', 'pandas.testing', 'pandas._version', 'pandas', 'tqdm.utils', 'tqdm._monitor', 'tqdm.std', 'tqdm.gui', 'tqdm._tqdm_pandas', 'tqdm._version', 'tqdm.cli', 'tqdm', 'ipywidgets._version', 'ipywidgets.widgets.widget', 'ipywidgets.widgets.util', 'ipywidgets.widgets.trait_types', 'ipywidgets.widgets.widget_layout', 'ipywidgets.widgets.widget_style', 'ipywidgets.widgets.domwidget', 'ipywidgets.widgets.valuewidget', 'ipywidgets.widgets.widget_core', 'ipywidgets.widgets.widget_description', 'ipywidgets.widgets.widget_bool', 'ipywidgets.widgets.widget_button', 'ipywidgets.widgets.docutils', 'ipywidgets.widgets.widget_box', 'ipywidgets.widgets.widget_int', 'ipywidgets.widgets.widget_float', 'ipywidgets.widgets.widget_color', 'ipywidgets.widgets.widget_date', 'ipywidgets.widgets.widget_output', 'ipywidgets.widgets.widget_selection', 'ipywidgets.widgets.widget_selectioncontainer', 'ipywidgets.widgets.widget_string', 'ipywidgets.widgets.widget_controller', 'ipywidgets.widgets.interaction', 'ipywidgets.widgets.widget_link', 'ipywidgets.widgets.widget_media', 'ipywidgets.widgets.widget_templates', 'ipywidgets.widgets.widget_upload', 'ipywidgets.widgets', 'ipywidgets', 'tqdm.notebook', 'tqdm.autonotebook', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'plistlib', 'pkg_resources.extern', 'pkg_resources._vendor', '_win32sysloader', 'pywintypes', 'pythoncom', 'win32com.gen_py', 'win32com', 'win32com.shell', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging._typing', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'pkg_resources', 'tsfresh.convenience', 'multiprocessing.process', 'multiprocessing.reduction', 'multiprocessing.context', '__mp_main__', 'multiprocessing', 'tsfresh.defaults', 'scipy._lib._testutils', 'scipy._lib', 'scipy._lib.deprecation', 'scipy.__config__', 'scipy.version', 'scipy._distributor_init', 'scipy._lib._pep440', 'scipy._lib._ccallback_c', 'scipy._lib._ccallback', 'scipy', 'scipy.signal._sigtools', 'scipy.linalg._fblas', 'scipy.linalg.blas', 'scipy.linalg._flapack', 'scipy._lib._util', 'scipy.linalg.lapack', 'scipy.linalg._misc', '_cython_0_29_25', 'scipy.linalg._cythonized_array_utils', 'scipy.linalg._flinalg', 'scipy.linalg._flinalg_py', 'scipy.linalg._decomp', 'scipy.linalg._decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg._basic', 'scipy.linalg._decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg._decomp_cholesky', 'scipy.linalg._decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg._decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg._special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm_triu', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg._matfuncs', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._decomp_update', 'scipy.sparse._sputils', 'scipy.sparse._base', 'scipy.sparse._sparsetools', 'scipy.sparse._data', 'scipy.sparse._index', 'scipy.sparse._compressed', 'scipy.sparse._csr', 'scipy.sparse._csc', 'scipy.sparse._csparsetools', 'scipy.sparse._lil', 'scipy.sparse._dok', 'scipy.sparse._coo', 'scipy.sparse._dia', 'scipy.sparse._bsr', 'scipy.sparse._construct', 'scipy.sparse._extract', 'scipy.sparse._matrix_io', 'scipy.sparse._arrays', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'scipy.sparse.csgraph', 'scipy.sparse.base', 'scipy.sparse.bsr', 'scipy.sparse.compressed', 'scipy.sparse.construct', 'scipy.sparse.coo', 'scipy.sparse.csc', 'scipy.sparse.csr', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse.dok', 'scipy.sparse.extract', 'scipy.sparse.lil', 'scipy.sparse.sparsetools', 'scipy.sparse.sputils', 'scipy.sparse', 'scipy.linalg._sketches', 'scipy.linalg._decomp_cossin', 'scipy.linalg.decomp', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_lu', 'scipy.linalg.decomp_qr', 'scipy.linalg.decomp_svd', 'scipy.linalg.decomp_schur', 'scipy.linalg.basic', 'scipy.linalg.misc', 'scipy.linalg.special_matrices', 'scipy.linalg.flinalg', 'scipy.linalg.matfuncs', 'scipy.linalg', 'scipy.special._sf_error', 'scipy.special._ufuncs_cxx', 'scipy.special._ufuncs', 'scipy.special._specfun', 'scipy.special._orthogonal', 'scipy.special._comb', 'scipy.special._basic', 'scipy.special._logsumexp', 'scipy.special._spfun_stats', 'scipy.special._ellip_harm_2', 'scipy.special._ellip_harm', 'scipy.special._lambertw', 'scipy.special._spherical_bessel', 'scipy.special._add_newdocs', 'scipy.special.add_newdocs', 'scipy.special.basic', 'scipy.special.orthogonal', 'scipy.special.specfun', 'scipy.special.sf_error', 'scipy.special.spfun_stats', 'scipy.special', 'scipy._lib._uarray._uarray', 'scipy._lib._uarray._backend', 'scipy._lib._uarray', 'scipy._lib.uarray', 'scipy.fft._basic', 'scipy.fft._realtransforms', 'scipy.fft._fftlog', 'scipy.fft._pocketfft.pypocketfft', 'scipy.fft._pocketfft.helper', 'scipy.fft._pocketfft.basic', 'scipy.fft._pocketfft.realtransforms', 'scipy.fft._pocketfft', 'scipy.fft._helper', 'scipy.fft._backend', 'scipy.fft', 'scipy.signal.windows._windows', 'scipy.signal.windows.windows', 'scipy.signal.windows', 'scipy.signal._waveforms', 'scipy.signal._max_len_seq_inner', 'scipy.signal._max_len_seq', 'scipy.signal._upfirdn_apply', 'scipy.signal._upfirdn', 'scipy.signal._spline', 'scipy.signal._bsplines', 'scipy.sparse.linalg._isolve._iterative', 'scipy.sparse.linalg._interface', 'scipy.sparse.linalg._isolve.utils', 'scipy._lib.decorator', 'scipy._lib._threadsafety', 'scipy.sparse.linalg._isolve.iterative', 'scipy.sparse.linalg._isolve.minres', 'scipy.sparse.linalg._isolve._gcrotmk', 'scipy.sparse.linalg._isolve.lgmres', 'scipy.sparse.linalg._isolve.lsqr', 'scipy.sparse.linalg._isolve.lsmr', 'scipy.sparse.linalg._isolve.tfqmr', 'scipy.sparse.linalg._isolve', 'scipy.sparse.linalg._dsolve._superlu', 'scipy.sparse.linalg._dsolve.linsolve', 'scipy.sparse.linalg._dsolve._add_newdocs', 'scipy.sparse.linalg._dsolve', 'scipy.sparse.linalg._eigen.arpack._arpack', 'scipy.sparse.linalg._eigen.arpack.arpack', 'scipy.sparse.linalg._eigen.arpack', 'scipy.sparse.linalg._eigen.lobpcg.lobpcg', 'scipy.sparse.linalg._eigen.lobpcg', 'scipy.sparse.linalg._eigen._svds', 'scipy.sparse.linalg._eigen', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg._matfuncs', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.eigen', 'scipy.sparse.linalg.matfuncs', 'scipy.sparse.linalg', 'scipy.optimize._minpack2', 'scipy.optimize._linesearch', 'scipy.optimize._group_columns', 'scipy.optimize._numdiff', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._differentiable_functions', 'scipy.optimize._optimize', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_dogleg', 'scipy.optimize._trustregion_ncg', 'scipy._lib.messagestream', 'scipy.optimize._trlib._trlib', 'scipy.optimize._trlib', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trustregion_exact', 'unittest.util', 'unittest.result', 'unittest.case', 'unittest.async_case', 'unittest.suite', 'unittest.loader', 'unittest.signals', 'unittest.runner', 'unittest.main', 'unittest', 'numpy.testing._private', 'numpy.linalg.lapack_lite', 'numpy.testing._private.utils', 'numpy.testing._private.extbuild', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'numpy.testing', 'scipy.optimize._constraints', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.optimize._trustregion_constr', 'scipy.optimize._lbfgsb', 'scipy.optimize._lbfgsb_py', '_moduleTNC', 'scipy.optimize._moduleTNC', 'scipy.optimize._tnc', 'scipy.optimize._cobyla', 'scipy.optimize._cobyla_py', 'scipy.optimize._slsqp', 'scipy.optimize._slsqp_py', 'scipy.optimize._minimize', 'scipy.optimize._minpack', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.bvls', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq', 'scipy.optimize._minpack_py', 'scipy.optimize._spectral', 'scipy.optimize._nonlin', 'scipy.optimize._root', 'scipy.optimize._zeros', 'scipy.optimize._zeros_py', 'scipy.optimize._root_scalar', 'scipy.optimize.__nnls', 'scipy.optimize._nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._highs', 'scipy.optimize._highs.cython.src._highs_wrapper', 'scipy.optimize._highs._highs_wrapper', 'scipy.optimize._highs.cython.src._highs_constants', 'scipy.optimize._highs._highs_constants', 'scipy.optimize._linprog_highs', 'scipy.linalg._interpolative', 'scipy.linalg._interpolative_backend', 'scipy.linalg.interpolative', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_util', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_simplex', 'scipy.optimize._bglu_dense', 'scipy.optimize._linprog_rs', 'scipy.optimize._linprog_doc', 'scipy.optimize._linprog', 'scipy.optimize._lsap_module', 'scipy.optimize._lsap', 'scipy.optimize._differentialevolution', 'scipy.spatial._ckdtree', 'scipy.spatial._kdtree', 'scipy.spatial._qhull', 'scipy.spatial._voronoi', 'scipy.spatial._spherical_voronoi', 'scipy.spatial._plotutils', 'scipy.spatial._procrustes', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.spatial._distance_pybind', 'scipy.spatial.distance', 'scipy.spatial._geometric_slerp', 'scipy.spatial.ckdtree', 'scipy.spatial.kdtree', 'scipy.spatial.qhull', 'scipy.constants._codata', 'scipy.constants._constants', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.constants', 'scipy.spatial.transform._rotation_groups', 'scipy.spatial.transform._rotation', 'scipy.spatial.transform._rotation_spline', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform', 'scipy.spatial', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._shgo', 'scipy.optimize._dual_annealing', 'scipy.optimize._qap', 'scipy.optimize.cobyla', 'scipy.optimize.lbfgsb', 'scipy.optimize.linesearch', 'scipy.optimize.minpack', 'scipy.optimize.minpack2', 'scipy.optimize.moduleTNC', 'scipy.optimize.nonlin', 'scipy.optimize.optimize', 'scipy.optimize.slsqp', 'scipy.optimize.tnc', 'scipy.optimize.zeros', 'scipy.optimize', 'scipy.signal._filter_design', 'scipy.signal._fir_filter_design', 'scipy.integrate._quadrature', 'scipy.integrate._odepack', 'scipy.integrate._odepack_py', 'scipy.integrate._quadpack', 'scipy.integrate._quadpack_py', 'scipy.integrate._vode', 'scipy.integrate._dop', 'scipy.integrate._lsoda', 'scipy.integrate._ode', 'scipy.integrate._bvp', 'scipy.integrate._ivp.common', 'scipy.integrate._ivp.base', 'scipy.integrate._ivp.bdf', 'scipy.integrate._ivp.radau', 'scipy.integrate._ivp.dop853_coefficients', 'scipy.integrate._ivp.rk', 'scipy.integrate._ivp.lsoda', 'scipy.integrate._ivp.ivp', 'scipy.integrate._ivp', 'scipy.integrate._quad_vec', 'scipy.integrate.dop', 'scipy.integrate.lsoda', 'scipy.integrate.vode', 'scipy.integrate.odepack', 'scipy.integrate.quadpack', 'scipy.integrate', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._bspl', 'scipy.interpolate._bsplines', 'scipy.interpolate._fitpack_py', 'scipy.interpolate._polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate._fitpack2', 'scipy.interpolate.interpnd', 'scipy.interpolate._interpolate', 'scipy.interpolate._rbf', 'scipy.interpolate._rbfinterp_pythran', 'scipy.interpolate._rbfinterp', 'scipy.interpolate._cubic', 'scipy.interpolate._ndgriddata', 'scipy.interpolate._pade', 'scipy.interpolate.fitpack', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpolate', 'scipy.interpolate.ndgriddata', 'scipy.interpolate.polyint', 'scipy.interpolate.rbf', 'scipy.interpolate', 'scipy.signal._lti_conversion', 'scipy.signal._ltisys', 'scipy.signal._arraytools', 'scipy.signal._sosfilt', 'scipy.signal._signaltools', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy._lib.doccer', 'scipy.ndimage._ni_docstrings', 'scipy.ndimage._filters', 'scipy.ndimage._fourier', 'scipy.ndimage._interpolation', '_ni_label', 'scipy.ndimage._ni_label', 'scipy.ndimage._morphology', 'scipy.ndimage._measurements', 'scipy.ndimage.filters', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', 'scipy.ndimage.measurements', 'scipy.ndimage.morphology', 'scipy.ndimage', 'scipy.signal._savitzky_golay', 'scipy.signal._spectral', 'scipy.signal._spectral_py', 'scipy.signal._wavelets', 'scipy.stats._distr_params', 'scipy.misc._common', 'scipy.misc.common', 'scipy.misc._doccer', 'scipy.misc.doccer', 'scipy.misc', 'scipy.stats._constants', 'scipy.stats._distn_infrastructure', 'scipy.special.cython_special', 'scipy.stats._stats', 'scipy.stats._tukeylambda_stats', 'scipy.stats._ksstats', 'beta_ufunc', 'scipy.stats._boost.beta_ufunc', 'binom_ufunc', 'scipy.stats._boost.binom_ufunc', 'nbinom_ufunc', 'scipy.stats._boost.nbinom_ufunc', 'hypergeom_ufunc', 'scipy.stats._boost.hypergeom_ufunc', 'scipy.stats._boost', 'scipy.stats._continuous_distns', 'scipy.stats._biasedurn', 'scipy.stats._discrete_distns', 'scipy.stats._entropy', 'scipy.stats.distributions', 'scipy._lib._bunch', 'scipy.stats._stats_mstats_common', 'scipy.stats._mstats_basic', 'scipy.stats._common', 'scipy.stats._wilcoxon_data', 'scipy._lib._docscrape', 'scipy.stats._axis_nan_policy', 'scipy.stats._bootstrap', 'scipy.stats._hypotests_pythran', 'scipy.stats._hypotests', 'scipy.stats._stats_py', 'scipy.stats._variation', 'scipy.stats._statlib', 'scipy.stats._relative_risk', 'scipy.stats._crosstab', 'scipy.stats.contingency', 'scipy.stats._morestats', 'scipy.stats._binomtest', 'scipy.stats._binned_statistic', 'scipy.stats._mvn', 'scipy.stats._kde', 'scipy.stats._mstats_extras', 'scipy.stats.mstats', 'scipy.stats._sobol', 'scipy.stats._qmc_cy', 'scipy.stats._qmc', 'scipy.stats.qmc', 'scipy.stats._multivariate', 'scipy.stats._unuran', 'scipy.stats._unuran.unuran_wrapper', 'scipy.stats._rvs_sampling', 'scipy.stats._page_trend_test', 'scipy.stats._mannwhitneyu', 'scipy.stats.biasedurn', 'scipy.stats.kde', 'scipy.stats.morestats', 'scipy.stats.mstats_basic', 'scipy.stats.mstats_extras', 'scipy.stats.mvn', 'scipy.stats.statlib', 'scipy.stats.stats', 'scipy.stats', 'scipy.signal._peak_finding_utils', 'scipy.signal._peak_finding', 'scipy.signal._czt', 'scipy.signal.bsplines', 'scipy.signal.filter_design', 'scipy.signal.fir_filter_design', 'scipy.signal.lti_conversion', 'scipy.signal.ltisys', 'scipy.signal.spectral', 'scipy.signal.signaltools', 'scipy.signal.waveforms', 'scipy.signal.wavelets', 'scipy.signal.spline', 'scipy.signal', 'statsmodels._version', 'statsmodels', 'numpy.ma.mrecords', 'numpy.lib.recfunctions', 'statsmodels.compat.pandas', 'statsmodels.tools._testing', 'statsmodels.compat.python', 'statsmodels.compat', 'statsmodels.tools.data', 'statsmodels.tools.validation.validation', 'statsmodels.tools.validation', 'statsmodels.tools.tools', 'statsmodels.tools', 'statsmodels.tools.sm_exceptions', 'statsmodels.tsa', 'statsmodels.base', 'statsmodels.tools.decorators', 'statsmodels.base.data', 'statsmodels.stats', 'statsmodels.iolib.openfile', 'statsmodels.iolib.foreign', 'statsmodels.iolib.table', 'statsmodels.iolib.smpickle', 'statsmodels.iolib', 'statsmodels.iolib.tableformatting', 'statsmodels.iolib.summary2', 'statsmodels.stats._knockoff', 'statsmodels.stats.multitest', 'statsmodels.stats.contrast', 'statsmodels.base.wrapper', 'statsmodels.tools.numdiff', 'patsy.version', 'patsy.origin', 'patsy.compat', 'patsy.util', 'patsy.infix_parser', 'patsy.tokens', 'patsy.parse_formula', 'patsy.constraint', 'patsy.contrasts', 'patsy.categorical', 'patsy.state', 'patsy.splines', 'patsy.mgcv_cubic_splines', 'patsy.builtins', 'patsy.eval', 'patsy.desc', 'patsy.design_info', 'patsy.redundancy', 'patsy.missing', 'patsy.build', 'patsy.highlevel', 'patsy.user_util', 'patsy', 'statsmodels.formula.formulatools', 'statsmodels.formula', 'statsmodels.base.optimizer', 'statsmodels.base.model', 'statsmodels.tsa.base', 'statsmodels.tsa.base.prediction', 'statsmodels.iolib.summary', 'statsmodels.emplike', 'statsmodels.graphics', 'statsmodels.graphics.utils', 'statsmodels.emplike.descriptive', 'statsmodels.emplike.elregress', 'statsmodels.regression._prediction', 'statsmodels.regression.linear_model', 'statsmodels.regression', 'statsmodels.tools.docstring', 'statsmodels.tsa.arima_process', 'statsmodels.tsa.base.tsa_model', 'statsmodels.compat.numpy', 'statsmodels.tsa.tsatools', 'statsmodels.tsa.deterministic', 'statsmodels.tsa.kalmanf.kalman_loglike', 'statsmodels.tsa.kalmanf.kalmanfilter', 'statsmodels.tsa.kalmanf', 'statsmodels.tsa.vector_ar', 'statsmodels.tsa.vector_ar.util', 'statsmodels.tsa.ar_model', 'statsmodels.compat.scipy', 'statsmodels.tsa._bds', 'statsmodels.tsa._innovations', 'statsmodels.tsa.adfvalues', 'statsmodels.tsa.arima_model', 'statsmodels.tsa.stattools', 'tsfresh.feature_extraction.feature_calculators', 'yaml.error', 'yaml.tokens', 'yaml.events', 'yaml.nodes', 'yaml.reader', 'yaml.scanner', 'yaml.parser', 'yaml.composer', 'yaml.constructor', 'yaml.resolver', 'yaml.loader', 'yaml.emitter', 'yaml.serializer', 'yaml.representer', 'yaml.dumper', '_yaml', 'yaml.cyaml', 'yaml', 'dask.config', 'dask.utils_test', 'dask.core', 'dask.utils', 'dask.datasets', 'dask.order', 'dask.callbacks', 'dask.local', 'toolz.utils', 'toolz.itertoolz', 'toolz._signatures', 'toolz.functoolz', 'toolz.dicttoolz', 'toolz.recipes', 'toolz.curried.operator', 'toolz.curried.exceptions', 'toolz.curried', 'toolz.sandbox.core', 'toolz.sandbox.parallel', 'toolz.sandbox', 'toolz._version', 'toolz', 'cytoolz.utils', 'cytoolz.itertoolz', 'cytoolz._signatures', 'cytoolz.functoolz', 'cytoolz.dicttoolz', 'cytoolz.recipes', 'cytoolz.curried.operator', 'cytoolz.curried.exceptions', 'cytoolz.curried', 'cytoolz._version', 'cytoolz', 'tlz.utils', 'tlz.itertoolz', 'tlz._signatures', 'tlz.functoolz', 'tlz.dicttoolz', 'tlz.recipes', 'tlz._version', 'tlz._build_tlz', 'tlz', 'multiprocessing.util', '_multiprocessing', 'multiprocessing.connection', 'multiprocessing.pool', 'psutil._common', 'psutil._compat', 'psutil._psutil_windows', 'psutil._pswindows', 'psutil', 'dask.system', 'dask.threaded', 'dask.compatibility', 'dask.context', 'dask.hashing', 'dask.optimization', 'tblib.cpython', 'tblib', 'tblib.pickling_support', 'dask.multiprocessing', 'dask.base', 'dask.highlevelgraph', 'dask.delayed', 'dask._version', 'dask', 'dask.blockwise', 'dask.array.blockwise', 'tlz.curried.operator', 'tlz.curried', 'dask.array.numpy_compat', 'dask.array.chunk', 'dask.sizeof', 'dask.array.slicing', 'dask.array.chunk_types', 'dask.array.optimization', 'dask.array.utils', 'dask.array.core', 'dask.array.tiledb_io', 'dask.array.ufunc', 'dask.array.wrap', 'dask.array.creation', 'dask.array.einsumfuncs', 'dask.array.routines', 'dask.array.reshape', 'dask.array.reductions', 'dask.array.percentile', 'dask.array.ma', 'dask.array.random', 'dask.array.linalg', 'dask.array.overlap', 'scipy.fftpack._helper', 'scipy.fftpack._basic', 'scipy.fftpack.convolve', 'scipy.fftpack._pseudo_diffs', 'scipy.fftpack._realtransforms', 'scipy.fftpack.basic', 'scipy.fftpack.helper', 'scipy.fftpack.pseudo_diffs', 'scipy.fftpack.realtransforms', 'scipy.fftpack', 'dask.array.fft', 'dask.array.backends', 'dask.array.rechunk', 'dask.array.gufunc', 'dask.array', 'dask.dataframe._compat', 'dask.dataframe._accessor', 'dask.dataframe.extensions', 'dask.dataframe._dtypes', 'dask.dataframe.utils', 'dask.dataframe.methods', 'dask.dataframe.accessor', 'dask.dataframe.categorical', 'dask.dataframe.optimize', 'dask.dataframe.core', 'dask.dataframe.shuffle', 'dask.dataframe.groupby', 'dask.dataframe.io.io', 'fsspec._version', 'fsspec.dircache', 'fsspec.transaction', 'fsspec.utils', 'fsspec.spec', 'fsspec.registry', 'fsspec.compression', 'fsspec.caching', 'fsspec.core', 'fsspec.mapping', 'fsspec', 'dask.bytes.core', 'dask.bytes', 'fsspec.implementations', 'fsspec.implementations.local', 'dask.dataframe.io.csv', 'dask.dataframe.io.hdf', 'dask.dataframe.io.sql', 'dask.dataframe.io.json', 'dask.dataframe.io.demo', 'dask.dataframe.io.parquet.core', 'dask.dataframe.io.parquet', 'dask.dataframe.io', 'dask.dataframe.numeric', 'dask.dataframe.multi', 'dask.dataframe.rolling', 'dask.dataframe.backends', 'dask.dataframe.reshape', 'dask.dataframe.io.utils', 'dask.dataframe.io.orc', 'dask.dataframe', 'tsfresh.feature_extraction.data', 'tsfresh.utilities', 'tsfresh.utilities.string_manipulation', 'tsfresh.feature_extraction.settings', 'tsfresh.utilities.profiling', 'tsfresh.utilities.distribution', 'tsfresh.feature_extraction.extraction', 'tsfresh.feature_extraction', 'tsfresh.utilities.dataframe_functions', 'tsfresh.feature_selection.significance_tests', 'tsfresh.feature_selection.relevance', 'tsfresh.feature_selection.selection', 'tsfresh.feature_selection', 'tsfresh.convenience.relevant_extraction', 'tsfresh', 'urllib3.packages.ssl_match_hostname', 'urllib3.packages', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.exceptions', 'urllib3.util.wait', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.connection', '_cffi_backend', '_brotli.lib', '_brotli', 'brotli._brotli', 'brotli.brotli', 'brotli', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.url', 'urllib3.util.ssl_', 'urllib3.util.timeout', 'urllib3.util.retry', 'urllib3.util', 'urllib3._collections', 'urllib3.connection', 'urllib3.fields', 'urllib3.filepost', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.request', 'urllib3.response', 'urllib3.util.queue', 'urllib3.connectionpool', 'urllib3.poolmanager', 'urllib3._version', 'urllib3', 'chardet.compat', 'chardet.enums', 'chardet.charsetprober', 'chardet.charsetgroupprober', 'chardet.codingstatemachine', 'chardet.escsm', 'chardet.escprober', 'chardet.latin1prober', 'chardet.mbcssm', 'chardet.utf8prober', 'chardet.mbcharsetprober', 'chardet.euctwfreq', 'chardet.euckrfreq', 'chardet.gb2312freq', 'chardet.big5freq', 'chardet.jisfreq', 'chardet.chardistribution', 'chardet.jpcntx', 'chardet.sjisprober', 'chardet.eucjpprober', 'chardet.gb2312prober', 'chardet.euckrprober', 'chardet.cp949prober', 'chardet.big5prober', 'chardet.euctwprober', 'chardet.mbcsgroupprober', 'chardet.sbcharsetprober', 'chardet.langcyrillicmodel', 'chardet.langgreekmodel', 'chardet.langbulgarianmodel', 'chardet.langthaimodel', 'chardet.langhebrewmodel', 'chardet.hebrewprober', 'chardet.langturkishmodel', 'chardet.sbcsgroupprober', 'chardet.universaldetector', 'chardet.version', 'chardet', 'requests.exceptions', 'requests.__version__', 'importlib.resources', 'certifi.core', 'certifi', 'requests.certs', 'http.cookiejar', 'http.cookies', 'requests.compat', 'requests._internal_utils', 'requests.cookies', 'requests.structures', 'requests.utils', 'requests.packages.urllib3.packages.ssl_match_hostname', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3.util', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.request', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3._version', 'requests.packages.urllib3', 'idna.package_data', 'idna.idnadata', 'idna.intranges', 'idna.core', 'idna', 'requests.packages.idna.package_data', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.idna.core', 'requests.packages.idna', 'requests.packages.chardet.compat', 'requests.packages.chardet.enums', 'requests.packages.chardet.charsetprober', 'requests.packages.chardet.charsetgroupprober', 'requests.packages.chardet.codingstatemachine', 'requests.packages.chardet.escsm', 'requests.packages.chardet.escprober', 'requests.packages.chardet.latin1prober', 'requests.packages.chardet.mbcssm', 'requests.packages.chardet.utf8prober', 'requests.packages.chardet.mbcharsetprober', 'requests.packages.chardet.euctwfreq', 'requests.packages.chardet.euckrfreq', 'requests.packages.chardet.gb2312freq', 'requests.packages.chardet.big5freq', 'requests.packages.chardet.jisfreq', 'requests.packages.chardet.chardistribution', 'requests.packages.chardet.jpcntx', 'requests.packages.chardet.sjisprober', 'requests.packages.chardet.eucjpprober', 'requests.packages.chardet.gb2312prober', 'requests.packages.chardet.euckrprober', 'requests.packages.chardet.cp949prober', 'requests.packages.chardet.big5prober', 'requests.packages.chardet.euctwprober', 'requests.packages.chardet.mbcsgroupprober', 'requests.packages.chardet.sbcharsetprober', 'requests.packages.chardet.langcyrillicmodel', 'requests.packages.chardet.langgreekmodel', 'requests.packages.chardet.langbulgarianmodel', 'requests.packages.chardet.langthaimodel', 'requests.packages.chardet.langhebrewmodel', 'requests.packages.chardet.hebrewprober', 'requests.packages.chardet.langturkishmodel', 'requests.packages.chardet.sbcsgroupprober', 'requests.packages.chardet.universaldetector', 'requests.packages.chardet.version', 'requests.packages.chardet', 'requests.packages', 'stringprep', 'encodings.idna', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.models', 'socks', 'urllib3.contrib.socks', 'requests.adapters', 'requests.sessions', 'requests.api', 'requests', 'tsfresh.examples.robot_execution_failures', 'tsfresh.examples.har_dataset', 'tsfresh.examples.driftbif_simulation', 'tsfresh.examples', 'sklearn._config', 'sklearn._distributor_init', 'sklearn.__check_build._check_build', 'sklearn.__check_build', 'sklearn.utils.murmurhash', 'sklearn.utils.class_weight', 'joblib.hashing', 'joblib.disk', 'joblib.logger', 'joblib.func_inspect', 'joblib.backports', 'joblib.compressor', 'joblib.numpy_pickle_utils', 'joblib.numpy_pickle_compat', 'joblib.numpy_pickle', 'joblib._store_backends', 'joblib.memory', 'joblib._multiprocessing_helpers', 'joblib._deprecated_my_exceptions', 'joblib.my_exceptions', 'joblib.externals', 'joblib.externals.loky._base', 'multiprocessing.spawn', 'multiprocessing.popen_spawn_win32', 'joblib.externals.loky.backend.compat_win32', 'joblib.externals.loky.backend.compat', 'joblib.externals.loky.backend.process', 'joblib.externals.loky.backend.context', 'multiprocessing.synchronize', 'joblib.externals.loky.backend', 'joblib.externals.loky.backend._win_reduction', 'joblib.externals.cloudpickle.compat', 'joblib.externals.cloudpickle.cloudpickle', 'joblib.externals.cloudpickle.cloudpickle_fast', 'joblib.externals.cloudpickle', 'joblib.externals.loky.backend.reduction', 'multiprocessing.queues', 'joblib.externals.loky.backend.queues', 'joblib.externals.loky.backend.utils', 'concurrent.futures.process', 'joblib.externals.loky.process_executor', 'joblib.externals.loky.reusable_executor', 'joblib.externals.loky.cloudpickle_wrapper', 'joblib.externals.loky', 'joblib.externals.loky.backend.spawn', 'joblib.externals.loky.backend.resource_tracker', 'joblib._memmapping_reducer', 'joblib.pool', 'joblib.executor', 'joblib._parallel_backends', 'joblib.parallel', 'joblib', 'sklearn.utils._joblib', 'sklearn.utils.deprecation', 'sklearn.exceptions', 'ctypes.util', 'threadpoolctl', 'sklearn.externals', 'sklearn.externals._packaging', 'sklearn.externals._packaging._structures', 'sklearn.externals._packaging.version', 'sklearn.utils.fixes', 'sklearn.utils._estimator_html_repr', 'sklearn.utils.validation', 'sklearn.utils', 'sklearn.utils._tags', 'sklearn.base', 'sklearn.utils._openmp_helpers', 'sklearn.utils._show_versions', 'sklearn', 'sklearn.utils.multiclass', 'sklearn.utils._logistic_sigmoid', '_cython_0_29_26', 'sklearn.utils.sparsefuncs_fast', 'sklearn.utils.extmath', 'sklearn.utils.sparsefuncs', 'sklearn.preprocessing._function_transformer', 'sklearn.utils._mask', 'sklearn.utils._encode', 'sklearn.preprocessing._encoders', 'sklearn.preprocessing._data', 'sklearn.preprocessing._label', 'sklearn.preprocessing._discretization', 'sklearn.utils.stats', 'sklearn.preprocessing._csr_polynomial_expansion', 'sklearn.preprocessing._polynomial', 'sklearn.preprocessing', 'sklearn.metrics._base', 'sklearn.metrics._ranking', 'sklearn.metrics._classification', 'sklearn.utils._typedefs', 'sklearn.utils._readonly_array_wrapper', 'sklearn.metrics._dist_metrics', 'sklearn.metrics.cluster._expected_mutual_info_fast', 'sklearn.metrics.cluster._supervised', 'sklearn.metrics._pairwise_fast', 'sklearn.metrics.pairwise', 'sklearn.metrics.cluster._unsupervised', 'sklearn.metrics.cluster._bicluster', 'sklearn.metrics.cluster', 'sklearn._loss', 'sklearn._loss.glm_distribution', 'sklearn.metrics._regression', 'sklearn.metrics._scorer', 'sklearn.metrics._plot', 'sklearn.metrics._plot.base', 'sklearn.metrics._plot.det_curve', 'sklearn.metrics._plot.roc_curve', 'sklearn.metrics._plot.precision_recall_curve', 'sklearn.metrics._plot.confusion_matrix', 'sklearn.metrics', 'sklearn.neighbors._partition_nodes', 'sklearn.neighbors._ball_tree', 'sklearn.neighbors._kd_tree', 'sklearn.neighbors._distance_metric', 'sklearn.neighbors._base', 'sklearn.neighbors._unsupervised', 'sklearn.neighbors._graph', 'sklearn.neighbors._classification', 'sklearn.neighbors._regression', 'sklearn.neighbors._nearest_centroid', 'sklearn.neighbors._kde', 'sklearn.utils.metaestimators', 'sklearn.neighbors._lof', 'sklearn.decomposition._cdnmf_fast', 'sklearn.decomposition._nmf', 'sklearn.decomposition._base', 'sklearn.utils._arpack', 'sklearn.decomposition._pca', 'sklearn.decomposition._incremental_pca', 'sklearn.decomposition._kernel_pca', 'sklearn.utils._random', 'sklearn.utils._seq_dataset', 'sklearn.linear_model._base', 'sklearn.linear_model._bayes', 'sklearn.utils._cython_blas', 'sklearn.utils.arrayfuncs', 'sklearn.model_selection._split', 'sklearn.model_selection._validation', 'sklearn.utils.random', 'sklearn.model_selection._search', 'sklearn.model_selection', 'sklearn.linear_model._least_angle', 'sklearn.linear_model._cd_fast', 'sklearn.linear_model._coordinate_descent', 'sklearn.utils.optimize', 'sklearn.linear_model._glm.link', 'sklearn.linear_model._glm.glm', 'sklearn.linear_model._glm', 'sklearn.linear_model._huber', 'sklearn.utils._weight_vector', 'sklearn.linear_model._sgd_fast', 'sklearn.linear_model._stochastic_gradient', 'sklearn.linear_model._sag_fast', 'sklearn.linear_model._sag', 'sklearn.linear_model._ridge', 'sklearn.svm._libsvm', 'sklearn.svm._liblinear', 'sklearn.svm._libsvm_sparse', 'sklearn.svm._base', 'sklearn.svm._classes', 'sklearn.svm._bounds', 'sklearn.svm', 'sklearn.linear_model._logistic', 'sklearn.linear_model._omp', 'sklearn.linear_model._passive_aggressive', 'sklearn.linear_model._perceptron', 'sklearn.linear_model._quantile', 'sklearn.linear_model._ransac', 'sklearn.linear_model._theil_sen', 'sklearn.linear_model', 'sklearn.decomposition._dict_learning', 'sklearn.decomposition._sparse_pca', 'sklearn.decomposition._truncated_svd', 'sklearn.decomposition._fastica', 'sklearn.decomposition._factor_analysis', 'sklearn.decomposition._online_lda_fast', 'sklearn.decomposition._lda', 'sklearn.decomposition', 'sklearn.neighbors._nca', 'sklearn.neighbors', 'sklearn.tree._utils', 'sklearn.neighbors._quad_tree', 'sklearn.tree._tree', 'sklearn.tree._splitter', 'sklearn.tree._criterion', 'sklearn.tree._classes', 'sklearn.tree._reingold_tilford', 'sklearn.tree._export', 'sklearn.tree', 'sklearn.ensemble._base', 'sklearn.ensemble._forest', 'sklearn.ensemble._bagging', 'sklearn.ensemble._iforest', 'sklearn.ensemble._weight_boosting', 'sklearn.ensemble._gradient_boosting', 'sklearn.dummy', 'sklearn.ensemble._gb_losses', 'sklearn.ensemble._gb', 'sklearn.ensemble._voting', 'sklearn.ensemble._stacking', 'sklearn.ensemble._hist_gradient_boosting', 'sklearn.ensemble._hist_gradient_boosting.common', 'sklearn.ensemble._hist_gradient_boosting._gradient_boosting', 'sklearn.ensemble._hist_gradient_boosting._binning', 'sklearn.ensemble._hist_gradient_boosting._bitset', 'sklearn.ensemble._hist_gradient_boosting.binning', 'sklearn.ensemble._hist_gradient_boosting.splitting', 'sklearn.ensemble._hist_gradient_boosting.histogram', 'sklearn.ensemble._hist_gradient_boosting._predictor', 'sklearn.ensemble._hist_gradient_boosting.predictor', 'sklearn.ensemble._hist_gradient_boosting.utils', 'sklearn.ensemble._hist_gradient_boosting.grower', 'sklearn.ensemble._hist_gradient_boosting._loss', 'sklearn.ensemble._hist_gradient_boosting.loss', 'sklearn.ensemble._hist_gradient_boosting.gradient_boosting', 'sklearn.ensemble', 'sklearn.feature_selection._base', 'sklearn.feature_selection._univariate_selection', 'sklearn.feature_selection._variance_threshold', 'sklearn.feature_selection._rfe', 'sklearn.feature_selection._from_model', 'sklearn.feature_selection._sequential', 'sklearn.feature_selection._mutual_info', 'sklearn.feature_selection', 'src', 'src.utils', 'matplotlib', 'matplotlib.cbook.deprecation', 'matplotlib.cbook', 'matplotlib._animation_data', 'matplotlib.animation', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib.docstring', 'matplotlib._color_data', 'matplotlib.colors', 'cycler', 'matplotlib.rcsetup', 'matplotlib._version', 'matplotlib.ft2font', 'kiwisolver']
2022-09-05 21:03:41,148 [23744] DEBUG    matplotlib:241: [JupyterRequire] CACHEDIR=C:\Users\sasha\.matplotlib
2022-09-05 21:03:41,155 [23744] DEBUG    matplotlib.font_manager:1436: [JupyterRequire] Using fontManager instance from C:\Users\sasha\.matplotlib\fontlist-v330.json
2022-09-05 21:03:41,541 [23744] DEBUG    matplotlib.pyplot:289: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2022-09-05 21:03:41,545 [23744] DEBUG    matplotlib.pyplot:289: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2022-09-05 21:05:08,000 [23744] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2022-09-05 21:05:08,013 [23744] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 1
2022-09-05 21:05:08,014 [23744] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[replace] old[1:3] new[1:1]
2022-09-05 21:05:08,054 [23744] DEBUG    parso.python.diff:421: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2022-09-05 21:05:08,055 [23744] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2022-09-05 21:05:08,485 [23744] DEBUG    parso.cache:143: [JupyterRequire] pickle loaded: C:\Users\sasha\anaconda3\lib\site-packages\jedi\third_party\typeshed\stdlib\2and3\builtins.pyi
2022-09-05 21:05:08,574 [23744] DEBUG    parso.cache:143: [JupyterRequire] pickle loaded: C:\Users\sasha\anaconda3\lib\site-packages\jedi\third_party\typeshed\stdlib\3\sys.pyi
2022-09-05 21:05:26,161 [23744] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2022-09-05 21:05:26,161 [23744] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 5
2022-09-05 21:05:26,161 [23744] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[replace] old[1:1] new[1:5]
2022-09-05 21:05:26,162 [23744] DEBUG    parso.python.diff:421: [JupyterRequire] parse_part from 1 to 5 (to 4 in part parser)
2022-09-05 21:05:26,162 [23744] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2022-09-05 21:05:26,805 [23744] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2022-09-05 21:05:26,805 [23744] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 5; new: 4
2022-09-05 21:05:26,805 [23744] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[equal] old[1:3] new[1:3]
2022-09-05 21:05:26,806 [23744] DEBUG    parso.python.diff:378: [JupyterRequire] copy old[1:1] new[1:1]
2022-09-05 21:05:26,806 [23744] DEBUG    parso.python.diff:421: [JupyterRequire] parse_part from 2 to 4 (to 3 in part parser)
2022-09-05 21:05:26,806 [23744] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[replace] old[4:5] new[4:4]
2022-09-05 21:05:26,806 [23744] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2022-09-05 21:05:29,841 [23744] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2022-09-05 21:05:29,841 [23744] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 3
2022-09-05 21:05:29,842 [23744] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[equal] old[1:2] new[1:2]
2022-09-05 21:05:29,842 [23744] DEBUG    parso.python.diff:378: [JupyterRequire] copy old[1:1] new[1:1]
2022-09-05 21:05:29,842 [23744] DEBUG    parso.python.diff:421: [JupyterRequire] parse_part from 2 to 3 (to 2 in part parser)
2022-09-05 21:05:29,842 [23744] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[replace] old[3:4] new[3:3]
2022-09-05 21:05:29,843 [23744] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2022-09-05 21:09:30,583 [2084] DEBUG    matplotlib.font_manager:1334: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2022-09-05 21:09:30,640 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2022-09-05 21:09:30,641 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,641 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,641 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,642 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,642 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,642 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,642 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,643 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2022-09-05 21:09:30,643 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-09-05 21:09:30,644 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2022-09-05 21:09:30,644 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,644 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,645 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-09-05 21:09:30,645 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-09-05 21:09:30,645 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2022-09-05 21:09:30,646 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,646 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-09-05 21:09:30,646 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,646 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2022-09-05 21:09:30,647 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2022-09-05 21:09:30,647 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,647 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-09-05 21:09:30,647 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2022-09-05 21:09:30,648 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,648 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-09-05 21:09:30,648 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2022-09-05 21:09:30,648 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,649 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,649 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-09-05 21:09:30,649 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-09-05 21:09:30,649 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,650 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2022-09-05 21:09:30,650 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,650 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2022-09-05 21:09:30,650 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-09-05 21:09:30,650 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,650 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-09-05 21:09:30,651 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,651 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 21:09:30,651 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
2022-09-05 21:09:30,651 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2022-09-05 21:09:30,651 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 21:09:30,651 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,652 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,652 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
2022-09-05 21:09:30,652 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
2022-09-05 21:09:30,652 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,652 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2022-09-05 21:09:30,652 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,653 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,653 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,653 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 21:09:30,653 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Book Basic' (GenBkBasB.ttf) normal normal 700 normal>) = 10.335
2022-09-05 21:09:30,653 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2022-09-05 21:09:30,653 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 21:09:30,654 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
2022-09-05 21:09:30,654 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 21:09:30,654 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2022-09-05 21:09:30,654 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2022-09-05 21:09:30,654 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,654 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,654 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,655 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 21:09:30,655 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Bold.ttf) normal normal 700 condensed>) = 10.535
2022-09-05 21:09:30,655 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,655 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
2022-09-05 21:09:30,655 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2022-09-05 21:09:30,655 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 21:09:30,656 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,656 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 21:09:30,656 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
2022-09-05 21:09:30,656 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,656 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2022-09-05 21:09:30,656 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 21:09:30,656 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,657 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 21:09:30,657 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2022-09-05 21:09:30,657 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,657 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-09-05 21:09:30,657 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 21:09:30,657 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Book Basic' (GenBkBasR.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,658 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2022-09-05 21:09:30,658 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2022-09-05 21:09:30,658 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
2022-09-05 21:09:30,658 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,658 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2022-09-05 21:09:30,659 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,659 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,659 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,659 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,659 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,659 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
2022-09-05 21:09:30,659 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
2022-09-05 21:09:30,660 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Basic' (GenBasI.ttf) italic normal 400 normal>) = 11.05
2022-09-05 21:09:30,660 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2022-09-05 21:09:30,660 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,660 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,660 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2022-09-05 21:09:30,660 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,661 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Basic' (GenBasI.ttf) italic normal 400 normal>) = 11.05
2022-09-05 21:09:30,661 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2022-09-05 21:09:30,661 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,661 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Bold.ttf) normal normal 700 condensed>) = 10.535
2022-09-05 21:09:30,661 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 21:09:30,661 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-BoldOblique.ttf) oblique normal 700 condensed>) = 1.535
2022-09-05 21:09:30,662 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,662 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 21:09:30,662 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2022-09-05 21:09:30,662 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2022-09-05 21:09:30,662 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-09-05 21:09:30,662 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,663 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
2022-09-05 21:09:30,663 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,663 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
2022-09-05 21:09:30,663 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,663 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-ExtraLight.ttf) normal normal 200 normal>) = 0.24
2022-09-05 21:09:30,663 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Basic' (GenBasBI.ttf) italic normal 700 normal>) = 11.335
2022-09-05 21:09:30,663 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Basic' (GenBasB.ttf) normal normal 700 normal>) = 10.335
2022-09-05 21:09:30,664 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,664 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,664 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
2022-09-05 21:09:30,664 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2022-09-05 21:09:30,664 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,664 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2022-09-05 21:09:30,665 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,665 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 21:09:30,665 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,665 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2022-09-05 21:09:30,665 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 21:09:30,665 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,665 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
2022-09-05 21:09:30,666 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
2022-09-05 21:09:30,666 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,666 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-09-05 21:09:30,666 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,666 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 21:09:30,666 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,667 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 21:09:30,667 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
2022-09-05 21:09:30,667 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,667 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2022-09-05 21:09:30,667 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,667 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Oblique.ttf) oblique normal 400 condensed>) = 1.25
2022-09-05 21:09:30,668 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,668 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,668 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 21:09:30,668 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,669 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Bold.ttf) normal normal 700 condensed>) = 0.5349999999999999
2022-09-05 21:09:30,669 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arimo' (Arimo-Italic.ttf) italic normal 400 normal>) = 11.05
2022-09-05 21:09:30,669 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2022-09-05 21:09:30,669 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,669 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
2022-09-05 21:09:30,669 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2022-09-05 21:09:30,670 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,670 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,670 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2022-09-05 21:09:30,670 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,670 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,670 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 21:09:30,670 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 21:09:30,671 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
2022-09-05 21:09:30,671 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,671 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 21:09:30,671 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2022-09-05 21:09:30,671 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2022-09-05 21:09:30,671 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 21:09:30,672 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2022-09-05 21:09:30,672 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 21:09:30,672 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2022-09-05 21:09:30,672 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2022-09-05 21:09:30,672 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arimo' (Arimo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,672 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Bold.ttf) normal normal 700 condensed>) = 0.5349999999999999
2022-09-05 21:09:30,673 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
2022-09-05 21:09:30,673 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeamViewer15' (teamviewer15.otf) normal normal 500 normal>) = 10.145
2022-09-05 21:09:30,673 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2022-09-05 21:09:30,673 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,673 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 21:09:30,673 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arimo' (Arimo-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-09-05 21:09:30,673 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 21:09:30,674 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2022-09-05 21:09:30,674 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
2022-09-05 21:09:30,674 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed.ttf) normal normal 400 condensed>) = 0.25
2022-09-05 21:09:30,674 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 21:09:30,674 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,674 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,674 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,675 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
2022-09-05 21:09:30,675 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2022-09-05 21:09:30,675 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2022-09-05 21:09:30,675 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 21:09:30,675 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-09-05 21:09:30,675 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-09-05 21:09:30,676 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,676 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Book Basic' (GenBkBasBI.ttf) italic normal 700 normal>) = 11.335
2022-09-05 21:09:30,676 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,676 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 21:09:30,676 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,677 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-09-05 21:09:30,677 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,677 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
2022-09-05 21:09:30,677 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2022-09-05 21:09:30,677 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 21:09:30,678 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,678 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2022-09-05 21:09:30,678 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2022-09-05 21:09:30,678 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-09-05 21:09:30,678 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,678 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,678 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2022-09-05 21:09:30,679 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
2022-09-05 21:09:30,679 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,679 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2022-09-05 21:09:30,679 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
2022-09-05 21:09:30,679 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
2022-09-05 21:09:30,679 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,680 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,680 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,680 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 21:09:30,680 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 21:09:30,680 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2022-09-05 21:09:30,680 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
2022-09-05 21:09:30,681 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 21:09:30,681 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Oblique.ttf) oblique normal 400 condensed>) = 1.25
2022-09-05 21:09:30,681 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
2022-09-05 21:09:30,681 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2022-09-05 21:09:30,681 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 21:09:30,681 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,681 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,682 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
2022-09-05 21:09:30,682 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2022-09-05 21:09:30,682 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,682 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-09-05 21:09:30,682 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 21:09:30,682 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
2022-09-05 21:09:30,683 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 21:09:30,683 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,683 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Book Basic' (GenBkBasI.ttf) italic normal 400 normal>) = 11.05
2022-09-05 21:09:30,683 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeamViewer15' (teamviewer15.otf) normal normal 500 normal>) = 10.145
2022-09-05 21:09:30,683 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2022-09-05 21:09:30,683 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed.ttf) normal normal 400 condensed>) = 10.25
2022-09-05 21:09:30,683 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
2022-09-05 21:09:30,684 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2022-09-05 21:09:30,684 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 21:09:30,684 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,684 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 21:09:30,684 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,684 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2022-09-05 21:09:30,685 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,685 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2022-09-05 21:09:30,685 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2022-09-05 21:09:30,685 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2022-09-05 21:09:30,685 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,685 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,686 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 21:09:30,686 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,686 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Basic' (GenBasB.ttf) normal normal 700 normal>) = 10.335
2022-09-05 21:09:30,686 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
2022-09-05 21:09:30,686 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-BoldOblique.ttf) oblique normal 700 condensed>) = 1.535
2022-09-05 21:09:30,686 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,686 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2022-09-05 21:09:30,687 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-09-05 21:09:30,687 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 21:09:30,687 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
2022-09-05 21:09:30,687 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,687 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,687 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Italic.ttf) italic normal 400 condensed>) = 11.25
2022-09-05 21:09:30,688 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-09-05 21:09:30,688 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,688 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,688 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,688 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2022-09-05 21:09:30,688 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,689 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 21:09:30,689 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2022-09-05 21:09:30,689 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,689 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,689 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,689 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2022-09-05 21:09:30,689 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arimo' (Arimo-Regular.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,690 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,690 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,690 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 21:09:30,690 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,690 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
2022-09-05 21:09:30,690 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,691 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,691 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 21:09:30,691 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,691 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 21:09:30,691 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2022-09-05 21:09:30,691 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,692 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 21:09:30,692 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,692 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,692 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
2022-09-05 21:09:30,692 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2022-09-05 21:09:30,692 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,693 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2022-09-05 21:09:30,693 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,693 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Book Basic' (GenBkBasB.ttf) normal normal 700 normal>) = 10.335
2022-09-05 21:09:30,693 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2022-09-05 21:09:30,693 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2022-09-05 21:09:30,693 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2022-09-05 21:09:30,693 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,694 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,694 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,694 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2022-09-05 21:09:30,694 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,694 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 21:09:30,694 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,695 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed.ttf) normal normal 400 condensed>) = 10.25
2022-09-05 21:09:30,695 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 21:09:30,695 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
2022-09-05 21:09:30,695 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
2022-09-05 21:09:30,695 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 21:09:30,695 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2022-09-05 21:09:30,696 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2022-09-05 21:09:30,696 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2022-09-05 21:09:30,696 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2022-09-05 21:09:30,696 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2022-09-05 21:09:30,696 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,696 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arimo' (Arimo-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2022-09-05 21:09:30,697 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2022-09-05 21:09:30,697 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2022-09-05 21:09:30,697 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2022-09-05 21:09:30,697 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Book Basic' (GenBkBasI.ttf) italic normal 400 normal>) = 11.05
2022-09-05 21:09:30,697 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,697 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2022-09-05 21:09:30,697 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 21:09:30,698 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
2022-09-05 21:09:30,698 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
2022-09-05 21:09:30,698 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Basic' (GenBasBI.ttf) italic normal 700 normal>) = 11.335
2022-09-05 21:09:30,698 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,698 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,698 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2022-09-05 21:09:30,699 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arimo' (Arimo-Bold.ttf) normal normal 700 normal>) = 10.335
2022-09-05 21:09:30,699 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 21:09:30,699 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2022-09-05 21:09:30,699 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2022-09-05 21:09:30,699 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-ExtraLight.ttf) normal normal 200 normal>) = 0.24
2022-09-05 21:09:30,699 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,700 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,700 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Book Basic' (GenBkBasBI.ttf) italic normal 700 normal>) = 11.335
2022-09-05 21:09:30,700 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
2022-09-05 21:09:30,700 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arimo' (Arimo-Italic.ttf) italic normal 400 normal>) = 11.05
2022-09-05 21:09:30,700 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 21:09:30,700 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
2022-09-05 21:09:30,700 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,701 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
2022-09-05 21:09:30,701 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2022-09-05 21:09:30,701 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2022-09-05 21:09:30,701 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
2022-09-05 21:09:30,701 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Italic.ttf) italic normal 400 condensed>) = 11.25
2022-09-05 21:09:30,701 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2022-09-05 21:09:30,702 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,702 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 21:09:30,702 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2022-09-05 21:09:30,702 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2022-09-05 21:09:30,702 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,702 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 21:09:30,703 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,703 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-09-05 21:09:30,703 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,703 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2022-09-05 21:09:30,703 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 21:09:30,703 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Basic' (GenBasR.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,703 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2022-09-05 21:09:30,704 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
2022-09-05 21:09:30,704 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2022-09-05 21:09:30,704 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 21:09:30,704 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,704 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,704 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
2022-09-05 21:09:30,705 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2022-09-05 21:09:30,705 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2022-09-05 21:09:30,705 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,705 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2022-09-05 21:09:30,705 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,705 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
2022-09-05 21:09:30,705 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2022-09-05 21:09:30,706 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2022-09-05 21:09:30,706 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2022-09-05 21:09:30,706 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Basic' (GenBasR.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,706 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
2022-09-05 21:09:30,706 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gentium Book Basic' (GenBkBasR.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,706 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2022-09-05 21:09:30,707 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2022-09-05 21:09:30,707 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,707 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arimo' (Arimo-Bold.ttf) normal normal 700 normal>) = 10.335
2022-09-05 21:09:30,707 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,707 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed.ttf) normal normal 400 condensed>) = 0.25
2022-09-05 21:09:30,707 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
2022-09-05 21:09:30,707 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2022-09-05 21:09:30,708 [2084] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2022-09-05 21:09:30,708 [2084] DEBUG    matplotlib.font_manager:1366: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\sasha\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2022-09-05 21:12:56,646 [27184] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2022-09-05 21:12:56,646 [27184] DEBUG    root:93: [JupyterRequire] Initializing comms.
2022-09-05 21:12:56,647 [27184] INFO     root:247: [JupyterRequire] Initializing comms.
2022-09-05 21:12:56,655 [27184] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2022-09-05 21:12:56,656 [27184] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2022-09-05 21:12:56,656 [27184] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2022-09-05 21:12:57,606 [27184] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2022-09-05 21:12:57,606 [27184] DEBUG    root:93: [JupyterRequire] Initializing comms.
2022-09-05 21:12:57,606 [27184] INFO     root:247: [JupyterRequire] Initializing comms.
2022-09-05 21:12:57,609 [27184] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2022-09-05 21:12:57,609 [27184] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2022-09-05 21:12:57,610 [27184] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2022-09-06 10:59:45,401 [23744] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2022-09-06 10:59:45,869 [23744] DEBUG    root:93: [JupyterRequire] Initializing comms.
2022-09-06 10:59:46,000 [23744] INFO     root:247: [JupyterRequire] Initializing comms.
2022-09-06 10:59:49,417 [7228] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2022-09-06 10:59:49,621 [7228] DEBUG    root:93: [JupyterRequire] Initializing comms.
2022-09-06 10:59:49,729 [7228] INFO     root:247: [JupyterRequire] Initializing comms.
2022-09-06 10:59:50,447 [23744] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2022-09-06 10:59:50,725 [23744] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2022-09-06 10:59:50,725 [23744] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2022-09-06 10:59:50,735 [7228] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2022-09-06 10:59:51,096 [7228] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2022-09-06 10:59:51,097 [7228] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2022-09-06 10:59:53,186 [20684] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2022-09-06 10:59:53,272 [20684] DEBUG    root:93: [JupyterRequire] Initializing comms.
2022-09-06 10:59:53,272 [20684] INFO     root:247: [JupyterRequire] Initializing comms.
2022-09-06 10:59:55,635 [20684] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2022-09-06 10:59:55,975 [20684] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2022-09-06 10:59:55,976 [20684] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2022-09-19 17:50:16,717 [520] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2022-09-19 17:50:16,720 [520] DEBUG    root:93: [JupyterRequire] Initializing comms.
2022-09-19 17:50:16,722 [520] INFO     root:247: [JupyterRequire] Initializing comms.
2022-09-19 17:50:16,735 [520] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2022-09-19 17:50:16,740 [520] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2022-09-19 17:50:16,741 [520] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2022-09-19 17:50:17,615 [520] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2022-09-19 17:50:17,615 [520] DEBUG    root:93: [JupyterRequire] Initializing comms.
2022-09-19 17:50:17,615 [520] INFO     root:247: [JupyterRequire] Initializing comms.
2022-09-19 17:50:17,619 [520] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2022-09-19 17:50:17,619 [520] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2022-09-19 17:50:17,621 [520] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2022-09-19 20:12:48,087 [520] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2022-09-19 20:12:48,087 [520] DEBUG    root:93: [JupyterRequire] Initializing comms.
2022-09-19 20:12:48,087 [520] INFO     root:247: [JupyterRequire] Initializing comms.
2022-09-19 20:12:48,090 [520] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2022-09-19 20:12:48,091 [520] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2022-09-19 20:12:48,091 [520] DEBUG    root:97: [JupyterRequire] Registering comm targets.
